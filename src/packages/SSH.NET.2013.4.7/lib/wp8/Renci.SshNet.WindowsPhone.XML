<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Renci.SshNet.WindowsPhone</name>
    </assembly>
    <members>
        <member name="T:Renci.SshNet.AuthenticationMethod">
            <summary>
            Base class for all supported authentication methods
            </summary>
        </member>
        <member name="M:Renci.SshNet.AuthenticationMethod.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.AuthenticationMethod"/> class.
            </summary>
            <param name="username">The username.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or null.</exception>
        </member>
        <member name="M:Renci.SshNet.AuthenticationMethod.Authenticate(Renci.SshNet.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to authenticate.</param>
            <returns>Result of authentication  process.</returns>
        </member>
        <member name="P:Renci.SshNet.AuthenticationMethod.Name">
            <summary>
            Gets authentication method name
            </summary>
        </member>
        <member name="P:Renci.SshNet.AuthenticationMethod.Username">
            <summary>
            Gets connection username.
            </summary>
        </member>
        <member name="P:Renci.SshNet.AuthenticationMethod.ErrorMessage">
            <summary>
            Gets the authentication error message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.AuthenticationMethod.AllowedAuthentications">
            <summary>
            Gets list of allowed authentications.
            </summary>
        </member>
        <member name="T:Renci.SshNet.AuthenticationResult">
            <summary>
            Represents possible authentication methods results
            </summary>
        </member>
        <member name="F:Renci.SshNet.AuthenticationResult.Success">
            <summary>
            Authentication was successful.
            </summary>
        </member>
        <member name="F:Renci.SshNet.AuthenticationResult.PartialSuccess">
            <summary>
            Authentication completed with partial success.
            </summary>
        </member>
        <member name="F:Renci.SshNet.AuthenticationResult.Failure">
            <summary>
            Authentication failed.
            </summary>
        </member>
        <member name="T:Renci.SshNet.BaseClient">
            <summary>
            Serves as base class for client implementations, provides common client functionality.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.BaseClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionInfo"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Connect">
            <summary>
            Connects client to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Disconnect">
            <summary>
            Disconnects client from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.SendKeepAlive">
            <summary>
            Sends keep-alive message to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.OnConnecting">
            <summary>
            Called when client is connecting to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.OnConnected">
            <summary>
            Called when client is connected to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.OnDisconnecting">
            <summary>
            Called when client is disconnecting from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.OnDisconnected">
            <summary>
            Called when client is disconnected from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.BaseClient"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.BaseClient.Session">
            <summary>
            Gets current session.
            </summary>
        </member>
        <member name="P:Renci.SshNet.BaseClient.ConnectionInfo">
            <summary>
            Gets the connection info.
            </summary>
        </member>
        <member name="P:Renci.SshNet.BaseClient.IsConnected">
            <summary>
            Gets a value indicating whether this client is connected to the server.
            </summary>
            <value>
            	<c>true</c> if this client is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.BaseClient.KeepAliveInterval">
            <summary>
            Gets or sets the keep alive interval in seconds.
            </summary>
            <value>
            The keep alive interval in seconds.
            </value>
        </member>
        <member name="E:Renci.SshNet.BaseClient.ErrorOccurred">
            <summary>
            Occurs when an error occurred.
            </summary>
            <example>
              <code source="..\..\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient Connect ErrorOccurred" language="C#" title="Handle ErrorOccurred event" />
            </example>
        </member>
        <member name="E:Renci.SshNet.BaseClient.HostKeyReceived">
            <summary>
            Occurs when host key received.
            </summary>
            <example>
              <code source="..\..\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient Connect HostKeyReceived" language="C#" title="Handle HostKeyReceived event" />
            </example>
        </member>
        <member name="T:Renci.SshNet.CommandAsyncResult">
            <summary>
            Provides additional information for asynchronous command execution
            </summary>
        </member>
        <member name="F:Renci.SshNet.CommandAsyncResult._command">
            <summary>
            Gets or sets the command that async result was created for.
            </summary>
            <value>The channel.</value>
        </member>
        <member name="M:Renci.SshNet.CommandAsyncResult.#ctor(Renci.SshNet.SshCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.CommandAsyncResult"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.BytesReceived">
            <summary>
            Gets or sets the bytes received. If SFTP only file bytes are counted.
            </summary>
            <value>Total bytes received.</value>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.BytesSent">
            <summary>
            Gets or sets the bytes sent by SFTP.
            </summary>
            <value>Total bytes sent.</value>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
            <returns>A user-defined object that qualifies or contains information about an asynchronous operation.</returns>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.AsyncWaitHandle">
            <summary>
            Gets a <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </summary>
            <returns>A <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.</returns>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.CompletedSynchronously">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed synchronously.
            </summary>
            <returns>true if the asynchronous operation completed synchronously; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation has completed.
            </summary>
            <returns>true if the operation is complete; otherwise, false.</returns>
        </member>
        <member name="T:Renci.SshNet.Channels.Channel">
            <summary>
            Represents base class for SSH channel implementations.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Channels.Channel"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Initialize(Renci.SshNet.Session,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes the channel.
            </summary>
            <param name="session">The session.</param>
            <param name="serverChannelNumber">The server channel number.</param>
            <param name="windowSize">Size of the window.</param>
            <param name="packetSize">Size of the packet.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendEof">
            <summary>
            Sends the SSH_MSG_CHANNEL_EOF message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Close">
            <summary>
            Closes the channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnOpen(Renci.SshNet.Messages.Connection.ChannelOpenInfo)">
            <summary>
            Called when channel need to be open on the client.
            </summary>
            <param name="info">Channel open information.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnOpenConfirmation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Called when channel is opened by the server.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnOpenFailure(System.UInt32,System.String,System.String)">
            <summary>
            Called when channel failed to open.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <param name="description">The description.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnWindowAdjust(System.UInt32)">
            <summary>
            Called when channel window need to be adjust.
            </summary>
            <param name="bytesToAdd">The bytes to add.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnData(System.Byte[])">
            <summary>
            Called when channel data is received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnExtendedData(System.Byte[],System.UInt32)">
            <summary>
            Called when channel extended data is received.
            </summary>
            <param name="data">The data.</param>
            <param name="dataTypeCode">The data type code.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnEof">
            <summary>
            Called when channel has no more data to receive.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnClose">
            <summary>
            Called when channel is closed by the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnRequest(Renci.SshNet.Messages.Connection.RequestInfo)">
            <summary>
            Called when channel request received.
            </summary>
            <param name="info">Channel request information.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnSuccess">
            <summary>
            Called when channel request was successful
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnFailure">
            <summary>
            Called when channel request failed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendMessage(Renci.SshNet.Messages.Message)">
            <summary>
            Sends SSH message to the server.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendMessage(Renci.SshNet.Messages.Connection.ChannelOpenMessage)">
            <summary>
            Send message to open a channel.
            </summary>
            <param name="message">Message to send</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendMessage(Renci.SshNet.Messages.Connection.ChannelCloseMessage)">
            <summary>
            Sends close channel message to the server
            </summary>
            <param name="message">Message to send.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendMessage(Renci.SshNet.Messages.Connection.ChannelDataMessage)">
            <summary>
            Sends channel data message to the servers.
            </summary>
            <remarks>This method takes care of managing the window size.</remarks>
            <param name="message">Channel data message.</param>        
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendMessage(Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage)">
            <summary>
            Sends channel extended data message to the servers.
            </summary>
            <remarks>This method takes care of managing the window size.</remarks>
            <param name="message">Channel data message.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.WaitHandle(System.Threading.WaitHandle)">
            <summary>
            Waits for the handle to be signaled or for an error to occurs.
            </summary>
            <param name="waitHandle">The wait handle.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Channels.Channel"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.LocalChannelNumber">
            <summary>
            Gets the local channel number.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.RemoteChannelNumber">
            <summary>
            Gets the remote channel number assigned by the server.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.LocalWindowSize">
            <summary>
            Gets the size of the local window.
            </summary>
            <value>
            The size of the local window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.ServerWindowSize">
            <summary>
            Gets or sets the size of the server window.
            </summary>
            <value>
            The size of the server window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.PacketSize">
            <summary>
            Gets the size of the packet.
            </summary>
            <value>
            The size of the packet.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.IsOpen">
            <summary>
            Gets a value indicating whether this channel is open.
            </summary>
            <value>
              <c>true</c> if this channel is open; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.OpenFailed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.DataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.ExtendedDataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.EndOfData">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelEofMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.Closed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.RequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.RequestSuccessed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.RequestFailed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> message received
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.IsConnected">
            <summary>
            Gets a value indicating whether the session is connected.
            </summary>
            <value>
            	<c>true</c> if the session is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.ConnectionInfo">
            <summary>
            Gets the connection info.
            </summary>
            <value>The connection info.</value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.SessionSemaphore">
            <summary>
            Gets the session semaphore to control number of session channels
            </summary>
            <value>The session semaphore.</value>
        </member>
        <member name="T:Renci.SshNet.Channels.ChannelDirectTcpip">
            <summary>
            Implements "direct-tcpip" SSH channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Channels.ChannelDirectTcpip"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.Bind">
            <summary>
            Binds channel to remote host.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.OnData(System.Byte[])">
            <summary>
            Called when channel data is received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.OnOpenConfirmation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Called when channel is opened by the server.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.OnEof">
            <summary>
            Called when channel has no more data to receive.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.ChannelDirectTcpip.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="T:Renci.SshNet.Channels.ChannelForwardedTcpip">
            <summary>
            Implements "forwarded-tcpip" SSH channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Channels.ChannelForwardedTcpip"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.Bind(System.Net.IPAddress,System.UInt32)">
            <summary>
            Binds channel to specified connected host.
            </summary>
            <param name="connectedHost">The connected host.</param>
            <param name="connectedPort">The connected port.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.OnData(System.Byte[])">
            <summary>
            Called when channel data is received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Renci.SshNet.Channels.ChannelForwardedTcpip.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="T:Renci.SshNet.Channels.ChannelSession">
            <summary>
            Implements Session SSH channel.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelSession._failedOpenAttempts">
            <summary>
            Counts faile channel open attempts
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelSession._channelOpenResponseWaitHandle">
            <summary>
            Wait handle to signal when response was received to open the channel
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.Open">
            <summary>
            Opens the channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnOpenConfirmation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Called when channel is opened by the server.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnOpenFailure(System.UInt32,System.String,System.String)">
            <summary>
            Called when channel failed to open.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <param name="description">The description.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnClose">
            <summary>
            Called when channel is closed by the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendPseudoTerminalRequest(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})">
            <summary>
            Sends the pseudo terminal request.
            </summary>
            <param name="environmentVariable">The environment variable.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModeValues">The terminal mode values.</param>
            <returns>
            true if request was successful; otherwise false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendX11ForwardingRequest(System.Boolean,System.String,System.Byte[],System.UInt32)">
            <summary>
            Sends the X11 forwarding request.
            </summary>
            <param name="isSingleConnection">if set to <c>true</c> the it is single connection.</param>
            <param name="protocol">The protocol.</param>
            <param name="cookie">The cookie.</param>
            <param name="screenNumber">The screen number.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendEnvironmentVariableRequest(System.String,System.String)">
            <summary>
            Sends the environment variable request.
            </summary>
            <param name="variableName">Name of the variable.</param>
            <param name="variableValue">The variable value.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendShellRequest">
            <summary>
            Sends the shell request.
            </summary>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendExecRequest(System.String)">
            <summary>
            Sends the exec request.
            </summary>
            <param name="command">The command.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendBreakRequest(System.UInt32)">
            <summary>
            Sends the exec request.
            </summary>
            <param name="breakLength">Length of the break.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendSubsystemRequest(System.String)">
            <summary>
            Sends the subsystem request.
            </summary>
            <param name="subsystem">The subsystem.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendWindowChangeRequest(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sends the window change request.
            </summary>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendLocalFlowRequest(System.Boolean)">
            <summary>
            Sends the local flow request.
            </summary>
            <param name="clientCanDo">if set to <c>true</c> [client can do].</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendSignalRequest(System.String)">
            <summary>
            Sends the signal request.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendExitStatusRequest(System.UInt32)">
            <summary>
            Sends the exit status request.
            </summary>
            <param name="exitStatus">The exit status.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendExitSignalRequest(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sends the exit signal request.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <param name="coreDumped">if set to <c>true</c> [core dumped].</param>
            <param name="errorMessage">The error message.</param>
            <param name="language">The language.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendEndOfWriteRequest">
            <summary>
            Sends eow@openssh.com request.
            </summary>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendKeepAliveRequest">
            <summary>
            Sends keepalive@openssh.com request.
            </summary>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnSuccess">
            <summary>
            Called when channel request was successful
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnFailure">
            <summary>
            Called when channel request failed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendChannelOpenMessage">
            <summary>
            Sends the channel open message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Renci.SshNet.Channels.ChannelSession.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="T:Renci.SshNet.Channels.ChannelTypes">
            <summary>
            Lists channel types as defined by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelTypes.Session">
            <summary>
            session
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelTypes.X11">
            <summary>
            x11
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelTypes.ForwardedTcpip">
            <summary>
            forwarded-tcpip
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelTypes.DirectTcpip">
            <summary>
            direct-tcpip
            </summary>
        </member>
        <member name="T:Renci.SshNet.CipherInfo">
            <summary>
            Holds information about key size and cipher to use
            </summary>
        </member>
        <member name="M:Renci.SshNet.CipherInfo.#ctor(System.Int32,System.Func{System.Byte[],System.Byte[],Renci.SshNet.Security.Cryptography.Cipher})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.CipherInfo"/> class.
            </summary>
            <param name="keySize">Size of the key.</param>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="P:Renci.SshNet.CipherInfo.KeySize">
            <summary>
            Gets the size of the key.
            </summary>
            <value>
            The size of the key.
            </value>
        </member>
        <member name="P:Renci.SshNet.CipherInfo.Cipher">
            <summary>
            Gets the cipher.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.ASCIIEncoding">
            <summary>
            Implementation of ASCII Encoding
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ASCIIEncoding"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            Calculates the number of bytes produced by encoding a set of characters from the specified character array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="index">The index of the first character to encode.</param>
            <param name="count">The number of characters to encode.</param>
            <returns>
            The number of bytes produced by encoding the specified characters.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="chars"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="chars"/>. </exception>
              
            <exception cref="T:System.Text.EncoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation)-and-<see cref="P:System.Text.Encoding.EncoderFallback"/> is set to <see cref="T:System.Text.EncoderExceptionFallback"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encodes a set of characters from the specified character array into the specified byte array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="charIndex">The index of the first character to encode.</param>
            <param name="charCount">The number of characters to encode.</param>
            <param name="bytes">The byte array to contain the resulting sequence of bytes.</param>
            <param name="byteIndex">The index at which to start writing the resulting sequence of bytes.</param>
            <returns>
            The actual number of bytes written into <paramref name="bytes"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="chars"/> is null.-or- <paramref name="bytes"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="charIndex"/> or <paramref name="charCount"/> or <paramref name="byteIndex"/> is less than zero.-or- <paramref name="charIndex"/> and <paramref name="charCount"/> do not denote a valid range in <paramref name="chars"/>.-or- <paramref name="byteIndex"/> is not a valid index in <paramref name="bytes"/>. </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="bytes"/> does not have enough capacity from <paramref name="byteIndex"/> to the end of the array to accommodate the resulting bytes. </exception>
              
            <exception cref="T:System.Text.EncoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation)-and-<see cref="P:System.Text.Encoding.EncoderFallback"/> is set to <see cref="T:System.Text.EncoderExceptionFallback"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="index">The index of the first byte to decode.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>
            The number of characters produced by decoding the specified sequence of bytes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="bytes"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="bytes"/>. </exception>
              
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation)-and-<see cref="P:System.Text.Encoding.DecoderFallback"/> is set to <see cref="T:System.Text.DecoderExceptionFallback"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Decodes a sequence of bytes from the specified byte array into the specified character array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="byteIndex">The index of the first byte to decode.</param>
            <param name="byteCount">The number of bytes to decode.</param>
            <param name="chars">The character array to contain the resulting set of characters.</param>
            <param name="charIndex">The index at which to start writing the resulting set of characters.</param>
            <returns>
            The actual number of characters written into <paramref name="chars"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="bytes"/> is null.-or- <paramref name="chars"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="byteIndex"/> or <paramref name="byteCount"/> or <paramref name="charIndex"/> is less than zero.-or- <paramref name="byteIndex"/> and <paramref name="byteCount"/> do not denote a valid range in <paramref name="bytes"/>.-or- <paramref name="charIndex"/> is not a valid index in <paramref name="chars"/>. </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="chars"/> does not have enough capacity from <paramref name="charIndex"/> to the end of the array to accommodate the resulting characters. </exception>
              
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation)-and-<see cref="P:System.Text.Encoding.DecoderFallback"/> is set to <see cref="T:System.Text.DecoderExceptionFallback"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.GetMaxByteCount(System.Int32)">
            <summary>
            Calculates the maximum number of bytes produced by encoding the specified number of characters.
            </summary>
            <param name="charCount">The number of characters to encode.</param>
            <returns>
            The maximum number of bytes produced by encoding the specified number of characters.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="charCount"/> is less than zero. </exception>
              
            <exception cref="T:System.Text.EncoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation)-and-<see cref="P:System.Text.Encoding.EncoderFallback"/> is set to <see cref="T:System.Text.EncoderExceptionFallback"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.GetMaxCharCount(System.Int32)">
            <summary>
            Calculates the maximum number of characters produced by decoding the specified number of bytes.
            </summary>
            <param name="byteCount">The number of bytes to decode.</param>
            <returns>
            The maximum number of characters produced by decoding the specified number of bytes.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="byteCount"/> is less than zero. </exception>
              
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation)-and-<see cref="P:System.Text.Encoding.DecoderFallback"/> is set to <see cref="T:System.Text.DecoderExceptionFallback"/>.</exception>
        </member>
        <member name="T:Renci.SshNet.Common.AsyncResult">
            <summary>
            Base class to encapsulates the results of an asynchronous operation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Renci.SshNet.Common.AsyncResult.SetAsCompleted(System.Exception,System.Boolean)">
            <summary>
            Marks asynchronous operation as completed.
            </summary>
            <param name="exception">The exception.</param>
            <param name="completedSynchronously">if set to <c>true</c> [completed synchronously].</param>
        </member>
        <member name="M:Renci.SshNet.Common.AsyncResult.EndInvoke">
            <summary>
            Waits until the asynchronous operation completes, and then returns. 
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AsyncResult.EndInvokeCalled">
            <summary>
            Gets or sets a value indicating whether EndInvoke has been called on the current AsyncResult.
            </summary>
            <value>
            	<c>true</c> if EndInvoke has been called on the current AsyncResult; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.AsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
            <returns>A user-defined object that qualifies or contains information about an asynchronous operation.</returns>
        </member>
        <member name="P:Renci.SshNet.Common.AsyncResult.CompletedSynchronously">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed synchronously.
            </summary>
            <returns>true if the asynchronous operation completed synchronously; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.Common.AsyncResult.AsyncWaitHandle">
            <summary>
            Gets a <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </summary>
            <returns>A <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.</returns>
        </member>
        <member name="P:Renci.SshNet.Common.AsyncResult.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation has completed.
            </summary>
            <returns>true if the operation is complete; otherwise, false.</returns>
        </member>
        <member name="T:Renci.SshNet.Common.AsyncResult`1">
            <summary>
            Base class to encapsulates the results of an asynchronous operation that returns result.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:Renci.SshNet.Common.AsyncResult`1.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AsyncResult`1"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Renci.SshNet.Common.AsyncResult`1.SetAsCompleted(`0,System.Boolean)">
            <summary>
            Marks asynchronous operation as completed.
            </summary>
            <param name="result">The result.</param>
            <param name="completedSynchronously">if set to <c>true</c> [completed synchronously].</param>
        </member>
        <member name="M:Renci.SshNet.Common.AsyncResult`1.EndInvoke">
            <summary>
            Waits until the asynchronous operation completes, and then returns the value generated by the asynchronous operation. 
            </summary>
            <returns>Invocation result</returns>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationBannerEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.ConnectionInfo.AuthenticationBanner"/> event.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationEventArgs">
            <summary>
            Base class for authentication events.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationEventArgs.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationBannerEventArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationBannerEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="message">Banner message.</param>
            <param name="language">Banner language.</param>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationBannerEventArgs.BannerMessage">
            <summary>
            Gets banner message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationBannerEventArgs.Language">
            <summary>
            Gets banner language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.PasswordConnectionInfo.PasswordExpired"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs.NewPassword">
            <summary>
            Gets or sets the new password.
            </summary>
            <value>
            The new password.
            </value>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationPrompt">
            <summary>
            Provides prompt information when <see cref="E:Renci.SshNet.KeyboardInteractiveConnectionInfo.AuthenticationPrompt"/> is raised
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationPrompt.#ctor(System.Int32,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationPrompt"/> class.
            </summary>
            <param name="id">The sequence id.</param>
            <param name="isEchoed">if set to <c>true</c> the user input should be echoed.</param>
            <param name="request">The request.</param>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPrompt.Id">
            <summary>
            Gets the prompt sequence id.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPrompt.IsEchoed">
            <summary>
            Gets or sets a value indicating whether the user input should be echoed as characters are typed.
            </summary>
            <value>
              <c>true</c> if the user input should be echoed as characters are typed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPrompt.Request">
            <summary>
            Gets server information request.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPrompt.Response">
            <summary>
            Gets or sets server information response.
            </summary>
            <value>
            The response.
            </value>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationPromptEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.KeyboardInteractiveConnectionInfo.AuthenticationPrompt"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationPromptEventArgs.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Renci.SshNet.Common.AuthenticationPrompt})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationPromptEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="instruction">The instruction.</param>
            <param name="language">The language.</param>
            <param name="prompts">The information request prompts.</param>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Language">
            <summary>
            Gets prompt language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Instruction">
            <summary>
            Gets prompt instruction.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Prompts">
            <summary>
            Gets server information request prompts.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.BigInteger">
            <summary>
            Represents an arbitrarily large signed integer.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Int16,System.UInt32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> struct.
            </summary>
            <param name="sign">The sign.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Int32">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a 32-bit signed integer value.
            </summary>
            <param name="value">The value to convert to a 32-bit signed integer.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.UInt32">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to an unsigned 32-bit integer value.
            </summary>
            <param name="value">The value to convert to an unsigned 32-bit integer.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Int16">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a 16-bit signed integer value.
            </summary>
            <param name="value">The value to convert to a 16-bit signed integer.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.UInt16">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to an unsigned 16-bit integer value.
            </summary>
            <param name="value">The value to convert to an unsigned 16-bit integer.</param>
            <returns>
            An object that contains the value of the value parameter
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Byte">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to an unsigned byte value.
            </summary>
            <param name="value">The value to convert to a System.Byte.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.SByte">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a signed 8-bit value.
            </summary>
            <param name="value">The value to convert to a signed 8-bit value.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Int64">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a 64-bit signed integer value.
            </summary>
            <param name="value">The value to convert to a 64-bit signed integer.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.UInt64">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to an unsigned 64-bit integer value.
            </summary>
            <param name="value">The value to convert to an unsigned 64-bit integer.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Double">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:System.Double"/>.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Single">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a single-precision floating-point value.
            </summary>
            <param name="value">The value to convert to a single-precision floating-point value.</param>
            <returns>
            An object that contains the closest possible representation of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Decimal">
            <summary>
            Defines an explicit conversion of a System.Numerics.BigInteger object to a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:System.Decimal"/>.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Int32)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a signed 32-bit integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.UInt32)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a 32-bit unsigned integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Int16)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a signed 16-bit integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.UInt16)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a 16-bit unsigned integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Byte)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of an unsigned byte to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.SByte)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of an 8-bit signed integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Int64)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a signed 64-bit integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.UInt64)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a 64-bit unsigned integer to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(System.Double)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an explicit conversion of a <see cref="T:System.Double"/> value to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(System.Single)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an explicit conversion of a <see cref="T:System.Single"/> object to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(System.Decimal)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an explicit conversion of a <see cref="T:System.Decimal"/> object to a System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to convert to a System.Numerics.BigInteger.</param>
            <returns>
            An object that contains the value of the value parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Addition(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Adds the values of two specified <see cref="T:Renci.SshNet.Common.BigInteger"/> objects.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>
            The sum of left and right.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Subtraction(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Subtracts a <see cref="T:Renci.SshNet.Common.BigInteger"/> value from another <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>
            The result of subtracting right from left.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Multiply(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Multiplies two specified <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value to multiply.</param>
            <param name="right">The second value to multiply.</param>
            <returns>
            The product of left and right.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Division(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Divides a specified <see cref="T:Renci.SshNet.Common.BigInteger"/> value by another specified <see cref="T:Renci.SshNet.Common.BigInteger"/> value by using integer division.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>
            The integral result of the division.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Modulus(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the remainder that results from division with two specified <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>
            The remainder that results from the division.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_UnaryNegation(Renci.SshNet.Common.BigInteger)">
            <summary>
            Negates a specified BigInteger value.
            </summary>
            <param name="value">The value to negate.</param>
            <returns>
            The result of the value parameter multiplied by negative one (-1).
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_UnaryPlus(Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the value of the <see cref="T:Renci.SshNet.Common.BigInteger"/> operand. (The sign of the operand is unchanged.)
            </summary>
            <param name="value">An integer value.</param>
            <returns>
            The value of the value operand.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Increment(Renci.SshNet.Common.BigInteger)">
            <summary>
            Increments a <see cref="T:Renci.SshNet.Common.BigInteger"/> value by 1.
            </summary>
            <param name="value">The value to increment.</param>
            <returns>
            The value of the value parameter incremented by 1.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Decrement(Renci.SshNet.Common.BigInteger)">
            <summary>
            Decrements a <see cref="T:Renci.SshNet.Common.BigInteger"/> value by 1.
            </summary>
            <param name="value">The value to decrement.</param>
            <returns>
            The value of the value parameter decremented by 1.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_BitwiseAnd(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Performs a bitwise And operation on two <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
            <returns>
            The result of the bitwise And operation.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_BitwiseOr(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Performs a bitwise Or operation on two <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
            <returns>
            The result of the bitwise Or operation.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_ExclusiveOr(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Performs a bitwise exclusive Or (XOr) operation on two <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
            <returns>
            The result of the bitwise Or operation.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_OnesComplement(Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the bitwise one's complement of a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">An integer value.</param>
            <returns>
            The bitwise one's complement of value.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LeftShift(Renci.SshNet.Common.BigInteger,System.Int32)">
            <summary>
            Shifts a <see cref="T:Renci.SshNet.Common.BigInteger"/> value a specified number of bits to the left.
            </summary>
            <param name="value">The value whose bits are to be shifted.</param>
            <param name="shift">The number of bits to shift value to the left.</param>
            <returns>
            A value that has been shifted to the left by the specified number of bits.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_RightShift(Renci.SshNet.Common.BigInteger,System.Int32)">
            <summary>
            Shifts a System.Numerics.BigInteger value a specified number of bits to the right.
            </summary>
            <param name="value">The value whose bits are to be shifted.</param>
            <param name="shift">The number of bits to shift value to the right.</param>
            <returns>
            A value that has been shifted to the right by the specified number of bits.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThan(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is less than another <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThan(Renci.SshNet.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is less than a 64-bit signed integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThan(System.Int64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is less than a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThan(Renci.SshNet.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is less than a 64-bit unsigned integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThan(System.UInt64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer is less than a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is less than or equal to another System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than or equal to right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(Renci.SshNet.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is less than or equal to a 64-bit signed integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than or equal to right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(System.Int64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is less than or equal to a System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than or equal to right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(Renci.SshNet.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is less than or equal to a 64-bit unsigned integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than or equal to right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(System.UInt64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is less than or equal to right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is greater than another System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(Renci.SshNet.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger is greater than a 64-bit signed integer value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(System.Int64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is greater than a System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(Renci.SshNet.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is greater than a 64-bit unsigned integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(System.UInt64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is greater than a 64-bit unsigned integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is greater than or equal to another System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than or equal  right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(Renci.SshNet.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is greater than or equal to a 64-bit signed integer value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than or equal right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(System.Int64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than or equal right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(Renci.SshNet.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value is greater than or equal to a 64-bit unsigned integer value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than or equal right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(System.UInt64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a System.Numerics.BigInteger value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left is greater than or equal right; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Equality(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether the values of two System.Numerics.BigInteger objects are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if the left and right parameters have the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Equality(Renci.SshNet.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value and a signed long integer value are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if the left and right parameters have the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Equality(System.Int64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a signed long integer value and a System.Numerics.BigInteger value are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if the left and right parameters have the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Equality(Renci.SshNet.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a System.Numerics.BigInteger value and an unsigned long integer value are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if the left and right parameters have the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Equality(System.UInt64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether an unsigned long integer value and a System.Numerics.BigInteger value are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if the left and right parameters have the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Inequality(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether two <see cref="T:Renci.SshNet.Common.BigInteger"/> objects have different values.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left and right are not equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Inequality(Renci.SshNet.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value and a 64-bit signed integer are not equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left and right are not equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Inequality(System.Int64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer and a <see cref="T:Renci.SshNet.Common.BigInteger"/> value are not equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left and right are not equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Inequality(Renci.SshNet.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value and a 64-bit unsigned integer are not equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left and right are not equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Inequality(System.UInt64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer and a <see cref="T:Renci.SshNet.Common.BigInteger"/> value are not equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            true if left and right are not equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Abs(Renci.SshNet.Common.BigInteger)">
            <summary>
            Gets the absolute value of a System.Numerics.BigInteger object.
            </summary>
            <param name="value">A number.</param>
            <returns>The absolute value of value.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Add(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Adds two System.Numerics.BigInteger values and returns the result.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>The sum of left and right.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="obj"/> is not the same type as this instance. </exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.CompareTo(Renci.SshNet.Common.BigInteger)">
            <summary>
            Compares this instance to a second System.Numerics.BigInteger and returns 
            an integer that indicates whether the value of this instance is less than, 
            equal to, or greater than the value of the specified object.
            </summary>
            <param name="other">The object to compare.</param>
            <returns>
            A signed integer value that indicates the relationship of this instance to 
            other, as shown in the following table.Return valueDescriptionLess than zeroThe 
            current instance is less than other.ZeroThe current instance equals other.Greater 
            than zeroThe current instance is greater than other.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.CompareTo(System.UInt64)">
            <summary>
            Compares this instance to an unsigned 64-bit integer and returns an integer 
            that indicates whether the value of this instance is less than, equal to, 
            or greater than the value of the unsigned 64-bit integer.
            </summary>
            <param name="other">The unsigned 64-bit integer to compare.</param>
            <returns>A signed integer that indicates the relative value of this instance and other, 
            as shown in the following table.Return valueDescriptionLess than zeroThe 
            current instance is less than other.ZeroThe current instance equals other.Greater
            than zeroThe current instance is greater than other.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Random(System.Int32)">
            <summary>
            Generates random BigInteger number
            </summary>
            <param name="bitLength">Length of random number in bits.</param>
            <returns>Big random number.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Divide(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Divides one System.Numerics.BigInteger value by another and returns the result.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>The quotient of the division.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.DivRem(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger@)">
            <summary>
            Divides one System.Numerics.BigInteger value by another, returns the result, and returns the remainder in an output parameter.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <param name="remainder">When this method returns, contains a System.Numerics.BigInteger value that 
            represents the remainder from the division. This parameter is passed uninitialized.</param>
            <returns>The quotient of the division.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Equals(Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether the current instance and a specified System.Numerics.BigInteger object have the same value.
            </summary>
            <param name="other">The object to compare.</param>
            <returns>
            true if this System.Numerics.BigInteger object and other have the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Equals(System.Int64)">
            <summary>
            Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.
            </summary>
            <param name="other">The signed 64-bit integer value to compare.</param>
            <returns>true if the signed 64-bit integer and the current instance have the same value; otherwise, false.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance and a specified object have the same value.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>
              <c>true</c> if the obj parameter is a System.Numerics.BigInteger object or a type
              capable of implicit conversion to a System.Numerics.BigInteger value, and
              its value is equal to the value of the current System.Numerics.BigInteger
              object; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Equals(System.UInt64)">
            <summary>
            Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.
            </summary>
            <param name="other">The unsigned 64-bit integer to compare.</param>
            <returns>true if the current instance and the unsigned 64-bit integer have the same value; otherwise, false.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.GetHashCode">
            <summary>
            Returns the hash code for the current System.Numerics.BigInteger object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.GreatestCommonDivisor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Finds the greatest common divisor of two System.Numerics.BigInteger values.
            </summary>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
            <returns>The greatest common divisor of left and right.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Log(Renci.SshNet.Common.BigInteger,System.Double)">
            <summary>
            Returns the logarithm of a specified number in a specified base.
            </summary>
            <param name="value">A number whose logarithm is to be found.</param>
            <param name="baseValue">The base of the logarithm.</param>
            <returns>The base baseValue logarithm of value, as shown in the table in the Remarks section.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Log(Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the natural (base e) logarithm of a specified number.
            </summary>
            <param name="value">The number whose logarithm is to be found.</param>
            <returns>The natural (base e) logarithm of value, as shown in the table in the Remarks section.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Log10(Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the base 10 logarithm of a specified number.
            </summary>
            <param name="value">A number whose logarithm is to be found.</param>
            <returns>The base 10 logarithm of value, as shown in the table in the Remarks section.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Max(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the larger of two System.Numerics.BigInteger values.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>The left or right parameter, whichever is larger.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Min(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the smaller of two System.Numerics.BigInteger values.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>The left or right parameter, whichever is smaller.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ModPow(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Performs modulus division on a number raised to the power of another number.
            </summary>
            <param name="value">The number to raise to the exponent power.</param>
            <param name="exponent">The exponent to raise value by.</param>
            <param name="modulus">The value to divide valueexponent by.</param>
            <returns>The remainder after dividing valueexponent by modulus.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ModInverse(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Mods the inverse.
            </summary>
            <param name="bi">The bi.</param>
            <param name="modulus">The modulus.</param>
            <returns>Modulus inverted number.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.PositiveMod(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns positive remainder that results from division with two specified <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>
            Positive remainder that results from the division.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Multiply(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the product of two System.Numerics.BigInteger values.
            </summary>
            <param name="left">The first number to multiply.</param>
            <param name="right">The second number to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Negate(Renci.SshNet.Common.BigInteger)">
            <summary>
            Negates a specified System.Numerics.BigInteger value.
            </summary>
            <param name="value">The value to negate.</param>
            <returns>The result of the value parameter multiplied by negative one (-1).</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:Renci.SshNet.Common.BigInteger"/> equivalent.
            </summary>
            <param name="value">A string that contains a number to convert.</param>
            <param name="style">A bitwise combination of the enumeration values that specify the permitted format of value.</param>
            <param name="provider">An object that provides culture-specific formatting information about value.</param>
            <returns>Parsed <see cref="T:Renci.SshNet.Common.BigInteger"/> number</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a number in a specified culture-specific format to its System.Numerics.BigInteger equivalent.
            </summary>
            <param name="value">A string that contains a number to convert.</param>
            <param name="provider">An object that provides culture-specific formatting information about value.</param>
            <returns>A value that is equivalent to the number specified in the value parameter.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
            <summary>
            Converts the string representation of a number in a specified style to its System.Numerics.BigInteger equivalent.
            </summary>
            <param name="value">A string that contains a number to convert.</param>
            <param name="style">A bitwise combination of the enumeration values that specify the permitted format of value.</param>
            <returns>A value that is equivalent to the number specified in the value parameter.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Pow(Renci.SshNet.Common.BigInteger,System.Int32)">
            <summary>
            Raises a System.Numerics.BigInteger value to the power of a specified value.
            </summary>
            <param name="value">The number to raise to the exponent power.</param>
            <param name="exponent">The exponent to raise value by.</param>
            <returns>The result of raising value to the exponent power.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Remainder(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Performs integer division on two System.Numerics.BigInteger values and returns the remainder.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>The remainder after dividing dividend by divisor.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Subtract(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Subtracts one System.Numerics.BigInteger value from another and returns the result.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>The result of subtracting right from left.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ToByteArray">
            <summary>
            Converts a System.Numerics.BigInteger value to a byte array.
            </summary>
            <returns>The value of the current System.Numerics.BigInteger object converted to an array of bytes.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ToString">
            <summary>
            Converts the numeric value of the current System.Numerics.BigInteger object to its equivalent string representation.
            </summary>
            <returns>
            The string representation of the current System.Numerics.BigInteger value.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ToString(System.IFormatProvider)">
            <summary>
            Converts the numeric value of the current System.Numerics.BigInteger object 
            to its equivalent string representation by using the specified culture-specific 
            formatting information.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
            The string representation of the current System.Numerics.BigInteger value 
            in the format specified by the provider parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ToString(System.String)">
            <summary>
            Converts the numeric value of the current System.Numerics.BigInteger object
            to its equivalent string representation by using the specified format.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <returns>
            The string representation of the current System.Numerics.BigInteger value
            in the format specified by the format parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the numeric value of the current System.Numerics.BigInteger object
            to its equivalent string representation by using the specified format and
            culture-specific format information.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
            The string representation of the current System.Numerics.BigInteger value 
            as specified by the format and provider parameters.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.Globalization.CultureInfo,Renci.SshNet.Common.BigInteger@)">
            <summary>
            Tries to convert the string representation of a number in a specified style
            and culture-specific format to its System.Numerics.BigInteger equivalent,
            and returns a value that indicates whether the conversion succeeded.
            </summary>
            <param name="value">The string representation of a number. The string is interpreted using the style specified by style.</param>
            <param name="style">A bitwise combination of enumeration values that indicates the style elements
            that can be present in value. A typical value to specify is System.Globalization.NumberStyles.Integer.</param>
            <param name="cultureInfo">An object that supplies culture-specific formatting information about value.</param>
            <param name="result">When this method returns, contains the System.Numerics.BigInteger equivalent
            to the number that is contained in value, or System.Numerics.BigInteger.Zero
            if the conversion failed. The conversion fails if the value parameter is
            null or is not in a format that is compliant with style. This parameter is
            passed uninitialized.</param>
            <returns>true if the value parameter was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.TryParse(System.String,Renci.SshNet.Common.BigInteger@)">
            <summary>
            Tries to convert the string representation of a number to its System.Numerics.BigInteger
            equivalent, and returns a value that indicates whether the conversion succeeded.
            </summary>
            <param name="value">The string representation of a number.</param>
            <param name="result">When this method returns, contains the System.Numerics.BigInteger equivalent
            to the number that is contained in value, or zero (0) if the conversion fails.
            The conversion fails if the value parameter is null or is not of the correct
            format. This parameter is passed uninitialized.</param>
            <returns>true if value was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.CompareTo(System.Int64)">
            <summary>
            Compares this instance to a signed 64-bit integer and returns an integer 
            that indicates whether the value of this instance is less than, equal to, 
            or greater than the value of the signed 64-bit integer.
            </summary>
            <param name="other">The signed 64-bit integer to compare.</param>
            <returns>A signed integer value that indicates the relationship of this instance to 
            other, as shown in the following table.Return valueDescriptionLess than zeroThe 
            current instance is less than other.ZeroThe current instance equals other.Greater 
            than zero.The current instance is greater than other.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Compare(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Compares two System.Numerics.BigInteger values and returns an integer that 
            indicates whether the first value is less than, equal to, or greater than the second value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>A signed integer that indicates the relative values of left and right, 
            as shown in the following table.ValueConditionLess than zeroleft is less than right.Zeroleft 
            equals right.Greater than zeroleft is greater than right.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.PopulationCount(System.UInt32)">
            <summary>
            Populations the count.
            </summary>
            <param name="x">The x.</param>
            <returns>Returns the number of bits set in x</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.BitScanBackward(System.UInt32)">
            <summary>
            Returns the 0-based index of the most significant set bit
            </summary>
            <param name="word">The word.</param>
            <returns>0 if no bit is set</returns>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.BitLength">
            <summary>
            Gets number of bits used by the number.
            </summary>
            <value>
            The number of the bit used.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.IsEven">
            <summary>
            Indicates whether the value of the current System.Numerics.BigInteger object is an even number.
            </summary>
            <value>
              <c>true</c> if the value of the System.Numerics.BigInteger object is an even number; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.IsOne">
            <summary>
            Indicates whether the value of the current System.Numerics.BigInteger object is System.Numerics.BigInteger.One.
            </summary>
            <value>
              <c>true</c> if the value of the System.Numerics.BigInteger object is System.Numerics.BigInteger.One; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.IsPowerOfTwo">
            <summary>
            Indicates whether the value of the current System.Numerics.BigInteger object is a power of two.
            </summary>
            <value>
            	<c>true</c> if the value of the System.Numerics.BigInteger object is a power of two; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.IsZero">
            <summary>
            Indicates whether the value of the current System.Numerics.BigInteger object is System.Numerics.BigInteger.Zero.
            </summary>
            <value>
              <c>true</c> if the value of the System.Numerics.BigInteger object is System.Numerics.BigInteger.Zero; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.MinusOne">
            <summary>
            Gets a value that represents the number negative one (-1).
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.One">
            <summary>
            Gets a value that represents the number one (1).
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.Sign">
            <summary>
            Gets a number that indicates the sign (negative, positive, or zero) of the current System.Numerics.BigInteger object.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.Zero">
            <summary>
            Gets a value that represents the number 0 (zero).
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelDataEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.Channels.Channel.DataReceived"/> event and <see cref="E:Renci.SshNet.Channels.Channel.ExtendedDataReceived"/> events.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelEventArgs">
            <summary>
            Base class for all channel related events.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelEventArgs.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelEventArgs"/> class.
            </summary>
            <param name="channelNumber">The channel number.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelEventArgs.ChannelNumber">
            <summary>
            Gets the channel number.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelDataEventArgs.#ctor(System.UInt32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelDataEventArgs"/> class.
            </summary>
            <param name="channelNumber">Channel number.</param>
            <param name="data">Channel data.</param>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelDataEventArgs.#ctor(System.UInt32,System.Byte[],System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelDataEventArgs"/> class.
            </summary>
            <param name="channelNumber">Channel number.</param>
            <param name="data">Channel data.</param>
            <param name="dataTypeCode">Channel data type code.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelDataEventArgs.Data">
            <summary>
            Gets channel data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelDataEventArgs.DataTypeCode">
            <summary>
            Gets the data type code.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelOpenFailedEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.Channels.Channel.OpenFailed"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelOpenFailedEventArgs.#ctor(System.UInt32,System.UInt32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelOpenFailedEventArgs"/> class.
            </summary>
            <param name="channelNumber">Channel number.</param>
            <param name="reasonCode">Failure reason code.</param>
            <param name="description">Failure description.</param>
            <param name="language">Failure language.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelOpenFailedEventArgs.ReasonCode">
            <summary>
            Gets failure reason code.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelOpenFailedEventArgs.Description">
            <summary>
            Gets failure description.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelOpenFailedEventArgs.Language">
            <summary>
            Gets failure language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelRequestEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.Channels.Channel.RequestReceived"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelRequestEventArgs.#ctor(Renci.SshNet.Messages.Connection.RequestInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelRequestEventArgs"/> class.
            </summary>
            <param name="info">Request information.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelRequestEventArgs.Info">
            <summary>
            Gets request information.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.DerData">
            <summary>
            Base class for DER encoded data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.DerData"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.DerData"/> class.
            </summary>
            <param name="data">DER encoded data.</param>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Encode">
            <summary>
            Encodes written data as DER byte array.
            </summary>
            <returns>DER Encoded array.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.ReadBigInteger">
            <summary>
            Reads next mpint data type from internal buffer.
            </summary>
            <returns>mpint read.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.ReadInteger">
            <summary>
            Reads next int data type from internal buffer.
            </summary>
            <returns>int read.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Write(System.Boolean)">
            <summary>
            Writes BOOLEAN data into internal buffer.
            </summary>
            <param name="data">UInt32 data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Write(System.UInt32)">
            <summary>
            Writes UInt32 data into internal buffer.
            </summary>
            <param name="data">UInt32 data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Write(Renci.SshNet.Common.BigInteger)">
            <summary>
            Writes INTEGER data into internal buffer.
            </summary>
            <param name="data">BigInteger data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Write(System.Byte[])">
            <summary>
            Writes OCTETSTRING data into internal buffer.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Write(Renci.SshNet.Common.ObjectIdentifier)">
            <summary>
            Writes OBJECTIDENTIFIER data into internal buffer.
            </summary>
            <param name="identifier">The identifier.</param>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.WriteNull">
            <summary>
            Writes NULL data into internal buffer.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Write(Renci.SshNet.Common.DerData)">
            <summary>
            Writes DerData data into internal buffer.
            </summary>
            <param name="data">DerData data to write.</param>
        </member>
        <member name="P:Renci.SshNet.Common.DerData.IsEndOfData">
            <summary>
            Gets a value indicating whether end of data is reached.
            </summary>
            <value>
            	<c>true</c> if end of data is reached; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Renci.SshNet.Common.ExceptionEventArgs">
            <summary>
            Provides data for the ErrorOccured events.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ExceptionEventArgs"/> class.
            </summary>
            <param name="exception">An System.Exception that represents the error that occurred.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ExceptionEventArgs.Exception">
            <summary>
            Gets the System.Exception that represents the error that occurred.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Extensions">
            <summary>
            Collection of different extension method
            </summary>
        </member>
        <member name="M:Renci.SshNet.Extensions.IsEqualTo``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Checks whether a collection is the same as another collection
            </summary>
            <param name="value">The current instance object</param>
            <param name="compareList">The collection to compare with</param>
            <param name="comparer">The comparer object to use to compare each item in the collection.  If null uses EqualityComparer(T).Default</param>
            <returns>True if the two collections contain all the same items in the same order</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.IsEqualTo``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Checks whether a collection is the same as another collection
            </summary>
            <param name="value">The current instance object</param>
            <param name="compareList">The collection to compare with</param>
            <returns>True if the two collections contain all the same items in the same order</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.TrimLeadingZero(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Trims the leading zero from bytes array.
            </summary>
            <param name="data">The data.</param>
            <returns>Data without leading zeros.</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.CreateInstance``1(System.Type)">
            <summary>
            Creates an instance of the specified type using that type's default constructor.
            </summary>
            <typeparam name="T">The type to create.</typeparam>
            <param name="type">Type of the instance to create.</param>
            <returns>A reference to the newly created object.</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.GetBytes(System.UInt16)">
            <summary>
            Returns the specified 16-bit unsigned integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 2.</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.GetBytes(System.UInt32)">
            <summary>
            Returns the specified 32-bit unsigned integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 4.</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.GetBytes(System.UInt64)">
            <summary>
            Returns the specified 64-bit unsigned integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 8.</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.GetBytes(System.Int64)">
            <summary>
            Returns the specified 64-bit signed integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 8.</returns>
        </member>
        <member name="T:Renci.SshNet.Common.Extensions">
            <summary>
            Collection of different extension method specific for Silverlight
            </summary>
            <summary>
            Collection of different extension method specific for Windows Phone
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.IsNullOrWhiteSpace(System.String)">
            <summary>
            Determines whether [is null or white space] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if [is null or white space] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.Dispose(System.Net.Sockets.Socket)">
            <summary>
            Disposes the specified socket.
            </summary>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.Dispose(System.Threading.WaitHandle)">
            <summary>
            Disposes the specified handle.
            </summary>
            <param name="handle">The handle.</param>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.Dispose(System.Security.Cryptography.HashAlgorithm)">
            <summary>
            Disposes the specified algorithm.
            </summary>
            <param name="algorithm">The algorithm.</param>
        </member>
        <member name="T:Renci.SshNet.Common.HostKeyEventArgs">
            <summary>
            Provides data for the HostKeyReceived event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.HostKeyEventArgs.#ctor(Renci.SshNet.Security.KeyHostAlgorithm)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.HostKeyEventArgs"/> class.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="P:Renci.SshNet.Common.HostKeyEventArgs.CanTrust">
            <summary>
            Gets or sets a value indicating whether host key can be trusted.
            </summary>
            <value>
              <c>true</c> if host key can be trusted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.HostKeyEventArgs.HostKey">
            <summary>
            Gets the host key.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.HostKeyEventArgs.HostKeyName">
            <summary>
            Gets the host key name.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.HostKeyEventArgs.FingerPrint">
            <summary>
            Gets the finger print.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.HostKeyEventArgs.KeyLength">
            <summary>
            Gets the length of the key in bits.
            </summary>
            <value>
            The length of the key in bits.
            </value>
        </member>
        <member name="T:Renci.SshNet.Common.ObjectIdentifier">
            <summary>
            Describes object identifier for DER encoding
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ObjectIdentifier.#ctor(System.UInt64[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ObjectIdentifier"/> class.
            </summary>
            <param name="identifiers">The identifiers.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ObjectIdentifier.Identifiers">
            <summary>
            Gets the object identifier.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.PipeStream">
            <summary>
            PipeStream is a thread-safe read/write data stream for use between two threads in a 
            single-producer/single-consumer type problem.
            </summary>
            <version>2006/10/13 1.0</version>
            <remarks>Update on 2008/10/9 1.1 - uses Monitor instead of Manual Reset events for more elegant synchronicity.</remarks>
            <license>
            Copyright (c) 2006 James Kolpack (james dot kolpack at google mail)
            
            Permission is hereby granted, free of charge, to any person obtaining a copy of this software and 
            associated documentation files (the "Software"), to deal in the Software without restriction, 
            including without limitation the rights to use, copy, modify, merge, publish, distribute, 
            sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is 
            furnished to do so, subject to the following conditions:
            
            The above copyright notice and this permission notice shall be included in all copies or 
            substantial portions of the Software.
            
            THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
            INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
            PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
            LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
            OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
            OTHER DEALINGS IN THE SOFTWARE.
            </license>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._buffer">
            <summary>
            Queue of bytes provides the datastructure for transmitting from an
            input stream to an output stream.
            </summary>
            <remarks>Possible more effecient ways to accomplish this.</remarks>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._isFlushed">
            <summary>
            Indicates that the input stream has been flushed and that
            all remaining data should be written to the output stream.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._maxBufferLength">
            <summary>
            Maximum number of bytes to store in the buffer.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._canBlockLastRead">
            <summary>
            Setting this to true will cause Read() to block if it appears
            that it will run out of data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
            <returns>
            The new position within the current stream.
            </returns>
            <param name="offset">A byte offset relative to the origin parameter. </param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"></see> indicating the reference point used to obtain the new position. </param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes. </param>
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream. </param>
            <param name="count">The maximum number of bytes to be read from the current stream. </param>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source. </param>
            <exception cref="T:System.ArgumentException">The sum of offset and count is larger than the buffer length. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.ReadAvailable(System.Int32)">
            <summary>
            Returns true if there are
            </summary>
            <param name="count">The count.</param>
            <returns><c>True</c> if data available; otherwise<c>false</c>.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream. </param>
            <param name="count">The number of bytes to be written to the current stream. </param>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream. </param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.ArgumentException">The sum of offset and count is greater than the buffer length. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.MaxBufferLength">
            <summary>
            Gets or sets the maximum number of bytes to store in the buffer.
            </summary>
            <value>The length of the max buffer.</value>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.BlockLastReadBuffer">
            <summary>
            Gets or sets a value indicating whether to block last read method before the buffer is empty.
            When true, Read() will block until it can fill the passed in buffer and count.
            When false, Read() will not block, returning all the available buffer data.
            </summary>
            <remarks>
            Setting to true will remove the possibility of ending a stream reader prematurely.
            </remarks>
            <value>
            	<c>true</c> if block last read method before the buffer is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>
            true if the stream supports reading; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.CanSeek">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>
            true if the stream supports seeking; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.CanWrite">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>
            true if the stream supports writing; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <returns>
            A long value representing the length of the stream in bytes.
            </returns>
            
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <returns>
            The current position within the stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="T:Renci.SshNet.Common.PortForwardEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.ForwardedPort.RequestReceived"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.PortForwardEventArgs.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.PortForwardEventArgs"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="P:Renci.SshNet.Common.PortForwardEventArgs.OriginatorHost">
            <summary>
            Gets request originator host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.PortForwardEventArgs.OriginatorPort">
            <summary>
            Gets request originator port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.ProxyException">
            <summary>
            The exception that is thrown when SCP error occurred.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.SshException">
            <summary>
            The exception that is thrown when SSH exception occurs.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Renci.SshNet.Common.ProxyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ProxyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.ProxyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.ScpDownloadEventArgs">
            <summary>
            Provides data for the Downloading event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ScpDownloadEventArgs.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpDownloadEventArgs"/> class.
            </summary>
            <param name="filename">The downloaded filename.</param>
            <param name="size">The downloaded file size.</param>
            <param name="downloaded">The number of downloaded bytes so far.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ScpDownloadEventArgs.Filename">
            <summary>
            Gets the downloaded filename.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ScpDownloadEventArgs.Size">
            <summary>
            Gets the downloaded file size.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ScpDownloadEventArgs.Downloaded">
            <summary>
            Gets number of downloaded bytes so far.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.ScpException">
            <summary>
            The exception that is thrown when SCP error occurred.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ScpException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ScpException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.ScpException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.ScpUploadEventArgs">
            <summary>
            Provides data for the Uploading event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ScpUploadEventArgs.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpUploadEventArgs"/> class.
            </summary>
            <param name="filename">The uploaded filename.</param>
            <param name="size">The the uploaded file size.</param>
            <param name="uploaded">The number of uploaded bytes so far.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ScpUploadEventArgs.Filename">
            <summary>
            Gets the uploaded filename.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ScpUploadEventArgs.Size">
            <summary>
            Gets the uploaded file size.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ScpUploadEventArgs.Uploaded">
            <summary>
            Gets number of uploaded bytes so far.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.SemaphoreLight">
            <summary>
            Light implementation of SemaphoreSlim.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/> class, specifying 
            the initial number of requests that can be granted concurrently.
            </summary>
            <param name="initialCount">The initial number of requests for the semaphore that can be granted concurrently.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="initialCount"/> is a negative number.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.Release">
            <summary>
            Exits the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/> once.
            </summary>
            <returns>The previous count of the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.Release(System.Int32)">
            <summary>
            Exits the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/> a specified number of times.
            </summary>
            <param name="releaseCount">The number of times to exit the semaphore.</param>
            <returns>The previous count of the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.Wait">
            <summary>
            Blocks the current thread until it can enter the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.SemaphoreLight.CurrentCount">
            <summary>
            Gets the current count of the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.SftpPathNotFoundException">
            <summary>
            The exception that is thrown when file or directory is not found.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPathNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPathNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPathNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.SftpPermissionDeniedException">
            <summary>
            The exception that is thrown when operation permission is denied.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPermissionDeniedException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPermissionDeniedException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPermissionDeniedException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.ShellDataEventArgs">
            <summary>
            Provides data for Shell DataReceived event
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ShellDataEventArgs.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ShellDataEventArgs"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Common.ShellDataEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ShellDataEventArgs"/> class.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ShellDataEventArgs.Data">
            <summary>
            Gets the data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ShellDataEventArgs.Line">
            <summary>
            Gets the line data.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.SshAuthenticationException">
            <summary>
            The exception that is thrown when authentication failed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshAuthenticationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshAuthenticationException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshAuthenticationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshAuthenticationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.SshConnectionException">
            <summary>
            The exception that is thrown when connection was terminated.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,Renci.SshNet.Messages.Transport.DisconnectReason)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="disconnectReasonCode">The disconnect reason code.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,Renci.SshNet.Messages.Transport.DisconnectReason,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="disconnectReasonCode">The disconnect reason code.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:Renci.SshNet.Common.SshConnectionException.DisconnectReason">
            <summary>
            Gets the disconnect reason if provided by the server or client. Otherwise None.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.SshData">
            <summary>
            Base ssh data serialization type
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.SshData._data">
            <summary>
            Data byte array that hold message unencrypted data
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.GetBytes">
            <summary>
            Gets data bytes array
            </summary>
            <returns>Byte array representation of data structure.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Load(System.Byte[])">
            <summary>
            Loads data from specified bytes.
            </summary>
            <param name="value">Bytes array.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])">
            <summary>
            Loads data bytes into internal buffer.
            </summary>
            <param name="bytes">The bytes.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="bytes"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ResetReader">
            <summary>
            Resets internal data reader index.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBytes">
            <summary>
            Reads all data left in internal buffer at current position.
            </summary>
            <returns>An array of bytes containing the remaining data in the internal buffer.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)">
            <summary>
            Reads next specified number of bytes data type from internal buffer.
            </summary>
            <param name="length">Number of bytes to read.</param>
            <returns>An array of bytes that was read from the internal buffer.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is greater than the internal buffer size.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadByte">
            <summary>
            Reads next byte data type from internal buffer.
            </summary>
            <returns>Byte read.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBoolean">
            <summary>
            Reads next boolean data type from internal buffer.
            </summary>
            <returns>Boolean read.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadUInt16">
            <summary>
            Reads next uint16 data type from internal buffer.
            </summary>
            <returns>uint16 read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadUInt32">
            <summary>
            Reads next uint32 data type from internal buffer.
            </summary>
            <returns>uint32 read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadUInt64">
            <summary>
            Reads next uint64 data type from internal buffer.
            </summary>
            <returns>uint64 read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadInt64">
            <summary>
            Reads next int64 data type from internal buffer.
            </summary>
            <returns>int64 read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadAsciiString">
            <summary>
            Reads next string data type from internal buffer.
            </summary>
            <returns>string read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadString">
            <summary>
            Reads next string data type from internal buffer.
            </summary>
            <returns>string read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadString(System.Text.Encoding)">
            <summary>
            Reads next string data type from internal buffer.
            </summary>
            <returns>string read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBinaryString">
            <summary>
            Reads next string data type from internal buffer.
            </summary>
            <returns>string read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBigInt">
            <summary>
            Reads next mpint data type from internal buffer.
            </summary>
            <returns>mpint read.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadNamesList">
            <summary>
            Reads next name-list data type from internal buffer.
            </summary>
            <returns>String array or read data..</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadExtensionPair">
            <summary>
            Reads next extension-pair data type from internal buffer.
            </summary>
            <returns>Extensions pair dictionary.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Writes bytes array data into internal buffer.
            </summary>
            <param name="data">Byte array data to write.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Byte)">
            <summary>
            Writes byte data into internal buffer.
            </summary>
            <param name="data">Byte data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Boolean)">
            <summary>
            Writes boolean data into internal buffer.
            </summary>
            <param name="data">Boolean data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.UInt16)">
            <summary>
            Writes uint16 data into internal buffer.
            </summary>
            <param name="data">uint16 data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.UInt32)">
            <summary>
            Writes uint32 data into internal buffer.
            </summary>
            <param name="data">uint32 data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.UInt64)">
            <summary>
            Writes uint64 data into internal buffer.
            </summary>
            <param name="data">uint64 data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Int64)">
            <summary>
            Writes int64 data into internal buffer.
            </summary>
            <param name="data">int64 data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)">
            <summary>
            Writes string data into internal buffer as ASCII.
            </summary>
            <param name="data">string data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.String)">
            <summary>
            Writes string data into internal buffer using default encoding.
            </summary>
            <param name="data">string data to write.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])">
            <summary>
            Writes string data into internal buffer.
            </summary>
            <param name="data">string data to write.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)">
            <summary>
            Writes mpint data into internal buffer.
            </summary>
            <param name="data">mpint data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.String[])">
            <summary>
            Writes name-list data into internal buffer.
            </summary>
            <param name="data">name-list data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes extension-pair data into internal buffer.
            </summary>
            <param name="data">extension-pair data to write.</param>
        </member>
        <member name="P:Renci.SshNet.Common.SshData.IsEndOfData">
            <summary>
            Gets a value indicating whether all data from the buffer has been read.
            </summary>
            <value>
            	<c>true</c> if this instance is end of data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.SshData.ZeroReaderIndex">
            <summary>
            Gets the index that represents zero in current data type.
            </summary>
            <value>
            The index of the zero reader.
            </value>
        </member>
        <member name="T:Renci.SshNet.Common.SshOperationTimeoutException">
            <summary>
            The exception that is thrown when operation is timed out.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshOperationTimeoutException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshOperationTimeoutException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshOperationTimeoutException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException">
            <summary>
            The exception that is thrown when pass phrase for key file is empty or null
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.TerminalModes">
            <summary>
            Specifies the initial assignments of the opcode values that are used in the 'encoded terminal modes' valu
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.TTY_OP_END">
            <summary>
            Indicates end of options.
            </summary> 
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VINTR">
            <summary>
            Interrupt character; 255 if none.  Similarly for the other characters.  Not all of these characters are supported on all systems.
            </summary> 
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VQUIT">
            <summary>
            The quit character (sends SIGQUIT signal on POSIX systems).
            </summary> 
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VERASE">
            <summary>
            Erase the character to left of the cursor. 
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VKILL">
            <summary>
            Kill the current input line.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VEOF">
            <summary>
            End-of-file character (sends EOF from the terminal).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VEOL">
            <summary>
            End-of-line character in addition to carriage return and/or linefeed.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VEOL2">
            <summary>
            Additional end-of-line character.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VSTART">
            <summary>
            Continues paused output (normally control-Q).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VSTOP">
            <summary>
            Pauses output (normally control-S).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VSUSP">
            <summary>
            Suspends the current program.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VDSUSP">
            <summary>
            Another suspend character.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VREPRINT">
            <summary>
            Reprints the current input line.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VWERASE">
            <summary>
            Erases a word left of cursor.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VLNEXT">
            <summary>
            Enter the next character typed literally, even if it is a special character
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VFLUSH">
            <summary>
            Character to flush output.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VSWTCH">
            <summary>
            Switch to a different shell layer.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VSTATUS">
            <summary>
            Prints system status line (load, command, pid, etc).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VDISCARD">
            <summary>
            Toggles the flushing of terminal output.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IGNPAR">
            <summary>
            The ignore parity flag.  The parameter SHOULD be 0 if this flag is FALSE, and 1 if it is TRUE.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.PARMRK">
            <summary>
            Mark parity and framing errors.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.INPCK">
            <summary>
            Enable checking of parity errors.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ISTRIP">
            <summary>
            Strip 8th bit off characters.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.INLCR">
            <summary>
            Map NL into CR on input.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IGNCR">
            <summary>
            Ignore CR on input.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ICRNL">
            <summary>
            Map CR to NL on input.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IUCLC">
            <summary>
            Translate uppercase characters to lowercase.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IXON">
            <summary>
            Enable output flow control.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IXANY">
            <summary>
            Any char will restart after stop.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IXOFF">
            <summary>
            Enable input flow control.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IMAXBEL">
            <summary>
            Ring bell on input queue full.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ISIG">
            <summary>
            Enable signals INTR, QUIT, [D]SUSP.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ICANON">
            <summary>
            Canonicalize input lines.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.XCASE">
            <summary>
            Enable input and output of uppercase characters by preceding their lowercase equivalents with "\".
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ECHO">
            <summary>
            Enable echoing.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ECHOE">
            <summary>
            Visually erase chars.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ECHOK">
            <summary>
            Kill character discards current line.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ECHONL">
            <summary>
            Echo NL even if ECHO is off.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.NOFLSH">
            <summary>
            Don't flush after interrupt.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.TOSTOP">
            <summary>
            Stop background jobs from output.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IEXTEN">
            <summary>
            Enable extensions.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ECHOCTL">
            <summary>
            Echo control characters as ^(Char).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ECHOKE">
            <summary>
            Visual erase for line kill.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.PENDIN">
            <summary>
            Retype pending input.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.OPOST">
            <summary>
            Enable output processing.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.OLCUC">
            <summary>
            Convert lowercase to uppercase.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ONLCR">
            <summary>
            Map NL to CR-NL.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.OCRNL">
            <summary>
            Translate carriage return to newline (output).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ONOCR">
            <summary>
            Translate newline to carriage return-newline (output).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ONLRET">
            <summary>
            Newline performs a carriage return (output).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.CS7">
            <summary>
            7 bit mode.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.CS8">
            <summary>
            8 bit mode.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.PARENB">
            <summary>
            Parity enable.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.PARODD">
            <summary>
            Odd parity, else even.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.TTY_OP_ISPEED">
            <summary>
            Specifies the input baud rate in bits per second.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.TTY_OP_OSPEED">
            <summary>
            Specifies the output baud rate in bits per second.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Compression.CompressionMode">
            <summary>
            Specifies compression modes
            </summary>
        </member>
        <member name="F:Renci.SshNet.Compression.CompressionMode.Compress">
            <summary>
            Specifies that content should be compressed.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Compression.CompressionMode.Decompress">
            <summary>
            Specifies that content should be decompressed.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Compressor">
            <summary>
            Represents base class for compression algorithm implementation
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Algorithm">
            <summary>
            Represents the abstract base class from which all implementations of algorithms must inherit.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Algorithm.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Compression.Compressor"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Init(Renci.SshNet.Session)">
            <summary>
            Initializes the algorithm
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Compress(System.Byte[])">
            <summary>
            Compresses the specified data.
            </summary>
            <param name="data">Data to compress.</param>
            <returns>Compressed data</returns>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Decompress(System.Byte[])">
            <summary>
            Decompresses the specified data.
            </summary>
            <param name="data">Compressed data.</param>
            <returns>Decompressed data.</returns>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Compressor.IsActive">
            <summary>
            Gets or sets a value indicating whether compression is active.
            </summary>
            <value>
              <c>true</c> if compression is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Compression.Compressor.Session">
            <summary>
            Gets the session.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Zlib">
            <summary>
            Represents "zlib" compression implementation
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Zlib.Init(Renci.SshNet.Session)">
            <summary>
            Initializes the algorithm
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="P:Renci.SshNet.Compression.Zlib.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Compression.ZlibOpenSsh">
            <summary>
            Represents "zlib@openssh.org" compression implementation
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.ZlibOpenSsh.Init(Renci.SshNet.Session)">
            <summary>
            Initializes the algorithm
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="P:Renci.SshNet.Compression.ZlibOpenSsh.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Compression.ZlibStream">
            <summary>
            Implements Zlib compression algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.ZlibStream.#ctor(System.IO.Stream,Renci.SshNet.Compression.CompressionMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Compression.ZlibStream"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Renci.SshNet.Compression.ZlibStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
        </member>
        <member name="T:Renci.SshNet.ConnectionInfo">
            <summary>
            Represents remote connection information class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.AuthenticationMethod[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="username">The username.</param>
            <param name="authenticationMethods">The authentication methods.</param>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.AuthenticationMethod[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="username">The username.</param>
            <param name="authenticationMethods">The authentication methods.</param>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.AuthenticationMethod[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
            <param name="authenticationMethods">The authentication methods.</param>
            <exception cref="T:System.ArgumentException">host</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">proxyPort</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.Authenticate(Renci.SshNet.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to be authenticated.</param>
            <returns>true if authenticated; otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/> is null.</exception>
            <exception cref="T:Renci.SshNet.Common.SshAuthenticationException">No suitable authentication method found to complete authentication.</exception>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.KeyExchangeAlgorithms">
            <summary>
            Gets supported key exchange algorithms for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Encryptions">
            <summary>
            Gets supported encryptions for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.HmacAlgorithms">
            <summary>
            Gets supported hash algorithms for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.HostKeyAlgorithms">
            <summary>
            Gets supported host key algorithms for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.AuthenticationMethods">
            <summary>
            Gets supported authentication methods for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CompressionAlgorithms">
            <summary>
            Gets supported compression algorithms for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ChannelRequests">
            <summary>
            Gets supported channel requests for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.IsAuthenticated">
            <summary>
            Gets a value indicating whether connection is authenticated.
            </summary>
            <value>
            	<c>true</c> if connection is authenticated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Host">
            <summary>
            Gets connection host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Port">
            <summary>
            Gets connection port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Username">
            <summary>
            Gets connection username.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ProxyType">
            <summary>
            Gets proxy type.
            </summary>
            <value>
            The type of the proxy.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ProxyHost">
            <summary>
            Gets proxy connection host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ProxyPort">
            <summary>
            Gets proxy connection port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ProxyUsername">
            <summary>
            Gets proxy connection username.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ProxyPassword">
            <summary>
            Gets proxy connection password.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Timeout">
            <summary>
            Gets or sets connection timeout.
            </summary>
            <value>
            Connection timeout.
            </value>
            <example>
              <code source="..\..\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient Connect Timeout" language="C#" title="Specify connection timeout" />
            </example>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Encoding">
            <summary>
            Gets or sets the default encoding.
            </summary>
            <value>
            The default encoding.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.RetryAttempts">
            <summary>
            Gets or sets number of retry attempts when session channel creation failed.
            </summary>
            <value>
            Number of retry attempts.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.MaxSessions">
            <summary>
            Gets or sets maximum number of session channels to be open simultaneously.
            </summary>
            <value>
            The max sessions.
            </value>
        </member>
        <member name="E:Renci.SshNet.ConnectionInfo.AuthenticationBanner">
            <summary>
            Occurs when authentication banner is sent by the server.
            </summary>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\PasswordConnectionInfoTest.cs" region="Example PasswordConnectionInfo AuthenticationBanner" language="C#" title="Display authentication banner" />
            </example>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentKeyExchangeAlgorithm">
            <summary>
            Gets the current key exchange algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentServerEncryption">
            <summary>
            Gets the current server encryption.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentClientEncryption">
            <summary>
            Gets the current client encryption.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentServerHmacAlgorithm">
            <summary>
            Gets the current server hash algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentClientHmacAlgorithm">
            <summary>
            Gets the current client hash algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentHostKeyAlgorithm">
            <summary>
            Gets the current host key algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentServerCompressionAlgorithm">
            <summary>
            Gets the current server compression algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ServerVersion">
            <summary>
            Gets the server version.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ClientVersion">
            <summary>
            Get the client version.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentClientCompressionAlgorithm">
            <summary>
            Gets the current client compression algorithm.
            </summary>
        </member>
        <member name="T:Renci.SshNet.ExpectAction">
            <summary>
            Specifies behavior for expected expression
            </summary>
        </member>
        <member name="M:Renci.SshNet.ExpectAction.#ctor(System.Text.RegularExpressions.Regex,System.Action{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ExpectAction"/> class.
            </summary>
            <param name="expect">The expect regular expression.</param>
            <param name="action">The action to perform.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="expect"/> or <paramref name="action"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.ExpectAction.#ctor(System.String,System.Action{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ExpectAction"/> class.
            </summary>
            <param name="expect">The expect expression.</param>
            <param name="action">The action to perform.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="expect"/> or <paramref name="action"/> is null.</exception>
        </member>
        <member name="P:Renci.SshNet.ExpectAction.Expect">
            <summary>
            Gets the expected regular expression.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ExpectAction.Action">
            <summary>
            Gets the action to perform when expected expression is found.
            </summary>
        </member>
        <member name="T:Renci.SshNet.ExpectAsyncResult">
            <summary>
            Provides additional information for asynchronous command execution
            </summary>
        </member>
        <member name="M:Renci.SshNet.ExpectAsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ExpectAsyncResult"/> class.
            </summary>
            <param name="shellStream">The shell stream.</param>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="T:Renci.SshNet.ForwardedPort">
            <summary>
            Base class for port forwarding functionality.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.Start">
            <summary>
            Starts port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.Stop">
            <summary>
            Stops port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.RaiseExceptionEvent(System.Exception)">
            <summary>
            Raises <see cref="E:Renci.SshNet.ForwardedPort.Exception"/> event.
            </summary>
            <param name="execption">The exception.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.RaiseRequestReceived(System.String,System.UInt32)">
            <summary>
            Raises <see cref="E:Renci.SshNet.ForwardedPort.RequestReceived"/> event.
            </summary>
            <param name="host">Request originator host.</param>
            <param name="port">Request originator port.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.Session_ErrorOccured(System.Object,Renci.SshNet.Common.ExceptionEventArgs)">
            <summary>
            Handles session ErrorOccured event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Renci.SshNet.Common.ExceptionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Renci.SshNet.ForwardedPort.Session">
            <summary>
            Gets or sets the session.
            </summary>
            <value>
            The session.
            </value>
        </member>
        <member name="P:Renci.SshNet.ForwardedPort.IsStarted">
            <summary>
            Gets or sets a value indicating whether port forwarding started.
            </summary>
            <value>
            	<c>true</c> if port forwarding started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Renci.SshNet.ForwardedPort.Exception">
            <summary>
            Occurs when exception is thrown.
            </summary>
        </member>
        <member name="E:Renci.SshNet.ForwardedPort.RequestReceived">
            <summary>
            Occurs when port forwarding request received.
            </summary>
        </member>
        <member name="T:Renci.SshNet.ForwardedPortDynamic">
            <summary>
            Provides functionality for dynamic port forwarding
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortDynamic"/> class.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortDynamic"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.Start">
            <summary>
            Starts local port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.Stop">
            <summary>
            Stops local port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.ForwardedPortLocal"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortDynamic.BoundHost">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortDynamic.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.ForwardedPortLocal">
            <summary>
            Provides functionality for local port forwarding
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.#ctor(System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortLocal"/> class.
            </summary>
            <param name="boundPort">The bound port.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\ForwardedPortLocalTest.cs" region="Example SshClient AddForwardedPort Start Stop ForwardedPortLocal" language="C#" title="Local port forwarding"/>
            </example>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortLocal"/> class.
            </summary>
            <param name="boundHost">The bound host.</param>
            <param name="boundPort">The bound port.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Start">
            <summary>
            Starts local port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Stop">
            <summary>
            Stops local port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.ForwardedPortLocal"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortLocal.BoundHost">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortLocal.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortLocal.Host">
            <summary>
            Gets the forwarded host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortLocal.Port">
            <summary>
            Gets the forwarded port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.ForwardedPortRemote">
            <summary>
            Provides functionality for remote port forwarding
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.#ctor(System.Net.IPAddress,System.UInt32,System.Net.IPAddress,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortRemote"/> class.
            </summary>
            <param name="boundHostAddress">The bound host address.</param>
            <param name="boundPort">The bound port.</param>
            <param name="hostAddress">The host address.</param>
            <param name="port">The port.</param>
            <exception cref="T:System.ArgumentNullException">boundHost</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">boundPort</exception>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Start">
            <summary>
            Starts remote port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Stop">
            <summary>
            Stops remote port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.ForwardedPortRemote"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.BoundHostAddress">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.BoundHost">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.HostAddress">
            <summary>
            Gets the forwarded host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.Host">
            <summary>
            Gets the forwarded host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.Port">
            <summary>
            Gets the forwarded port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.HashInfo">
            <summary>
            Holds information about key size and cipher to use
            </summary>
        </member>
        <member name="M:Renci.SshNet.HashInfo.#ctor(System.Int32,System.Func{System.Byte[],System.Security.Cryptography.HashAlgorithm})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.CipherInfo"/> class.
            </summary>
            <param name="keySize">Size of the key.</param>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="P:Renci.SshNet.HashInfo.KeySize">
            <summary>
            Gets the size of the key.
            </summary>
            <value>
            The size of the key.
            </value>
        </member>
        <member name="P:Renci.SshNet.HashInfo.HashAlgorithm">
            <summary>
            Gets the cipher.
            </summary>
        </member>
        <member name="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod">
            <summary>
            Provides functionality to perform keyboard interactive authentication.
            </summary>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod"/> class.
            </summary>
            <param name="username">The username.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or null.</exception>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to authenticate.</param>
            <returns>Result of authentication  process.</returns>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Name">
            <summary>
            Gets authentication method name
            </summary>
        </member>
        <member name="E:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.AuthenticationPrompt">
            <summary>
            Occurs when server prompts for more authentication information.
            </summary>
        </member>
        <member name="T:Renci.SshNet.KeyboardInteractiveConnectionInfo">
            <summary>
            Provides connection information when keyboard interactive authentication method is used
            </summary>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\KeyboardInteractiveConnectionInfoTest.cs" region="Example KeyboardInteractiveConnectionInfo AuthenticationPrompt" language="C#" title="Connect using interactive method" />
            </example>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="username">The username.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="username">The username.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="E:Renci.SshNet.KeyboardInteractiveConnectionInfo.AuthenticationPrompt">
            <summary>
            Occurs when server prompts for more authentication information.
            </summary>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\KeyboardInteractiveConnectionInfoTest.cs" region="Example KeyboardInteractiveConnectionInfo AuthenticationPrompt" language="C#" title="Connect using interactive method" />
            </example>
        </member>
        <member name="T:Renci.SshNet.MessageEventArgs`1">
            <summary>
            Provides data for message events.
            </summary>
            <typeparam name="T">Message type</typeparam>
        </member>
        <member name="M:Renci.SshNet.MessageEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.MessageEventArgs`1"/> class.
            </summary>
            <param name="message">The message.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="message"/> is null.</exception>
        </member>
        <member name="P:Renci.SshNet.MessageEventArgs`1.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.BannerMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_BANNER message.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Message">
            <summary>
            Base class for all SSH protocol messages
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Message.GetBytes">
            <summary>
            Gets data bytes array
            </summary>
            <returns>Byte array representation of the message</returns>
        </member>
        <member name="M:Renci.SshNet.Messages.Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Messages.Message.ZeroReaderIndex">
            <summary>
            Gets the index that represents zero in current data type.
            </summary>
            <value>
            The index of the zero reader.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.BannerMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.BannerMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.BannerMessage.Message">
            <summary>
            Gets banner message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.BannerMessage.Language">
            <summary>
            Gets banner language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.FailureMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_FAILURE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.FailureMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.FailureMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.FailureMessage.AllowedAuthentications">
            <summary>
            Gets or sets the allowed authentications if available.
            </summary>
            <value>
            The allowed authentications.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.FailureMessage.Message">
            <summary>
            Gets failure message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.FailureMessage.PartialSuccess">
            <summary>
            Gets a value indicating whether authentication is partially successful.
            </summary>
            <value>
              <c>true</c> if partially successful; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.InformationRequestMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_INFO_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationRequestMessage.Name">
            <summary>
            Gets information request name.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationRequestMessage.Instruction">
            <summary>
            Gets information request instruction.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationRequestMessage.Language">
            <summary>
            Gets information request language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationRequestMessage.Prompts">
            <summary>
            Gets information request prompts.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.InformationResponseMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_INFO_RESPONSE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationResponseMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.InformationResponseMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationResponseMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationResponseMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationResponseMessage.Responses">
            <summary>
            Gets authentication responses.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_PASSWD_CHANGEREQ message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.Message">
            <summary>
            Gets password change request message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.PublicKeyMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_PK_OK message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.PublicKeyMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.PublicKeyMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PublicKeyMessage.PublicKeyAlgorithmName">
            <summary>
            Gets the name of the public key algorithm.
            </summary>
            <value>
            The name of the public key algorithm.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PublicKeyMessage.PublicKeyData">
            <summary>
            Gets the public key data.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_REQUEST message. Server as a base message for other user authentication requests.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessage.#ctor(Renci.SshNet.Messages.ServiceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessage"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessage.Username">
            <summary>
            Gets authentication username.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessage.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessage.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessageHost">
            <summary>
            Represents "hostbased" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageHost.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[],System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessageHost"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="publicKeyAlgorithm">The public key algorithm.</param>
            <param name="publicHostKey">The public host key.</param>
            <param name="clientHostName">Name of the client host.</param>
            <param name="clientUsername">The client username.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageHost.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.PublicKeyAlgorithm">
            <summary>
            Gets the public key algorithm for host key
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.PublicHostKey">
            <summary>
            Gets or sets the public host key and certificates for client host.
            </summary>
            <value>
            The public host key.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.ClientHostName">
            <summary>
            Gets or sets the name of the client host.
            </summary>
            <value>
            The name of the client host.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.ClientUsername">
            <summary>
            Gets or sets the client username on the client host
            </summary>
            <value>
            The client username.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.Signature">
            <summary>
            Gets or sets the signature.
            </summary>
            <value>
            The signature.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive">
            <summary>
            Represents "keyboard-interactive" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.#ctor(Renci.SshNet.Messages.ServiceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.SubMethods">
            <summary>
            Gets authentication sub methods.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessageNone">
            <summary>
            Represents "none" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageNone.#ctor(Renci.SshNet.Messages.ServiceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePassword"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageNone.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageNone.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessagePassword">
            <summary>
            Represents "password" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePassword.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePassword"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePassword.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePassword"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <param name="newPassword">New authentication password.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePassword.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePassword.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePassword.Password">
            <summary>
            Gets authentication password.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePassword.NewPassword">
            <summary>
            Gets new authentication password.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey">
            <summary>
            Represents "publickey" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="keyAlgorithmName">Name of private key algorithm.</param>
            <param name="keyData">Private key data.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="keyAlgorithmName">Name of private key algorithm.</param>
            <param name="keyData">Private key data.</param>
            <param name="signature">Private key signature.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.PublicKeyAlgorithmName">
            <summary>
            Gets the name of the public key algorithm.
            </summary>
            <value>
            The name of the public key algorithm.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.PublicKeyData">
            <summary>
            Gets the public key data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.Signature">
            <summary>
            Gets or sets public key signature.
            </summary>
            <value>
            The signature.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.SuccessMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_SUCCESS message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.SuccessMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.SuccessMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_CLOSE message.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelMessage">
            <summary>
            Base class for all channel specific SSH messages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber">
            <summary>
            Gets or sets the local channel number.
            </summary>
            <value>
            The local channel number.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelCloseMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelCloseMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelDataMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_DATA message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.#ctor(System.UInt32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="data">Message data.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.LoadData">
            <summary>
            Loads the data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.SaveData">
            <summary>
            Saves the data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Data">
            <summary>
            Gets or sets message data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelEofMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_EOF message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelEofMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelEofMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelEofMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelEofMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_EXTENDED_DATA message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.#ctor(System.UInt32,System.UInt32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.LoadData">
            <summary>
            Loads the data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.SaveData">
            <summary>
            Saves the data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.DataTypeCode">
            <summary>
            Gets message data type code.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.Data">
            <summary>
            Gets message data.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_FAILURE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelFailureMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelFailureMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_OPEN_CONFIRMATION message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
            <param name="remoteChannelNumber">The remote channel number.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.RemoteChannelNumber">
            <summary>
            Gets the remote channel number.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.InitialWindowSize">
            <summary>
            Gets the initial size of the window.
            </summary>
            <value>
            The initial size of the window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.MaximumPacketSize">
            <summary>
            Gets the maximum size of the packet.
            </summary>
            <value>
            The maximum size of the packet.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_OPEN_FAILURE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.#ctor(System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="description">The description.</param>
            <param name="reasonCode">The reason code.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.ReasonCode">
            <summary>
            Gets failure reason code.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.Description">
            <summary>
            Gets description for failure.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons">
            <summary>
            List channel open failure reasons defined by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons.AdministativelyProhibited">
            <summary>
            SSH_OPEN_ADMINISTRATIVELY_PROHIBITED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons.ConnectFailed">
            <summary>
            SSH_OPEN_CONNECT_FAILED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons.UnknownChannelType">
            <summary>
            SSH_OPEN_UNKNOWN_CHANNEL_TYPE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons.ResourceShortage">
            <summary>
            SSH_OPEN_RESOURCE_SHORTAGE
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenInfo">
            <summary>
            Base class for open channel messages
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_OPEN message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,Renci.SshNet.Messages.Connection.ChannelOpenInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> class.
            </summary>
            <param name="channelNumber">The channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
            <param name="info">The info.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.InitialWindowSize">
            <summary>
            Gets the initial size of the window.
            </summary>
            <value>
            The initial size of the window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.MaximumPacketSize">
            <summary>
            Gets the maximum size of the packet.
            </summary>
            <value>
            The maximum size of the packet.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.Info">
            <summary>
            Gets channel specific open information.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo">
            <summary>
            Used to open "direct-tcpip" channel type
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo"/> class.
            </summary>
            <param name="hostToConnect">The host to connect.</param>
            <param name="portToConnect">The port to connect.</param>
            <param name="originatorAddress">The originator address.</param>
            <param name="originatorPort">The originator port.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.HostToConnect">
            <summary>
            Gets the host to connect.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.PortToConnect">
            <summary>
            Gets the port to connect.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.OriginatorAddress">
            <summary>
            Gets the originator address.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.OriginatorPort">
            <summary>
            Gets the originator port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo">
            <summary>
            Used to open "forwarded-tcpip" channel type
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.ConnectedAddress">
            <summary>
            Gets the connected address.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.ConnectedPort">
            <summary>
            Gets the connected port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.OriginatorAddress">
            <summary>
            Gets the originator address.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.OriginatorPort">
            <summary>
            Gets the originator port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo">
            <summary>
            Used to open "session" channel type
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo">
            <summary>
            Used to open "x11" channel type
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.OriginatorAddress">
            <summary>
            Gets the originator address.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.OriginatorPort">
            <summary>
            Gets the originator port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.BreakRequestInfo">
            <summary>
            Represents "break" type channel request information
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.RequestInfo">
            <summary>
            Represents type specific information for channel request.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.RequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.RequestInfo.WantReply">
            <summary>
            Gets or sets a value indicating whether reply message is needed.
            </summary>
            <value>
              <c>true</c> if reply message is needed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.BreakRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.BreakRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.BreakRequestInfo.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
            <param name="breakLength">Length of the break.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.BreakRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.BreakRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.BreakRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.BreakRequestInfo.BreakLength">
            <summary>
            Gets break length in milliseconds.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.#ctor(System.UInt32,Renci.SshNet.Messages.Connection.RequestInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> class.
            </summary>
            <param name="localChannelName">Name of the local channel.</param>
            <param name="info">The info.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelRequestMessage.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelRequestMessage.RequestData">
            <summary>
            Gets channel request data.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo">
            <summary>
            Represents "eow@openssh.com" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo">
            <summary>
            Represents "env" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo"/> class.
            </summary>
            <param name="variableName">Name of the variable.</param>
            <param name="variableValue">The variable value.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.VariableName">
            <summary>
            Gets or sets the name of the variable.
            </summary>
            <value>
            The name of the variable.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.VariableValue">
            <summary>
            Gets or sets the variable value.
            </summary>
            <value>
            The variable value.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ExecRequestInfo">
            <summary>
            Represents "exec" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ExecRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExecRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExecRequestInfo.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
            <param name="command">The command.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExecRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExecRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExecRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExecRequestInfo.Command">
            <summary>
            Gets command to execute.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExecRequestInfo.Encoding">
            <summary>
            Gets the encoding.
            </summary>
            <value>
            The encoding.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo">
            <summary>
            Represents "exit-signal" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.#ctor(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo"/> class.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <param name="coreDumped">if set to <c>true</c> then core is dumped.</param>
            <param name="errorMessage">The error message.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.SignalName">
            <summary>
            Gets the name of the signal.
            </summary>
            <value>
            The name of the signal.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.CoreDumped">
            <summary>
            Gets a value indicating whether core is dumped.
            </summary>
            <value>
              <c>true</c> if core is dumped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo">
            <summary>
            Represents "exit-status" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.NAME">
            <summary>
            Channel request name.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo"/> class.
            </summary>
            <param name="exitStatus">The exit status number.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.ExitStatus">
            <summary>
            Gets the exit status number.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo">
            <summary>
            Represents "keepalive@openssh.com" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo">
            <summary>
            Represents "pty-req" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.#ctor(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo"/> class.
            </summary>
            <param name="environmentVariable">The environment variable.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModeValues">The terminal mode values.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.EnvironmentVariable">
            <summary>
            Gets or sets the environment variable.
            </summary>
            <value>
            The environment variable.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.Columns">
            <summary>
            Gets or sets the columns.
            </summary>
            <value>
            The columns.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.Rows">
            <summary>
            Gets or sets the rows.
            </summary>
            <value>
            The rows.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.PixelWidth">
            <summary>
            Gets or sets the width of the pixel.
            </summary>
            <value>
            The width of the pixel.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.PixelHeight">
            <summary>
            Gets or sets the height of the pixel.
            </summary>
            <value>
            The height of the pixel.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.TerminalModeValues">
            <summary>
            Gets or sets the terminal mode.
            </summary>
            <value>
            The terminal mode.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ShellRequestInfo">
            <summary>
            Represents "shell" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ShellRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ShellRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ShellRequestInfo"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ShellRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.SignalRequestInfo">
            <summary>
            Represents "signal" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.SignalRequestInfo.NAME">
            <summary>
            Channel request name.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SignalRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SignalRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SignalRequestInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SignalRequestInfo"/> class.
            </summary>
            <param name="signalName">Name of the signal.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SignalRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SignalRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SignalRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SignalRequestInfo.SignalName">
            <summary>
            Gets the name of the signal.
            </summary>
            <value>
            The name of the signal.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.SubsystemRequestInfo">
            <summary>
            Represents "subsystem" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SubsystemRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SubsystemRequestInfo"/> class.
            </summary>
            <param name="subsystem">The subsystem.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.SubsystemName">
            <summary>
            Gets the name of the subsystem.
            </summary>
            <value>
            The name of the subsystem.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo">
            <summary>
            Represents "window-change" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.NAME">
            <summary>
            Channe request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo"/> class.
            </summary>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Columns">
            <summary>
            Gets the columns.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Rows">
            <summary>
            Gets the rows.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo">
            <summary>
            Represents "x11-req" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.#ctor(System.Boolean,System.String,System.Byte[],System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo"/> class.
            </summary>
            <param name="isSingleConnection">if set to <c>true</c> it is a single connection.</param>
            <param name="protocol">The protocol.</param>
            <param name="cookie">The cookie.</param>
            <param name="screenNumber">The screen number.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.IsSingleConnection">
            <summary>
            Gets or sets a value indicating whether it is a single connection.
            </summary>
            <value>
            	<c>true</c> if it is a single connection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.AuthenticationProtocol">
            <summary>
            Gets or sets the authentication protocol.
            </summary>
            <value>
            The authentication protocol.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.AuthenticationCookie">
            <summary>
            Gets or sets the authentication cookie.
            </summary>
            <value>
            The authentication cookie.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.ScreenNumber">
            <summary>
            Gets or sets the screen number.
            </summary>
            <value>
            The screen number.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.XonXoffRequestInfo">
            <summary>
            Represents "xon-xoff" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.NAME">
            <summary>
            Channel request type
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.XonXoffRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.XonXoffRequestInfo"/> class.
            </summary>
            <param name="clientCanDo">if set to <c>true</c> [client can do].</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.ClientCanDo">
            <summary>
            Gets or sets a value indicating whether client can do.
            </summary>
            <value>
              <c>true</c> if client can do; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_SUCCESS message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelSuccessMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelSuccessMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_SUCCESS message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="bytesToAdd">The bytes to add.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.BytesToAdd">
            <summary>
            Gets number of bytes to add to the window.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage">
            <summary>
            Represents SSH_MSG_GLOBAL_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor(Renci.SshNet.Messages.Connection.GlobalRequestName,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> class.
            </summary>
            <param name="requestName">Name of the request.</param>
            <param name="wantReply">if set to <c>true</c> [want reply].</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor(Renci.SshNet.Messages.Connection.GlobalRequestName,System.Boolean,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> class.
            </summary>
            <param name="requestName">Name of the request.</param>
            <param name="wantReply">if set to <c>true</c> [want reply].</param>
            <param name="addressToBind">The address to bind.</param>
            <param name="portToBind">The port to bind.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.WantReply">
            <summary>
            Gets a value indicating whether message reply should be sent..
            </summary>
            <value>
              <c>true</c> if message reply should be sent; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.AddressToBind">
            <summary>
            Gets the address to bind to.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.PortToBind">
            <summary>
            Gets port number to bind to.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.GlobalRequestName">
            <summary>
            Specifies supported request names.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.GlobalRequestName.TcpIpForward">
            <summary>
            tcpip-forward
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.GlobalRequestName.CancelTcpIpForward">
            <summary>
            cancel-tcpip-forward
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.RequestFailureMessage">
            <summary>
            Represents SSH_MSG_REQUEST_FAILURE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestFailureMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestFailureMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage">
            <summary>
            Represents SSH_MSG_REQUEST_SUCCESS message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> class.
            </summary>
            <param name="boundPort">The bound port.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.RequestSuccessMessage.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.MessageAttribute">
            <summary>
            Indicates that a class represents SSH message. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.MessageAttribute.#ctor(System.String,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.MessageAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="number">The number.</param>
        </member>
        <member name="P:Renci.SshNet.Messages.MessageAttribute.Name">
            <summary>
            Gets or sets message name as defined in RFC 4250.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.MessageAttribute.Number">
            <summary>
            Gets or sets message number as defined in RFC 4250.
            </summary>
            <value>
            The number.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.ServiceName">
            <summary>
            Specifies list of supported services
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.ServiceName.UserAuthentication">
            <summary>
            ssh-userauth
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.ServiceName.Connection">
            <summary>
            ssh-connection
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.DebugMessage">
            <summary>
            Represents SSH_MSG_DEBUG message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DebugMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DebugMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DebugMessage.IsAlwaysDisplay">
            <summary>
            Gets a value indicating whether the message to be always displayed.
            </summary>
            <value>
            	<c>true</c> if the message always to be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DebugMessage.Message">
            <summary>
            Gets debug message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DebugMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.DisconnectMessage">
            <summary>
            Represents SSH_MSG_DISCONNECT message.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.IKeyExchangedAllowed">
            <summary>
            Indicates that message that implement this interface is allowed during key exchange phase
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DisconnectMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.DisconnectMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DisconnectMessage.#ctor(Renci.SshNet.Messages.Transport.DisconnectReason,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.DisconnectMessage"/> class.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DisconnectMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DisconnectMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DisconnectMessage.ReasonCode">
            <summary>
            Gets disconnect reason code.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DisconnectMessage.Description">
            <summary>
            Gets disconnect description.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DisconnectMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.DisconnectReason">
            <summary>
            Provides list of disconnect reason as specified by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.None">
            <summary>
            Disconnect reason is not provided.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.HostNotAllowedToConnect">
            <summary>
            SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ProtocolError">
            <summary>
            SSH_DISCONNECT_PROTOCOL_ERROR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.KeyExchangeFailed">
            <summary>
            SSH_DISCONNECT_KEY_EXCHANGE_FAILED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.Reserved">
            <summary>
            SSH_DISCONNECT_RESERVED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.MacError">
            <summary>
            SSH_DISCONNECT_MAC_ERROR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.CompressionError">
            <summary>
            SSH_DISCONNECT_COMPRESSION_ERROR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ServiceNotAvailable">
            <summary>
            SSH_DISCONNECT_SERVICE_NOT_AVAILABLE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ProtocolVersionNotSupported">
            <summary>
            SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.HostKeyNotVerifiable">
            <summary>
            SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ConnectionLost">
            <summary>
            SSH_DISCONNECT_CONNECTION_LOST
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ByApplication">
            <summary>
            SSH_DISCONNECT_BY_APPLICATION
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.TooManyConnections">
            <summary>
            SSH_DISCONNECT_TOO_MANY_CONNECTIONS
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.AuthenticationCanceledByUser">
            <summary>
            SSH_DISCONNECT_AUTH_CANCELLED_BY_USER
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.NoMoreAuthenticationMethodsAvailable">
            <summary>
            SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.IllegalUserName">
            <summary>
            SSH_DISCONNECT_ILLEGAL_USER_NAME
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.IgnoreMessage">
            <summary>
            Represents SSH_MSG_IGNORE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.IgnoreMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.IgnoreMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.IgnoreMessage.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.IgnoreMessage"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.IgnoreMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.IgnoreMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.IgnoreMessage.Data">
            <summary>
            Gets ignore message data if any.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_GROUP message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SafePrime">
            <summary>
            Gets or sets the safe prime.
            </summary>
            <value>
            The safe prime.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SubGroup">
            <summary>
            Gets or sets the generator for subgroup in GF(p).
            </summary>
            <value>
            The sub group.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_INIT message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.#ctor(Renci.SshNet.Common.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit"/> class.
            </summary>
            <param name="clientExchangeValue">The client exchange value.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.E">
            <summary>
            Gets the E value.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_REPLY message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.HostKey">
            <summary>
            Gets server public host key and certificates
            </summary>
            <value>The host key.</value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.F">
            <summary>
            Gets the F value.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.Signature">
            <summary>
            Gets the signature of H.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest"/> class.
            </summary>
            <param name="minimum">The minimum.</param>
            <param name="preferred">The preferred.</param>
            <param name="maximum">The maximum.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest.Minimum">
            <summary>
            Gets or sets the minimal size in bits of an acceptable group.
            </summary>
            <value>
            The minimum.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest.Preferred">
            <summary>
            Gets or sets the preferred size in bits of the group the server will send.
            </summary>
            <value>
            The preferred.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest.Maximum">
            <summary>
            Gets or sets the maximal size in bits of an acceptable group.
            </summary>
            <value>
            The maximum.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhInitMessage">
            <summary>
            Represents SSH_MSG_KEXDH_INIT message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhInitMessage.#ctor(Renci.SshNet.Common.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeDhInitMessage"/> class.
            </summary>
            <param name="clientExchangeValue">The client exchange value.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhInitMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhInitMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhInitMessage.E">
            <summary>
            Gets the E value.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage">
            <summary>
            Represents SSH_MSG_KEXDH_REPLY message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.HostKey">
            <summary>
            Gets server public host key and certificates
            </summary>
            <value>The host key.</value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.F">
            <summary>
            Gets the F value.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.Signature">
            <summary>
            Gets the signature of H.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeEcdhInitMessage">
            <summary>
            Represents SSH_MSG_KEXECDH_INIT message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeEcdhInitMessage.#ctor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeEcdhInitMessage"/> class.
            </summary>
            <param name="clientExchangeValue">The client exchange value.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeEcdhInitMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeEcdhInitMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeEcdhInitMessage.QC">
            <summary>
            Gets the client's ephemeral contribution to the ECDH exchange, encoded as an octet string
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeEcdhReplyMessage">
            <summary>
            Represents SSH_MSG_KEXECDH_REPLY message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeEcdhReplyMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeEcdhReplyMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeEcdhReplyMessage.KS">
            <summary>
            Gets a string encoding an X.509v3 certificate containing the server's ECDSA public host key
            </summary>
            <value>The host key.</value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeEcdhReplyMessage.QS">
            <summary>
            Gets the the server's ephemeral contribution to the ECDH exchange, encoded as an octet string.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeEcdhReplyMessage.Signature">
            <summary>
            Gets the an octet string containing the server's signature of the newly established exchange hash value.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage">
            <summary>
            Represents SSH_MSG_KEXINIT message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.Cookie">
            <summary>
            Gets session cookie.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.KeyExchangeAlgorithms">
            <summary>
            Gets or sets supported key exchange algorithms.
            </summary>
            <value>
            Supported key exchange algorithms.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.ServerHostKeyAlgorithms">
            <summary>
            Gets or sets supported server host key algorithms.
            </summary>
            <value>
            Supported server host key algorithms.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.EncryptionAlgorithmsClientToServer">
            <summary>
            Gets or sets supported encryption algorithms client to server.
            </summary>
            <value>
            Supported encryption algorithms client to server.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.EncryptionAlgorithmsServerToClient">
            <summary>
            Gets or sets supported encryption algorithms server to client.
            </summary>
            <value>
            Supported encryption algorithms server to client.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.MacAlgorithmsClientToServer">
            <summary>
            Gets or sets supported hash algorithms client to server.
            </summary>
            <value>
            Supported hash algorithms client to server.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.MacAlgorithmsServerToClient">
            <summary>
            Gets or sets supported hash algorithms server to client.
            </summary>
            <value>
            Supported hash algorithms server to client.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.CompressionAlgorithmsClientToServer">
            <summary>
            Gets or sets supported compression algorithms client to server.
            </summary>
            <value>
            Supported compression algorithms client to server.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.CompressionAlgorithmsServerToClient">
            <summary>
            Gets or sets supported compression algorithms server to client.
            </summary>
            <value>
            Supported compression algorithms server to client.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.LanguagesClientToServer">
            <summary>
            Gets or sets supported languages client to server.
            </summary>
            <value>
            Supported languages client to server.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.LanguagesServerToClient">
            <summary>
            Gets or sets supported languages server to client.
            </summary>
            <value>
            The languages server to client.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.FirstKexPacketFollows">
            <summary>
            Gets or sets a value indicating whether first key exchange packet follows.
            </summary>
            <value>
            	<c>true</c> if first key exchange packet follows; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.Reserved">
            <summary>
            Gets or sets the reserved value.
            </summary>
            <value>
            The reserved value.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.NewKeysMessage">
            <summary>
            Represents SSH_MSG_KEXINIT message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.NewKeysMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.NewKeysMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage">
            <summary>
            Represents SSH_MSG_SERVICE_ACCEPT message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage">
            <summary>
            Represents SSH_MSG_SERVICE_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.ServiceRequestMessage.#ctor(Renci.SshNet.Messages.ServiceName)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.ServiceRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.ServiceRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.ServiceRequestMessage.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.UnimplementedMessage">
            <summary>
            Represents SSH_MSG_UNIMPLEMENTED message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.UnimplementedMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.UnimplementedMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.NoneAuthenticationMethod">
            <summary>
            Provides functionality for "none" authentication method
            </summary>
        </member>
        <member name="M:Renci.SshNet.NoneAuthenticationMethod.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="username">The username.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or null.</exception>
        </member>
        <member name="M:Renci.SshNet.NoneAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session.</param>
            <returns>
            Result of authentication  process.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.NoneAuthenticationMethod.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.NoneAuthenticationMethod.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.NoneAuthenticationMethod.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.NoneAuthenticationMethod.Name">
            <summary>
            Gets connection name
            </summary>
        </member>
        <member name="T:Renci.SshNet.PasswordAuthenticationMethod">
            <summary>
            Provides functionality to perform password authentication.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PasswordAuthenticationMethod.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordAuthenticationMethod"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="password"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.PasswordAuthenticationMethod.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordAuthenticationMethod"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="password"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.PasswordAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to authenticate.</param>
            <returns>
            Result of authentication  process.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.PasswordAuthenticationMethod.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PasswordAuthenticationMethod.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordAuthenticationMethod.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.PasswordAuthenticationMethod.Name">
            <summary>
            Gets authentication method name
            </summary>
        </member>
        <member name="E:Renci.SshNet.PasswordAuthenticationMethod.PasswordExpired">
            <summary>
            Occurs when user's password has expired and needs to be changed.
            </summary>
        </member>
        <member name="T:Renci.SshNet.PasswordConnectionInfo">
            <summary>
            Provides connection information when password authentication method is used
            </summary>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\PasswordConnectionInfoTest.cs" region="Example PasswordConnectionInfo" language="C#" title="Connect using username and password" />
                <code source="..\..\Renci.SshNet.Tests\Classes\PasswordConnectionInfoTest.cs" region="Example PasswordConnectionInfo PasswordExpired" language="C#" title="Change password when connecting" />
                <code source="..\..\Renci.SshNet.Tests\Classes\PasswordConnectionInfoTest.cs" region="Example PasswordConnectionInfo AuthenticationBanner" language="C#" title="Display authentication banner" />
            </example>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\PasswordConnectionInfoTest.cs" region="Example PasswordConnectionInfo" language="C#" title="Connect using username and password"/>
            </example>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="E:Renci.SshNet.PasswordConnectionInfo.PasswordExpired">
            <summary>
            Occurs when user's password has expired and needs to be changed.
            </summary>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\PasswordConnectionInfoTest.cs" region="Example PasswordConnectionInfo PasswordExpired" language="C#" title="Change password when connecting" />
            </example>
        </member>
        <member name="T:Renci.SshNet.PrivateKeyAuthenticationMethod">
            <summary>
            Provides functionality to perform private key authentication.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyAuthenticationMethod.#ctor(System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyAuthenticationMethod"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="keyFiles">The key files.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or null.</exception>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to authenticate.</param>
            <returns>
            Result of authentication  process.
            </returns>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyAuthenticationMethod.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyAuthenticationMethod.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyAuthenticationMethod.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.PrivateKeyAuthenticationMethod.Name">
            <summary>
            Gets authentication method name
            </summary>
        </member>
        <member name="P:Renci.SshNet.PrivateKeyAuthenticationMethod.KeyFiles">
            <summary>
            Gets the key files used for authentication.
            </summary>
        </member>
        <member name="T:Renci.SshNet.PrivateKeyConnectionInfo">
            <summary>
            Provides connection information when private key authentication method is used
            </summary>
            <example>
              <code source="..\..\Renci.SshNet.Tests\Classes\PrivateKeyConnectionInfoTest.cs" region="Example PrivateKeyConnectionInfo PrivateKeyFile" language="C#" title="Connect using private key" />
              </example>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="keyFiles">Connection key files.</param>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\PrivateKeyConnectionInfoTest.cs" region="Example PrivateKeyConnectionInfo PrivateKeyFile" language="C#" title="Connect using private key"/>
                <code source="..\..\Renci.SshNet.Tests\Classes\PrivateKeyConnectionInfoTest.cs" region="Example PrivateKeyConnectionInfo PrivateKeyFile Multiple" language="C#" title="Connect using multiple private key"/>
            </example>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="keyFiles">Connection key files.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="keyFiles">The key files.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="keyFiles">The key files.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="keyFiles">The key files.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="keyFiles">The key files.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
            <param name="keyFiles">The key files.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">The port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
            <param name="keyFiles">The key files.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.PrivateKeyConnectionInfo.KeyFiles">
            <summary>
            Gets the key files used for authentication.
            </summary>
        </member>
        <member name="T:Renci.SshNet.PrivateKeyFile">
            <summary>
            Represents private key information
            </summary>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Data\Key.RSA.txt" language="Text" title="Private RSA key example" />
            </example>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyFile"/> class.
            </summary>
            <param name="privateKey">The private key.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyFile"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileName"/> is null or empty.</exception>
            <remarks>This method calls <see cref="M:System.IO.File.Open(System.String,System.IO.FileMode)"/> internally, this method does not catch exceptions from <see cref="M:System.IO.File.Open(System.String,System.IO.FileMode)"/>.</remarks>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyFile"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="passPhrase">The pass phrase.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileName"/> is null or empty, or <paramref name="passPhrase"/> is null.</exception>
            <remarks>This method calls <see cref="M:System.IO.File.Open(System.String,System.IO.FileMode)"/> internally, this method does not catch exceptions from <see cref="M:System.IO.File.Open(System.String,System.IO.FileMode)"/>.</remarks>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyFile"/> class.
            </summary>
            <param name="privateKey">The private key.</param>
            <param name="passPhrase">The pass phrase.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="privateKey"/> or <paramref name="passPhrase"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.Open(System.IO.Stream,System.String)">
            <summary>
            Opens the specified private key.
            </summary>
            <param name="privateKey">The private key.</param>
            <param name="passPhrase">The pass phrase.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.DecryptKey(Renci.SshNet.CipherInfo,System.Byte[],System.String,System.Byte[])">
            <summary>
            Decrypts encrypted private key file data.
            </summary>
            <param name="cipherInfo">The cipher info.</param>
            <param name="cipherData">Encrypted data.</param>
            <param name="passPhrase">Decryption pass phrase.</param>
            <param name="binarySalt">Decryption binary salt.</param>
            <returns>Decrypted byte array.</returns>
            <exception cref="T:System.ArgumentNullException">cipherInfo</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="cipherInfo"/>, <paramref name="cipherData"/>, <paramref name="passPhrase"/> or <paramref name="binarySalt"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.BaseClient"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.PrivateKeyFile.HostKey">
            <summary>
            Gets the host key.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.SshDataReader.ReadBigIntWithBits">
            <summary>
            Reads next mpint data type from internal buffer where length specified in bits.
            </summary>
            <returns>mpint read.</returns>
        </member>
        <member name="T:Renci.SshNet.ProxyTypes">
            <summary>
            Specifies the type of proxy client will use to connect to server.
            </summary>
        </member>
        <member name="F:Renci.SshNet.ProxyTypes.None">
            <summary>No proxy server.</summary>
        </member>
        <member name="F:Renci.SshNet.ProxyTypes.Socks4">
            <summary>A SOCKS4 proxy server.</summary>
        </member>
        <member name="F:Renci.SshNet.ProxyTypes.Socks5">
            <summary>A SOCKS5 proxy server.</summary>
        </member>
        <member name="F:Renci.SshNet.ProxyTypes.Http">
            <summary>A HTTP proxy server.</summary>
        </member>
        <member name="T:Renci.SshNet.ScpClient">
            <summary>
            Provides SCP client functionality.
            </summary>
            <summary>
            Provides SCP client functionality.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ScpClient.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionInfo"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.ScpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.ScpClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
        </member>
        <member name="M:Renci.SshNet.ScpClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, -or- <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.ScpClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, -or- <paramref name="username"/> is null or contains whitespace characters.</exception>
        </member>
        <member name="M:Renci.SshNet.ScpClient.Upload(System.IO.Stream,System.String)">
            <summary>
            Uploads the specified stream to the remote host.
            </summary>
            <param name="source">Stream to upload.</param>
            <param name="filename">Remote host file name.</param>
        </member>
        <member name="M:Renci.SshNet.ScpClient.Download(System.String,System.IO.Stream)">
            <summary>
            Downloads the specified file from the remote host to the stream.
            </summary>
            <param name="filename">Remote host file name.</param>
            <param name="destination">The stream where to download remote file.</param>
            <exception cref="T:System.ArgumentException"><paramref name="filename"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="destination"/> is null.</exception>
            <remarks>Method calls made by this method to <paramref name="destination"/>, may under certain conditions result in exceptions thrown by the stream.</remarks>
        </member>
        <member name="M:Renci.SshNet.ScpClient.CheckReturnCode(System.IO.Stream)">
            <summary>
            Checks the return code.
            </summary>
            <param name="input">The output stream.</param>
        </member>
        <member name="M:Renci.SshNet.ScpClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="P:Renci.SshNet.ScpClient.OperationTimeout">
            <summary>
            Gets or sets the operation timeout.
            </summary>
            <value>The operation timeout.</value>
        </member>
        <member name="P:Renci.SshNet.ScpClient.BufferSize">
            <summary>
            Gets or sets the size of the buffer.
            </summary>
            <value>The size of the buffer.</value>
        </member>
        <member name="E:Renci.SshNet.ScpClient.Downloading">
            <summary>
            Occurs when downloading file.
            </summary>
        </member>
        <member name="E:Renci.SshNet.ScpClient.Uploading">
            <summary>
            Occurs when uploading file.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CertificateHostAlgorithm">
            <summary>
            Implements certificate support for host algorithm.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.HostAlgorithm">
            <summary>
            Base class for SSH host algorithms.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.HostAlgorithm.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.HostAlgorithm"/> class.
            </summary>
            <param name="name">The host key name.</param>
        </member>
        <member name="M:Renci.SshNet.Security.HostAlgorithm.Sign(System.Byte[])">
            <summary>
            Signs the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>Signed data.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.HostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="data">The data.</param>
            <param name="signature">The signature.</param>
            <returns><c>True</c> is signature was successfully verifies; otherwise <c>false</c>.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.HostAlgorithm.Name">
            <summary>
            Gets the host key name.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.HostAlgorithm.Data">
            <summary>
            Gets the host key data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CertificateHostAlgorithm.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CertificateHostAlgorithm"/> class.
            </summary>
            <param name="name">The host key name.</param>
        </member>
        <member name="M:Renci.SshNet.Security.CertificateHostAlgorithm.Sign(System.Byte[])">
            <summary>
            Signs the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>Signed data.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Renci.SshNet.Security.CertificateHostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="data">The data.</param>
            <param name="signature">The signature.</param>
            <returns><c>True</c> if signature was successfully verified; otherwise <c>false</c>.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Renci.SshNet.Security.CertificateHostAlgorithm.Data">
            <summary>
            Gets the host key data.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.AsymmetricCipher">
            <summary>
            Base class for asymmetric cipher implementations.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Cipher">
            <summary>
            Base class for cipher implementation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>Encrypted data.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>Decrypted data.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.UInt32ToBigEndian(System.UInt32,System.Byte[])">
            <summary>
            Populates buffer with big endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.UInt32ToBigEndian(System.UInt32,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with big endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.BigEndianToUInt32(System.Byte[])">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.BigEndianToUInt32(System.Byte[],System.Int32)">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns>Converted <see cref="T:System.UInt32"/>.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.BigEndianToUInt64(System.Byte[])">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.UInt64"/>.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.BigEndianToUInt64(System.Byte[],System.Int32)">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns>Converted <see cref="T:System.UInt64"/>.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.UInt64ToBigEndian(System.UInt64,System.Byte[])">
            <summary>
            Populates buffer with big endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.UInt64ToBigEndian(System.UInt64,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with big endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.UInt32ToLittleEndian(System.UInt32,System.Byte[])">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.UInt32ToLittleEndian(System.UInt32,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.LittleEndianToUInt32(System.Byte[])">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.UInt32"/>.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.LittleEndianToUInt32(System.Byte[],System.Int32)">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns>Converted <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.LittleEndianToUInt64(System.Byte[])">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.UInt64"/>.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.LittleEndianToUInt64(System.Byte[],System.Int32)">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns>Converted <see cref="T:System.UInt64"/>.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.UInt64ToLittleEndian(System.UInt64,System.Byte[])">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cipher.UInt64ToLittleEndian(System.UInt64,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Cipher.MinimumSize">
            <summary>
            Gets the minimum data size.
            </summary>
            <value>
            The minimum data size.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.BlockCipher">
            <summary>
            Base class for block cipher implementations.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.SymmetricCipher">
            <summary>
            Base class for symmetric cipher implementations.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.SymmetricCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.BlockCipher._blockSize">
            <summary>
            Gets the size of the block in bytes.
            </summary>
            <value>
            The size of the block in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.BlockCipher.#ctor(System.Byte[],System.Byte,Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.BlockCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="blockSize">Size of the block.</param>
            <param name="mode">Cipher mode.</param>
            <param name="padding">Cipher padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.BlockCipher.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>Encrypted data</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.BlockCipher.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>Decrypted data</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.BlockCipher.MinimumSize">
            <summary>
            Gets the minimum data size.
            </summary>
            <value>
            The minimum data size.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.BlockCipher.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.CipherDigitalSignature">
            <summary>
            Implements digital signature where where asymmetric cipher is used,
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.DigitalSignature">
            <summary>
            Base class for signature implementations
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DigitalSignature.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="input">The input.</param>
            <param name="signature">The signature.</param>
            <returns><c>True</c> if signature was successfully verified; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DigitalSignature.Sign(System.Byte[])">
            <summary>
            Creates the signature.
            </summary>
            <param name="input">The input.</param>
            <returns>Signed input data.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.#ctor(Renci.SshNet.Common.ObjectIdentifier,Renci.SshNet.Security.Cryptography.AsymmetricCipher)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.CipherDigitalSignature"/> class.
            </summary>
            <param name="oid">The object identifier.</param>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="input">The input.</param>
            <param name="signature">The signature.</param>
            <returns>
              <c>True</c> if signature was successfully verified; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.Sign(System.Byte[])">
            <summary>
            Creates the signature.
            </summary>
            <param name="input">The input.</param>
            <returns>
            Signed input data.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.Hash(System.Byte[])">
            <summary>
            Hashes the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>Hashed data.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.DerEncode(System.Byte[])">
            <summary>
            Encodes hash using DER.
            </summary>
            <param name="hashData">The hash data.</param>
            <returns>DER Encoded byte array</returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher">
            <summary>
            AES cipher implementation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Keysize is not valid for this algorithm.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="inputBuffer"/> or <paramref name="outputBuffer"/> is null.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="inputBuffer"/> or <paramref name="outputBuffer"/> is too short.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="inputBuffer"/> or <paramref name="outputBuffer"/> is null.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="inputBuffer"/> or <paramref name="outputBuffer"/> is too short.</exception>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher">
            <summary>
            Implements ARCH4 cipher algorithm
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.StreamCipher">
            <summary>
            Base class of stream cipher algorithms.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.StreamCipher.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.StreamCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher._engineState">
            <summary>
             Holds the state of the RC4 engine
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="dischargeFirstBytes">if set to <c>true</c> will disharged first 1536 bytes.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>
            Encrypted data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>
            Decrypted data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.MinimumSize">
            <summary>
            Gets the minimum data size.
            </summary>
            <value>
            The minimum data size.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher">
            <summary>
            Blowfish cipher implementation.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher._s0">
            <summary>
            The s-boxes
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher._s1">
            <summary>
            The s-boxes
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher._s2">
            <summary>
            The s-boxes
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher._s3">
            <summary>
            The s-boxes
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher._p">
            <summary>
            The p-array
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Keysize is not valid for this algorithm.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher.ProcessTable(System.UInt32,System.UInt32,System.UInt32[])">
            <summary>
            apply the encryption cycle to each value pair in the table.
            </summary>
            <param name="xl">The xl.</param>
            <param name="xr">The xr.</param>
            <param name="table">The table.</param>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher">
            <summary>
            Implements CAST cipher algorithm
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher._kr">
            <summary>
            The rotating round key
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher._km">
            <summary>
            The masking round key
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Keysize is not valid for this algorithm.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.SetKey(System.Byte[])">
            <summary>
            Sets the subkeys using the same nomenclatureas described in RFC2144.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.F1(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            The first of the three processing functions for the encryption and decryption.
            </summary>
            <param name="D">The input to be processed.</param>
            <param name="Kmi">The mask to be used from Km[n].</param>
            <param name="Kri">The rotation value to be used.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.F2(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            The second of the three processing functions for the encryption and decryption.
            </summary>
            <param name="D">The input to be processed.</param>
            <param name="Kmi">The mask to be used from Km[n].</param>
            <param name="Kri">The rotation value to be used.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.F3(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            The third of the three processing functions for the encryption and decryption.
            </summary>
            <param name="D">The input to be processed.</param>
            <param name="Kmi">The mask to be used from Km[n].</param>
            <param name="Kri">The rotation value to be used.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.CastEncipher(System.UInt32,System.UInt32,System.UInt32[])">
            <summary>
            Does the 16 rounds to encrypt the block.
            </summary>
            <param name="L0">The LH-32bits of the plaintext block.</param>
            <param name="R0">The RH-32bits of the plaintext block.</param>
            <param name="result">The result.</param>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode">
            <summary>
            Base class for cipher mode implementations
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.Cipher">
            <summary>
            Gets the cipher.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.IV">
            <summary>
            Gets the IV vector.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode._blockSize">
            <summary>
            Holds block size of the cipher.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode"/> class.
            </summary>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.Init(Renci.SshNet.Security.Cryptography.BlockCipher)">
            <summary>
            Initializes the specified cipher mode.
            </summary>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding">
            <summary>
            Base class for cipher padding implementations
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding.Pad(System.Int32,System.Byte[])">
            <summary>
            Pads specified input to match block size.
            </summary>
            <param name="blockSize">Size of the block.</param>
            <param name="input">The input.</param>
            <returns>Padded data array.</returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher">
            <summary>
            Implements DES cipher algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.GenerateWorkingKey(System.Boolean,System.Byte[])">
            <summary>
            Generates the working key.
            </summary>
            <param name="encrypting">if set to <c>true</c> [encrypting].</param>
            <param name="key">The key.</param>
            <returns>Generated working key.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.ValidateKey">
            <summary>
            Validates the key.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.DesFunc(System.Int32[],System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>
            Performs DES function.
            </summary>
            <param name="wKey">The w key.</param>
            <param name="input">The input.</param>
            <param name="inOff">The in off.</param>
            <param name="outBytes">The out bytes.</param>
            <param name="outOff">The out off.</param>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode">
            <summary>
            Implements CBC cipher mode
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode"/> class.
            </summary>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode">
            <summary>
            Implements CFB cipher mode
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode"/> class.
            </summary>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode">
            <summary>
            Implements CTR cipher mode
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode"/> class.
            </summary>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode">
            <summary>
            Implements OFB cipher mode
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode"/> class.
            </summary>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding">
            <summary>
            Implements PKCS7 cipher padding
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding.Pad(System.Int32,System.Byte[])">
            <summary>
            Transforms the specified input.
            </summary>
            <param name="blockSize">Size of the block.</param>
            <param name="input">The input.</param>
            <returns>
            Padded data array.
            </returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher">
            <summary>
            Implements RSA cipher algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher.#ctor(Renci.SshNet.Security.RsaKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher"/> class.
            </summary>
            <param name="key">The RSA key.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>Encrypted data.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Decrypted data.
            </returns>
            <exception cref="T:System.NotSupportedException">Only block type 01 or 02 are supported.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when decrypted block type is not supported.</exception>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher">
            <summary>
            Implements Serpent cipher algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Keysize is not valid for this algorithm.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.MakeWorkingKey(System.Byte[])">
             Expand a user-supplied key material into a session key.
            
             @param key  The user-key bytes (multiples of 4) to use.
             @exception ArgumentException
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Sb0(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S0 - { 3, 8,15, 1,10, 6, 5,11,14,13, 4, 2, 7, 0, 9,12 } - 15 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Ib0(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvSO - {13, 3,11, 0,10, 6, 5,12, 1,14, 4, 7,15, 9, 8, 2 } - 15 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Sb1(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S1 - {15,12, 2, 7, 9, 0, 5,10, 1,11,14, 8, 6,13, 3, 4 } - 14 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Ib1(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS1 - { 5, 8, 2,14,15, 6,12, 3,11, 4, 7, 9, 1,13,10, 0 } - 14 steps.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Sb2(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S2 - { 8, 6, 7, 9, 3,12,10,15,13, 1,14, 4, 0,11, 5, 2 } - 16 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Ib2(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS2 - {12, 9,15, 4,11,14, 1, 2, 0, 3, 6,13, 5, 8,10, 7 } - 16 steps.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Sb3(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S3 - { 0,15,11, 8,12, 9, 6, 3,13, 1, 2, 4,10, 7, 5,14 } - 16 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Ib3(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS3 - { 0, 9,10, 7,11,14, 6,13, 3, 5,12, 2, 4, 8,15, 1 } - 15 terms
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Sb4(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S4 - { 1,15, 8, 3,12, 0,11, 6, 2, 5, 4,10, 9,14, 7,13 } - 15 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Ib4(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS4 - { 5, 0, 8, 3,10, 9, 7,14, 2,12,11, 6, 4,15,13, 1 } - 15 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Sb5(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S5 - {15, 5, 2,11, 4,10, 9,12, 0, 3,14, 8,13, 6, 7, 1 } - 16 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Ib5(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS5 - { 8,15, 2, 9, 4, 1,13,14,11, 6, 5, 3, 7,12,10, 0 } - 16 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Sb6(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S6 - { 7, 2,12, 5, 8, 4, 6,11,14, 9, 1,15,13, 3,10, 0 } - 15 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Ib6(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS6 - {15,10, 1,13, 5, 3, 6, 0, 4, 9,14, 7, 2,12, 8,11 } - 15 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Sb7(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            S7 - { 1,13,15, 0,14, 8, 2,11, 7, 4,12,10, 9, 3, 5, 6 } - 16 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.Ib7(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            InvS7 - { 3, 0, 6,13, 9,14,15, 8, 5,12,11, 7,10, 1, 4, 2 } - 17 terms.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.LT">
            <summary>
            Apply the linear transformation to the register set.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.InverseLT">
            <summary>
            Apply the inverse of the linear transformation to the register set.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher">
            <summary>
            Implements 3DES cipher algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher.ValidateKey">
            <summary>
            Validates the key.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher">
            <summary>
            Implements Twofish cipher algorithm
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.P_00">
            Define the fixed p0/p1 permutations used in keyed S-box lookup.
            By changing the following constant definitions, the S-boxes will
            automatically Get changed in the Twofish engine.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="mode">The mode.</param>
            <param name="padding">The padding.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Keysize is not valid for this algorithm.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.gSubKeys">
            gSubKeys[] and gSBox[] are eventually used in the
            encryption and decryption methods.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.RS_MDS_Encode(System.Int32,System.Int32)">
             Use (12, 8) Reed-Solomon code over GF(256) to produce
             a key S-box 32-bit entity from 2 key material 32-bit
             entities.
            
             @param    k0 first 32-bit entity
             @param    k1 second 32-bit entity
             @return     Remainder polynomial Generated using RS code
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.RS_rem(System.Int32)">
            Reed-Solomon code parameters: (12,8) reversible code:
            <p>
            <pre>
            G(x) = x^4 + (a+1/a)x^3 + ax^2 + (a+1/a)x + 1
            </pre>
            where a = primitive root of field generator 0x14D
            </p>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.DsaDigitalSignature">
            <summary>
            Implements DSA digital signature algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.#ctor(Renci.SshNet.Security.DsaKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.DsaDigitalSignature"/> class.
            </summary>
            <param name="key">The DSA key.</param>
            <exception cref="T:System.ArgumentNullException">key</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="input">The input.</param>
            <param name="signature">The signature.</param>
            <returns>
              <c>True</c> if signature was successfully verified; otherwise <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">Invalid signature.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Sign(System.Byte[])">
            <summary>
            Creates the signature.
            </summary>
            <param name="input">The input.</param>
            <returns>
            Signed input data.
            </returns>
            <exception cref="T:Renci.SshNet.Common.SshException">Invalid DSA key.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.DsaKey">
            <summary>
            Contains DSA private and public key
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Key">
            <summary>
            Base class for asymmetric cipher algorithms
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Key._privateKey">
            <summary>
            Specifies array of big integers that represent private key
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Key.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Key"/> class.
            </summary>
            <param name="data">DER encoded private key data.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Key.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Key"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Key.Sign(System.Byte[])">
            <summary>
            Signs the specified data with the key.
            </summary>
            <param name="data">The data to sign.</param>
            <returns>
            Signed data.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Key.VerifySignature(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="data">The data to verify.</param>
            <param name="signature">The signature to verify against.</param>
            <returns><c>True</c> is signature was successfully verifies; otherwise <c>false</c>.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Key.DigitalSignature">
            <summary>
            Gets the key specific digital signature.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Key.Public">
            <summary>
            Gets or sets the public key.
            </summary>
            <value>
            The public.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.Key.KeyLength">
            <summary>
            Gets the length of the key.
            </summary>
            <value>
            The length of the key.
            </value>
        </member>
        <member name="M:Renci.SshNet.Security.DsaKey.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.DsaKey"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.DsaKey.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.DsaKey"/> class.
            </summary>
            <param name="data">DER encoded private key data.</param>
        </member>
        <member name="M:Renci.SshNet.Security.DsaKey.#ctor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.DsaKey"/> class.
            </summary>
            <param name="p">The p.</param>
            <param name="q">The q.</param>
            <param name="g">The g.</param>
            <param name="y">The y.</param>
            <param name="x">The x.</param>
        </member>
        <member name="M:Renci.SshNet.Security.DsaKey.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.DsaKey.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Security.DsaKey.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.DsaKey.P">
            <summary>
            Gets the P.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.DsaKey.Q">
            <summary>
            Gets the Q.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.DsaKey.G">
            <summary>
            Gets the G.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.DsaKey.Y">
            <summary>
            Gets public key Y.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.DsaKey.X">
            <summary>
            Gets private key X.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.DsaKey.KeyLength">
            <summary>
            Gets the length of the key.
            </summary>
            <value>
            The length of the key.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.DsaKey.DigitalSignature">
            <summary>
            Gets the digital signature.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.DsaKey.Public">
            <summary>
            Gets or sets the public.
            </summary>
            <value>
            The public.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.MD5Hash">
            <summary>
            MD5 algorithm implementation
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.MD5Hash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.MD5Hash"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.MD5Hash.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Routes data written to the object into the hash algorithm for computing the hash.
            </summary>
            <param name="array">The input to compute the hash code for.</param>
            <param name="ibStart">The offset into the byte array from which to begin using data.</param>
            <param name="cbSize">The number of bytes in the byte array to use as data.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.MD5Hash.HashFinal">
            <summary>
            Finalizes the hash computation after the last data is processed by the cryptographic stream object.
            </summary>
            <returns>
            The computed hash code.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.MD5Hash.Initialize">
            <summary>
            Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.MD5Hash.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <returns>The size, in bits, of the computed hash code.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.MD5Hash.InputBlockSize">
            <summary>
            Gets the input block size.
            </summary>
            <returns>The input block size.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.MD5Hash.OutputBlockSize">
            <summary>
            Gets the output block size.
            </summary>
            <returns>The output block size.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.MD5Hash.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
            <returns>Always true.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.MD5Hash.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.RIPEMD160Hash">
            <summary>
            
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.Initialize">
            <summary>
            Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.RIPEMD160Hash"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.InternalInitialize">
            <summary>
            Reset the chaining variables to the IV values.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.F1(System.Int32,System.Int32,System.Int32)">
            <summary>
            Rounds 0-15
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.F2(System.Int32,System.Int32,System.Int32)">
            <summary>
            Rounds 16-31
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.F3(System.Int32,System.Int32,System.Int32)">
            <summary>
            ounds 32-47
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.F4(System.Int32,System.Int32,System.Int32)">
            <summary>
            Rounds 48-63
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.F5(System.Int32,System.Int32,System.Int32)">
            <summary>
            ounds 64-79
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns></returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <returns>The size, in bits, of the computed hash code.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.InputBlockSize">
            <summary>
            Gets the input block size.
            </summary>
            <returns>The input block size.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.OutputBlockSize">
            <summary>
            Gets the output block size.
            </summary>
            <returns>The output block size.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
            <returns>Always true.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.RIPEMD160Hash.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.SHA1Hash">
            <summary>
            SHA1 algorithm implementation
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SHA1Hash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.SHA1Hash"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SHA1Hash.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Routes data written to the object into the hash algorithm for computing the hash.
            </summary>
            <param name="array">The input to compute the hash code for.</param>
            <param name="ibStart">The offset into the byte array from which to begin using data.</param>
            <param name="cbSize">The number of bytes in the byte array to use as data.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SHA1Hash.HashFinal">
            <summary>
            Finalizes the hash computation after the last data is processed by the cryptographic stream object.
            </summary>
            <returns>
            The computed hash code.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SHA1Hash.Initialize">
            <summary>
            Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA1Hash.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <returns>The size, in bits, of the computed hash code.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA1Hash.InputBlockSize">
            <summary>
            Gets the input block size.
            </summary>
            <returns>The input block size.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA1Hash.OutputBlockSize">
            <summary>
            Gets the output block size.
            </summary>
            <returns>The output block size.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA1Hash.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
            <returns>Always true.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA1Hash.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.SHA256Hash">
            <summary>
            SHA256 algorithm implementation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SHA256Hash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Security.Cryptography.SHA1"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SHA256Hash.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Routes data written to the object into the hash algorithm for computing the hash.
            </summary>
            <param name="array">The input to compute the hash code for.</param>
            <param name="ibStart">The offset into the byte array from which to begin using data.</param>
            <param name="cbSize">The number of bytes in the byte array to use as data.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SHA256Hash.HashFinal">
            <summary>
            Finalizes the hash computation after the last data is processed by the cryptographic stream object.
            </summary>
            <returns>
            The computed hash code.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SHA256Hash.Initialize">
            <summary>
            Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm"/> class.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.SHA256Hash.K">
            <summary>
            The SHA-256 Constants (represent the first 32 bits of the fractional parts of the cube roots of the first sixty-four prime numbers)
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA256Hash.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <returns>The size, in bits, of the computed hash code.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA256Hash.InputBlockSize">
            <summary>
            Gets the input block size.
            </summary>
            <returns>The input block size.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA256Hash.OutputBlockSize">
            <summary>
            Gets the output block size.
            </summary>
            <returns>The output block size.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA256Hash.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
            <returns>Always true.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA256Hash.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.SHA2HashBase">
            <summary>
            SHA256 algorithm implementation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SHA2HashBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.SHA512Hash"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SHA2HashBase.AdjustByteCounts">
            <summary>
            Adjust the byte counts so that byteCount2 represents the upper long (less 3 bits) word of the byte count.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA2HashBase.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
            <returns>Always true.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA2HashBase.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA384Hash.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <returns>The size, in bits, of the computed hash code.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA384Hash.InputBlockSize">
            <summary>
            When overridden in a derived class, gets the input block size.
            </summary>
            <returns>The input block size.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA384Hash.OutputBlockSize">
            <summary>
            When overridden in a derived class, gets the output block size.
            </summary>
            <returns>The output block size.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA512Hash.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <returns>The size, in bits, of the computed hash code.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA512Hash.InputBlockSize">
            <summary>
            When overridden in a derived class, gets the input block size.
            </summary>
            <returns>The input block size.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.SHA512Hash.OutputBlockSize">
            <summary>
            When overridden in a derived class, gets the output block size.
            </summary>
            <returns>The output block size.</returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.HMac`1">
            <summary>
            Provides HMAC algorithm implementation.
            </summary>
            <typeparam name="T">Class that implements <see cref="T:System.Security.Cryptography.HashAlgorithm" />.</typeparam>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.HMac`1.#ctor(System.Byte[],System.Int32)">
            <summary>
            Rfc 2104.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.HMac`1.Initialize">
            <summary>
            Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.HMac`1.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Hashes the core.
            </summary>
            <param name="rgb">The RGB.</param>
            <param name="ib">The ib.</param>
            <param name="cb">The cb.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.HMac`1.HashFinal">
            <summary>
            Finalizes the hash computation after the last data is processed by the cryptographic stream object.
            </summary>
            <returns>
            The computed hash code.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.HMac`1.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.HMac`1.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.HMac`1.Key">
            <summary>
            Gets or sets the key to use in the hash algorithm.
            </summary>
            <returns>The key to use in the hash algorithm.</returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.RsaDigitalSignature">
            <summary>
            Implements RSA digital signature algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.#ctor(Renci.SshNet.Security.RsaKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.RsaDigitalSignature"/> class.
            </summary>
            <param name="rsaKey">The RSA key.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.Hash(System.Byte[])">
            <summary>
            Hashes the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>
            Hashed data.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.RsaKey">
            <summary>
            Contains RSA private and public key
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.RsaKey.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.RsaKey"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.RsaKey.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.RsaKey"/> class.
            </summary>
            <param name="data">DER encoded private key data.</param>
        </member>
        <member name="M:Renci.SshNet.Security.RsaKey.#ctor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.RsaKey"/> class.
            </summary>
            <param name="modulus">The modulus.</param>
            <param name="exponent">The exponent.</param>
            <param name="d">The d.</param>
            <param name="p">The p.</param>
            <param name="q">The q.</param>
            <param name="inverseQ">The inverse Q.</param>
        </member>
        <member name="M:Renci.SshNet.Security.RsaKey.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.RsaKey.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Security.RsaKey.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.RsaKey.Modulus">
            <summary>
            Gets the modulus.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.RsaKey.Exponent">
            <summary>
            Gets the exponent.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.RsaKey.D">
            <summary>
            Gets the D.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.RsaKey.P">
            <summary>
            Gets the P.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.RsaKey.Q">
            <summary>
            Gets the Q.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.RsaKey.DP">
            <summary>
            Gets the DP.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.RsaKey.DQ">
            <summary>
            Gets the DQ.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.RsaKey.InverseQ">
            <summary>
            Gets the inverse Q.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.RsaKey.KeyLength">
            <summary>
            Gets the length of the key.
            </summary>
            <value>
            The length of the key.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.RsaKey.DigitalSignature">
            <summary>
            Gets the digital signature.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.RsaKey.Public">
            <summary>
            Gets or sets the public.
            </summary>
            <value>
            The public.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchange">
            <summary>
            Represents base class for different key exchange algorithm implementations
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.Finish">
            <summary>
            Finishes key exchange algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CreateServerCipher">
            <summary>
            Creates the server side cipher to use.
            </summary>
            <returns>Server cipher.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CreateClientCipher">
            <summary>
            Creates the client side cipher to use.
            </summary>
            <returns>Client cipher.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CreateServerHash">
            <summary>
            Creates the server side hash algorithm to use.
            </summary>
            <returns>Hash algorithm</returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CreateClientHash">
            <summary>
            Creates the client side hash algorithm to use.
            </summary>
            <returns>Hash algorithm</returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CreateCompressor">
            <summary>
            Creates the compression algorithm to use to deflate data.
            </summary>
            <returns>Compression method.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CreateDecompressor">
            <summary>
            Creates the compression algorithm to use to inflate data.
            </summary>
            <returns>Compression method.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CanTrustHostKey(Renci.SshNet.Security.KeyHostAlgorithm)">
            <summary>
            Determines whether the specified host key can be trusted.
            </summary>
            <param name="host">The host algorithm.</param>
            <returns>
              <c>true</c> if the specified host can be trusted; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.ValidateExchangeHash">
            <summary>
            Validates the exchange hash.
            </summary>
            <returns>true if exchange hash is valid; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CalculateHash">
            <summary>
            Calculates key exchange hash value.
            </summary>
            <returns>Key exchange hash.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.Hash(System.Byte[])">
            <summary>
            Hashes the specified data bytes.
            </summary>
            <param name="hashData">The hash data.</param>
            <returns>
            Hashed bytes
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.SendMessage(Renci.SshNet.Messages.Message)">
            <summary>
            Sends SSH message to the server
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.GenerateSessionKey(Renci.SshNet.Common.BigInteger,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Generates the session key.
            </summary>
            <param name="sharedKey">The shared key.</param>
            <param name="exchangeHash">The exchange hash.</param>
            <param name="key">The key.</param>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.GenerateSessionKey(Renci.SshNet.Common.BigInteger,System.Byte[],System.Char,System.Byte[])">
            <summary>
            Generates the session key.
            </summary>
            <param name="sharedKey">The shared key.</param>
            <param name="exchangeHash">The exchange hash.</param>
            <param name="p">The p.</param>
            <param name="sessionId">The session id.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Security.KeyExchange"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchange.Session">
            <summary>
            Gets or sets the session.
            </summary>
            <value>
            The session.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchange.SharedKey">
            <summary>
            Gets or sets key exchange shared key.
            </summary>
            <value>
            The shared key.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchange.ExchangeHash">
            <summary>
            Gets the exchange hash.
            </summary>
            <value>The exchange hash.</value>
        </member>
        <member name="E:Renci.SshNet.Security.KeyExchange.HostKeyReceived">
            <summary>
            Occurs when host key received.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchangeDiffieHellman">
            <summary>
            Represents base class for Diffie Hellman key exchange algorithm
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._group">
            <summary>
            Specifies key exchange group number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._prime">
            <summary>
            Specifies key exchange prime number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientPayload">
            <summary>
            Specifies client payload
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverPayload">
            <summary>
            Specifies server payload
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientExchangeValue">
            <summary>
            Specifies client exchange number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverExchangeValue">
            <summary>
            Specifies server exchange number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._randomValue">
            <summary>
            Specifies random generated number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._hostKey">
            <summary>
            Specifies host key data.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._signature">
            <summary>
            Specifies signature data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.ValidateExchangeHash">
            <summary>
            Validates the exchange hash.
            </summary>
            <returns>
            true if exchange hash is valid; otherwise false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.PopulateClientExchangeValue">
            <summary>
            Populates the client exchange value.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.HandleServerDhReply(System.Byte[],Renci.SshNet.Common.BigInteger,System.Byte[])">
            <summary>
            Handles the server DH reply message.
            </summary>
            <param name="hostKey">The host key.</param>
            <param name="serverExchangeValue">The server exchange value.</param>
            <param name="signature">The signature.</param>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup14Sha1">
            <summary>
            Represents "diffie-hellman-group14-sha1" algorithm implementation.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1">
            <summary>
            Represents "diffie-hellman-group1-sha1" algorithm implementation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.CalculateHash">
            <summary>
            Calculates key exchange hash value.
            </summary>
            <returns>
            Key exchange hash.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.Finish">
            <summary>
            Finishes key exchange algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.GroupPrime">
            <summary>
            Gets the group prime.
            </summary>
            <value>
            The group prime.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup14Sha1.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup14Sha1.GroupPrime">
            <summary>
            Gets the group prime.
            </summary>
            <value>
            The group prime.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1">
            <summary>
            Represents "diffie-hellman-group1-sha1" algorithm implementation.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1.GroupPrime">
            <summary>
            Gets the group prime.
            </summary>
            <value>
            The group prime.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha1">
            <summary>
            Represents "diffie-hellman-group-exchange-sha1" algorithm implementation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha1.CalculateHash">
            <summary>
            Calculates key exchange hash value.
            </summary>
            <returns>
            Key exchange hash.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha1.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha1.Finish">
            <summary>
            Finishes key exchange algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha1.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256">
            <summary>
            Represents "diffie-hellman-group-exchange-sha256" algorithm implementation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Finish">
            <summary>
            Finishes key exchange algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.CalculateHash">
            <summary>
            Calculates key exchange hash value.
            </summary>
            <returns>
            Key exchange hash.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Hash(System.Byte[])">
            <summary>
            Hashes the specified data bytes.
            </summary>
            <param name="hashBytes">Data to hash.</param>
            <returns>
            Hashed bytes
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman">
            <summary>
            Represents base class for Diffie Hellman key exchange algorithm
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman._clientPayload">
            <summary>
            Specifies client payload
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman._serverPayload">
            <summary>
            Specifies server payload
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman._clientExchangeValue">
            <summary>
            Specifies client exchange number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman._serverExchangeValue">
            <summary>
            Specifies server exchange number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman._randomValue">
            <summary>
            Specifies random generated number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman._hostKey">
            <summary>
            Specifies host key data.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman._signature">
            <summary>
            Specifies signature data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman.ValidateExchangeHash">
            <summary>
            Validates the exchange hash.
            </summary>
            <returns>
            true if exchange hash is valid; otherwise false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman.HandleServerEcdhReply">
            <summary>
            Populates the client exchange value.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.KeyHostAlgorithm">
            <summary>
            Implements key support for host algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyHostAlgorithm.#ctor(System.String,Renci.SshNet.Security.Key)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.KeyHostAlgorithm"/> class.
            </summary>
            <param name="name">Host key name.</param>
            <param name="key">Host key.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyHostAlgorithm.#ctor(System.String,Renci.SshNet.Security.Key,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.HostAlgorithm"/> class.
            </summary>
            <param name="name">Host key name.</param>
            <param name="key">Host key.</param>
            <param name="data">Host key encoded data.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyHostAlgorithm.Sign(System.Byte[])">
            <summary>
            Signs the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Signed data.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyHostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature.
            </summary>
            <param name="data">The data.</param>
            <param name="signature">The signature.</param>
            <returns>
              <c>True</c> is signature was successfully verifies; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.KeyHostAlgorithm.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.KeyHostAlgorithm.Data">
            <summary>
            Gets the public key data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyHostAlgorithm.SignatureKeyData.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyHostAlgorithm.SignatureKeyData.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.KeyHostAlgorithm.SignatureKeyData.AlgorithmName">
            <summary>
            Gets or sets the name of the algorithm.
            </summary>
            <value>
            The name of the algorithm.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.KeyHostAlgorithm.SignatureKeyData.Signature">
            <summary>
            Gets or sets the signature.
            </summary>
            <value>
            The signature.
            </value>
        </member>
        <member name="T:Renci.SshNet.Session">
            <summary>
            Provides functionality to connect and interact with SSH server.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session.MAXIMUM_PACKET_SIZE">
            <summary>
            Specifies maximum packet size defined by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session.MAXIMUM_PAYLOAD_SIZE">
            <summary>
            Specifies maximum payload size defined by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._authenticationConnection">
            <summary>
            Controls how many authentication attempts can take place at the same time.
            </summary>
            <remarks>
            Some server may restrict number to prevent authentication attacks
            </remarks>
        </member>
        <member name="F:Renci.SshNet.Session._messagesMetadata">
            <summary>
            Holds metada about session messages
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._socket">
            <summary>
            Holds connection socket.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._socketLock">
            <summary>
            Holds locker object for the socket
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._messageListenerCompleted">
            <summary>
            Holds reference to task that listens for incoming messages
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._outboundPacketSequence">
            <summary>
            Specifies outbound packet number
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._inboundPacketSequence">
            <summary>
            Specifies incoming packet number
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._serviceAccepted">
            <summary>
            WaitHandle to signal that last service request was accepted
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._exceptionWaitHandle">
            <summary>
            WaitHandle to signal that exception was thrown by another thread.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._keyExchangeCompletedWaitHandle">
            <summary>
            WaitHandle to signal that key exchange was completed.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._keyExchangeInProgress">
            <summary>
            WaitHandle to signal that key exchange is in progress.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._exception">
            <summary>
            Exception that need to be thrown by waiting thread
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._isAuthenticated">
            <summary>
            Specifies whether connection is authenticated
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._isDisconnecting">
            <summary>
            Specifies whether user issued Disconnect command or not
            </summary>
        </member>
        <member name="M:Renci.SshNet.Session.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Session"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
        </member>
        <member name="M:Renci.SshNet.Session.Connect">
            <summary>
            Connects to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Session.Disconnect">
            <summary>
            Disconnects from the server
            </summary>
        </member>
        <member name="M:Renci.SshNet.Session.SendKeepAlive">
            <summary>
            Sends "keep alive" message to keep connection alive.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Session.WaitHandle(System.Threading.WaitHandle)">
            <summary>
            Waits for handle to signal while checking other handles as well including timeout check to prevent waiting for ever
            </summary>
            <param name="waitHandle">The wait handle.</param>
        </member>
        <member name="M:Renci.SshNet.Session.SendMessage(Renci.SshNet.Messages.Message)">
            <summary>
            Sends packet message to the server.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.ReceiveMessage">
            <summary>
            Receives the message from the server.
            </summary>
            <returns>Incoming SSH message.</returns>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException"></exception>
        </member>
        <member name="M:Renci.SshNet.Session.HandleMessage``1(``0)">
            <summary>
            Handles the message.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnDisconnectReceived(Renci.SshNet.Messages.Transport.DisconnectMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.DisconnectMessage"/> received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.DisconnectMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnIgnoreReceived(Renci.SshNet.Messages.Transport.IgnoreMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.IgnoreMessage"/> received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.IgnoreMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnUnimplementedReceived(Renci.SshNet.Messages.Transport.UnimplementedMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.UnimplementedMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.UnimplementedMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnDebugReceived(Renci.SshNet.Messages.Transport.DebugMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.DebugMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.DebugMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnServiceRequestReceived(Renci.SshNet.Messages.Transport.ServiceRequestMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnServiceAcceptReceived(Renci.SshNet.Messages.Transport.ServiceAcceptMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnKeyExchangeInitReceived(Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnNewKeysReceived(Renci.SshNet.Messages.Transport.NewKeysMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.NewKeysMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.NewKeysMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnUserAuthenticationRequestReceived(Renci.SshNet.Messages.Authentication.RequestMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Authentication.RequestMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnUserAuthenticationFailureReceived(Renci.SshNet.Messages.Authentication.FailureMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Authentication.FailureMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Authentication.FailureMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnUserAuthenticationSuccessReceived(Renci.SshNet.Messages.Authentication.SuccessMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Authentication.SuccessMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Authentication.SuccessMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnUserAuthenticationBannerReceived(Renci.SshNet.Messages.Authentication.BannerMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Authentication.BannerMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Authentication.BannerMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnGlobalRequestReceived(Renci.SshNet.Messages.Connection.GlobalRequestMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnRequestSuccessReceived(Renci.SshNet.Messages.Connection.RequestSuccessMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnRequestFailureReceived(Renci.SshNet.Messages.Connection.RequestFailureMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.RequestFailureMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.RequestFailureMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelOpenReceived(Renci.SshNet.Messages.Connection.ChannelOpenMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelOpenConfirmationReceived(Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelOpenFailureReceived(Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelWindowAdjustReceived(Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelDataReceived(Renci.SshNet.Messages.Connection.ChannelDataMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelExtendedDataReceived(Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelEofReceived(Renci.SshNet.Messages.Connection.ChannelEofMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelCloseReceived(Renci.SshNet.Messages.Connection.ChannelCloseMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelRequestReceived(Renci.SshNet.Messages.Connection.ChannelRequestMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelSuccessReceived(Renci.SshNet.Messages.Connection.ChannelSuccessMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelFailureReceived(Renci.SshNet.Messages.Connection.ChannelFailureMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnMessageReceived(Renci.SshNet.Messages.Message)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Message"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Message"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.Read(System.Int32)">
            <summary>
            Reads the specified length of bytes from the server
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Session.RegisterMessage(System.String)">
            <summary>
            Registers SSH Message with the session.
            </summary>
            <param name="messageName">Name of the message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.UnRegisterMessage(System.String)">
            <summary>
            Removes SSH message from the session
            </summary>
            <param name="messageName">Name of the message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.LoadMessage(System.Byte[])">
            <summary>
            Loads the message.
            </summary>
            <param name="data">Message data.</param>
            <returns>New message</returns>
        </member>
        <member name="M:Renci.SshNet.Session.MessageListener">
            <summary>
            Listens for incoming message from the server and handles them. This method run as a task on separate thread.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Session.RaiseError(System.Exception)">
            <summary>
            Raises the <see cref="E:Renci.SshNet.Session.ErrorOccured"/> event.
            </summary>
            <param name="exp">The exp.</param>
        </member>
        <member name="M:Renci.SshNet.Session.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Session.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Session.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Session"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Session.SessionSemaphore">
            <summary>
            Gets the session semaphore that controls session channels.
            </summary>
            <value>The session semaphore.</value>
        </member>
        <member name="P:Renci.SshNet.Session.NextChannelNumber">
            <summary>
            Gets the next channel number.
            </summary>
            <value>The next channel number.</value>
        </member>
        <member name="P:Renci.SshNet.Session.IsConnected">
            <summary>
            Gets a value indicating whether socket connected.
            </summary>
            <value>
            	<c>true</c> if socket connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Session.SessionId">
            <summary>
            Gets or sets the session id.
            </summary>
            <value>The session id.</value>
        </member>
        <member name="P:Renci.SshNet.Session.ClientInitMessage">
            <summary>
            Gets the client init message.
            </summary>
            <value>The client init message.</value>
        </member>
        <member name="P:Renci.SshNet.Session.ServerVersion">
            <summary>
            Gets or sets the server version string.
            </summary>
            <value>The server version.</value>
        </member>
        <member name="P:Renci.SshNet.Session.ClientVersion">
            <summary>
            Gets or sets the client version string.
            </summary>
            <value>The client version.</value>
        </member>
        <member name="P:Renci.SshNet.Session.ConnectionInfo">
            <summary>
            Gets or sets the connection info.
            </summary>
            <value>The connection info.</value>
        </member>
        <member name="E:Renci.SshNet.Session.ErrorOccured">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.Disconnected">
            <summary>
            Occurs when session has been disconnected form the server.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.HostKeyReceived">
            <summary>
            Occurs when host key received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.DisconnectReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.DisconnectMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.IgnoreReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.IgnoreMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.UnimplementedReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.UnimplementedMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.DebugReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.DebugMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ServiceRequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ServiceAcceptReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.KeyExchangeInitReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.NewKeysReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.NewKeysMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.UserAuthenticationRequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.UserAuthenticationFailureReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Authentication.FailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.UserAuthenticationSuccessReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Authentication.SuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.UserAuthenticationBannerReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Authentication.BannerMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.GlobalRequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> message received
            </summary>        
        </member>
        <member name="E:Renci.SshNet.Session.RequestSuccessReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.RequestFailureReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.RequestFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelOpenReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelOpenConfirmationReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelOpenFailureReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelWindowAdjustReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelDataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelExtendedDataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelEofReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelEofMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelCloseReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelRequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelSuccessReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelFailureReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.MessageReceived">
            <summary>
            Occurs when message received and is not handled by any of the event handlers
            </summary>
        </member>
        <member name="T:Renci.SshNet.SftpClient">
            <summary>
            Implementation of the SSH File Transfer Protocol (SFTP) over SSH.
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="F:Renci.SshNet.SftpClient._sftpSession">
            <summary>
            Holds SftpSession instance that used to communicate to the SFTP server
            </summary>
        </member>
        <member name="M:Renci.SshNet.SftpClient.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionInfo"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid. <para>-or-</para> <paramref name="username"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid. <para>-or-</para> <paramref name="username"/> is <b>null</b> contains whitespace characters.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid. <para>-or-</para> <paramref name="username"/> is nu<b>null</b>ll or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid. <para>-or-</para> <paramref name="username"/> is <b>null</b> or contains whitespace characters.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ChangeDirectory(System.String)">
            <summary>
            Changes remote directory to path.
            </summary>
            <param name="path">New directory path.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to change directory denied by remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPathNotFoundException">The path in <paramref name="path"/> was not found on the remote host.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ChangePermissions(System.String,System.Int16)">
            <summary>
            Changes permissions of file(s) to specified mode.
            </summary>
            <param name="path">File(s) path, may match multiple files.</param>
            <param name="mode">The mode.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to change permission on the path(s) was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPathNotFoundException">The path in <paramref name="path"/> was not found on the remote host.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.CreateDirectory(System.String)">
            <summary>
            Creates remote directory specified by path.
            </summary>
            <param name="path">Directory path to create.</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to create the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.DeleteDirectory(System.String)">
            <summary>
            Deletes remote directory specified by path.
            </summary>
            <param name="path">Directory to be deleted path.</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to delete the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.DeleteFile(System.String)">
            <summary>
            Deletes remote file specified by path.
            </summary>
            <param name="path">File to be deleted path.</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to delete the file was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.RenameFile(System.String,System.String)">
            <summary>
            Renames remote file from old path to new path.
            </summary>
            <param name="oldPath">Path to the old file location.</param>
            <param name="newPath">Path to the new file location.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="oldPath"/> is <b>null</b>. <para>-or-</para> or <paramref name="newPath"/> is <b>null</b>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to rename the file was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.RenameFile(System.String,System.String,System.Boolean)">
            <summary>
            Renames remote file from old path to new path.
            </summary>
            <param name="oldPath">Path to the old file location.</param>
            <param name="newPath">Path to the new file location.</param>
            <param name="isPosix">if set to <c>true</c> then perform a posix rename.</param>
            <exception cref="T:System.ArgumentNullException">oldPath</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="oldPath"/> is <b>null</b>. <para>-or-</para> or <paramref name="newPath"/> is <b>null</b>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to rename the file was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.SymbolicLink(System.String,System.String)">
            <summary>
            Creates a symbolic link from old path to new path.
            </summary>
            <param name="path">The old path.</param>
            <param name="linkPath">The new path.</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b>. <para>-or-</para> <paramref name="linkPath"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to create the symbolic link was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ListDirectory(System.String,System.Action{System.Int32})">
            <summary>
            Retrieves list of files in remote directory.
            </summary>
            <param name="path">The path.</param>
            <param name="listCallback">The list callback.</param>
            <returns>
            List of directory entries
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to list the contents of the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.BeginListDirectory(System.String,System.AsyncCallback,System.Object,System.Action{System.Int32})">
            <summary>
            Begins an asynchronous operation of retrieving list of files in remote directory.
            </summary>
            <param name="path">The path.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <param name="listCallback">The list callback.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.EndListDirectory(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation of retrieving list of files in remote directory.
            </summary>
            <param name="asyncResult">The pending asynchronous SFTP request.</param>
            <returns>
            List of files
            </returns>
            <exception cref="T:System.ArgumentException">The IAsyncResult object (<paramref name="asyncResult"/>) did not come from the corresponding async method on this type. <para>-or-</para> EndExecute was called multiple times with the same IAsyncResult.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Get(System.String)">
            <summary>
            Gets reference to remote file or directory.
            </summary>
            <param name="path">The path.</param>
            <returns>Reference to <see cref="T:Renci.SshNet.Sftp.SftpFile"/> file object.</returns>
            <exception cref="T:System.ArgumentNullException">path</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Exists(System.String)">
            <summary>
            Checks whether file pr directory exists;
            </summary>
            <param name="path">The path.</param>
            <returns><c>true</c> if directory or file exists; otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to perform the operation was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.DownloadFile(System.String,System.IO.Stream,System.Action{System.UInt64})">
            <summary>
            Downloads remote file specified by the path into the stream.
            </summary>
            <param name="path">File to download.</param>
            <param name="output">Stream to write the file into.</param>
            <param name="downloadCallback">The download callback.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="output"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to perform the operation was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="output"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.SftpClient.BeginDownloadFile(System.String,System.IO.Stream)">
            <summary>
            Begins an asynchronous file downloading into the stream.
            </summary>
            <param name="path">The path.</param>
            <param name="output">The output.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.ArgumentNullException">output</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="output"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to perform the operation was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="output"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.SftpClient.BeginDownloadFile(System.String,System.IO.Stream,System.AsyncCallback)">
            <summary>
            Begins an asynchronous file downloading into the stream.
            </summary>
            <param name="path">The path.</param>
            <param name="output">The output.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.ArgumentNullException">output</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="output"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to perform the operation was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="output"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.SftpClient.BeginDownloadFile(System.String,System.IO.Stream,System.AsyncCallback,System.Object,System.Action{System.UInt64})">
            <summary>
            Begins an asynchronous file downloading into the stream.
            </summary>
            <param name="path">The path.</param>
            <param name="output">The output.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <param name="downloadCallback">The download callback.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.ArgumentNullException">output</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="output"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to perform the operation was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="output"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.SftpClient.EndDownloadFile(System.IAsyncResult)">
            <summary>
            Ends an asynchronous file downloading into the stream.
            </summary>
            <param name="asyncResult">The pending asynchronous SFTP request.</param>
            <exception cref="T:System.ArgumentException">The IAsyncResult object (<paramref name="asyncResult"/>) did not come from the corresponding async method on this type. <para>-or-</para> EndExecute was called multiple times with the same IAsyncResult.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.UploadFile(System.IO.Stream,System.String,System.Action{System.UInt64})">
            <summary>
            Uploads stream into remote file..
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <param name="uploadCallback">The upload callback.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to upload the file was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="input"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.SftpClient.UploadFile(System.IO.Stream,System.String,System.Boolean,System.Action{System.UInt64})">
            <summary>
            Uploads stream into remote file..
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <param name="canOverride">if set to <c>true</c> then existing file will be overwritten.</param>
            <param name="uploadCallback">The upload callback.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to upload the file was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="input"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.SftpClient.BeginUploadFile(System.IO.Stream,System.String)">
            <summary>
            Begins an asynchronous uploading the steam into remote file.
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to list the contents of the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="input"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.SftpClient.BeginUploadFile(System.IO.Stream,System.String,System.AsyncCallback)">
            <summary>
            Begins an asynchronous uploading the steam into remote file.
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to list the contents of the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="input"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.SftpClient.BeginUploadFile(System.IO.Stream,System.String,System.AsyncCallback,System.Object,System.Action{System.UInt64})">
            <summary>
            Begins an asynchronous uploading the steam into remote file.
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <param name="uploadCallback">The upload callback.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to list the contents of the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="input"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.SftpClient.BeginUploadFile(System.IO.Stream,System.String,System.Boolean,System.AsyncCallback,System.Object,System.Action{System.UInt64})">
            <summary>
            Begins an asynchronous uploading the steam into remote file.
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <param name="canOverride">if set to <c>true</c> then existing file will be overwritten.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <param name="uploadCallback">The upload callback.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentNullException">input</exception>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace characters.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException">Permission to list the contents of the directory was denied by the remote host. <para>-or-</para> A SSH command was denied by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">A SSH error where <see cref="P:System.Exception.Message"/> is the message from the remote host.</exception>
            <remarks>
            Method calls made by this method to <paramref name="input"/>, may under certain conditions result in exceptions thrown by the stream.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.SftpClient.EndUploadFile(System.IAsyncResult)">
            <summary>
            Ends an asynchronous uploading the steam into remote file.
            </summary>
            <param name="asyncResult">The pending asynchronous SFTP request.</param>
            <exception cref="T:System.ArgumentException">Either the IAsyncResult object did not come from the corresponding async method on this type, or EndExecute was called multiple times with the same IAsyncResult.</exception>
            <exception cref="T:System.ArgumentException">The IAsyncResult object (<paramref name="asyncResult"/>) did not come from the corresponding async method on this type. <para>-or-</para> EndExecute was called multiple times with the same IAsyncResult.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.GetStatus(System.String)">
            <summary>
            Gets status using statvfs@openssh.com request.
            </summary>
            <param name="path">The path.</param>
            <returns>Reference to <see cref="T:Renci.SshNet.Sftp.SftpFileSytemInformation"/> object that contains file status information.</returns>
            <exception cref="T:System.ArgumentNullException">path</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends lines to a file, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is<b>null</b> <para>-or-</para> <paramref name="contents"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends lines to a file by using a specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>. <para>-or-</para> <paramref name="contents"/> is <b>null</b>. <para>-or-</para> <paramref name="encoding"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.AppendAllText(System.String,System.String)">
            <summary>
             Opens a file, appends the specified string to the file, and then closes the file. 
             If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>. <para>-or-</para> <paramref name="contents"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Opens a file, appends the specified string to the file, and then closes the file.
            If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>. <para>-or-</para> <paramref name="contents"/> is <b>null</b>. <para>-or-</para> <paramref name="encoding"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.AppendText(System.String)">
            <summary>
            Creates a <see cref="T:System.IO.StreamWriter"/> that appends UTF-8 encoded text to an existing file.
            </summary>
            <param name="path">The path to the file to append to.</param>
            <returns>A StreamWriter that appends UTF-8 encoded text to an existing file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.AppendText(System.String,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:System.IO.StreamWriter"/> that appends UTF-8 encoded text to an existing file.
            </summary>
            <param name="path">The path to the file to append to.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>
            A StreamWriter that appends UTF-8 encoded text to an existing file.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>. <para>-or-</para> <paramref name="encoding"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Create(System.String)">
            <summary>
            Creates or overwrites a file in the specified path.
            </summary>
            <param name="path">The path and name of the file to create.</param>
            <returns>A <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> that provides read/write access to the file specified in path</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Create(System.String,System.Int32)">
            <summary>
            Creates or overwrites the specified file.
            </summary>
            <param name="path">The path and name of the file to create.</param>
            <param name="bufferSize">The number of bytes buffered for reads and writes to the file.</param>
            <returns>A <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> that provides read/write access to the file specified in path</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.CreateText(System.String)">
            <summary>
            Creates or opens a file for writing UTF-8 encoded text.
            </summary>
            <param name="path">The file to be opened for writing.</param>
            <returns>A <see cref="T:System.IO.StreamWriter"/> that writes to the specified file using UTF-8 encoding.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.CreateText(System.String,System.Text.Encoding)">
            <summary>
            Creates or opens a file for writing UTF-8 encoded text.
            </summary>
            <param name="path">The file to be opened for writing.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns> A <see cref="T:System.IO.StreamWriter"/> that writes to the specified file using UTF-8 encoding. </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Delete(System.String)">
            <summary>
            Deletes the specified file or directory. An exception is not thrown if the specified file does not exist.
            </summary>
            <param name="path">The name of the file or directory to be deleted. Wildcard characters are not supported.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.GetLastAccessTime(System.String)">
            <summary>
            Returns the date and time the specified file or directory was last accessed.
            </summary>
            <param name="path">The file or directory for which to obtain access date and time information.</param>
            <returns>A <see cref="T:System.DateTime"/> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in local time.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.GetLastAccessTimeUtc(System.String)">
            <summary>
            Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last accessed.
            </summary>
            <param name="path">The file or directory for which to obtain access date and time information.</param>
            <returns>A <see cref="T:System.DateTime"/> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in UTC time.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.GetLastWriteTime(System.String)">
            <summary>
            Returns the date and time the specified file or directory was last written to.
            </summary>
            <param name="path">The file or directory for which to obtain write date and time information.</param>
            <returns>A <see cref="T:System.DateTime"/> structure set to the date and time that the specified file or directory was last written to. This value is expressed in local time.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.GetLastWriteTimeUtc(System.String)">
            <summary>
            Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last written to.
            </summary>
            <param name="path">The file or directory for which to obtain write date and time information.</param>
            <returns>A <see cref="T:System.DateTime"/> structure set to the date and time that the specified file or directory was last written to. This value is expressed in UTC time.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Open(System.String,System.IO.FileMode)">
            <summary>
            Opens a <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> on the specified path with read/write access.
            </summary>
            <param name="path">The file to open.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.</param>
            <returns>An unshared <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> that provides access to the specified file, with the specified mode and access.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> on the specified path, with the specified mode and access.
            </summary>
            <param name="path">The file to open.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.</param>
            <param name="access">A <see cref="T:System.IO.FileAccess"/> value that specifies the operations that can be performed on the file.</param>
            <returns>An unshared <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> that provides access to the specified file, with the specified mode and access.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.OpenRead(System.String)">
            <summary>
            Opens an existing file for reading.
            </summary>
            <param name="path">The file to be opened for reading.</param>
            <returns>A read-only System.IO.FileStream on the specified path.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.OpenText(System.String)">
            <summary>
            Opens an existing UTF-8 encoded text file for reading.
            </summary>
            <param name="path">The file to be opened for reading.</param>
            <returns>A <see cref="T:System.IO.StreamReader"/> on the specified path.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.OpenWrite(System.String)">
            <summary>
            Opens an existing file for writing.
            </summary>
            <param name="path">The file to be opened for writing.</param>
            <returns>An unshared <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> object on the specified path with <see cref="F:System.IO.FileAccess.Write"/> access.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadAllBytes(System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A byte array containing the contents of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadAllLines(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A string array containing all lines of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadAllLines(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string array containing all lines of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadAllText(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A string containing all lines of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadAllText(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string containing all lines of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadLines(System.String)">
            <summary>
            Reads the lines of a file.
            </summary>
            <param name="path">The file to read.</param>
            <returns>The lines of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadLines(System.String,System.Text.Encoding)">
            <summary>
            Read the lines of a file that has a specified encoding.
            </summary>
            <param name="path">The file to read.</param>
            <param name="encoding">The encoding that is applied to the contents of the file.</param>
            <returns>The lines of the file.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.SetLastAccessTime(System.String,System.DateTime)">
            <summary>
            Sets the date and time the specified file was last accessed.
            </summary>
            <param name="path">The file for which to set the access date and time information.</param>
            <param name="lastAccessTime">A <see cref="T:System.DateTime"/> containing the value to set for the last access date and time of path. This value is expressed in local time.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.SetLastAccessTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the date and time, in coordinated universal time (UTC), that the specified file was last accessed.
            </summary>
            <param name="path">The file for which to set the access date and time information.</param>
            <param name="lastAccessTimeUtc">A <see cref="T:System.DateTime"/> containing the value to set for the last access date and time of path. This value is expressed in UTC time.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.SetLastWriteTime(System.String,System.DateTime)">
            <summary>
            Sets the date and time that the specified file was last written to.
            </summary>
            <param name="path">The file for which to set the date and time information.</param>
            <param name="lastWriteTime">A System.DateTime containing the value to set for the last write date and time of path. This value is expressed in local time.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.SetLastWriteTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the date and time, in coordinated universal time (UTC), that the specified file was last written to.
            </summary>
            <param name="path">The file for which to set the date and time information.</param>
            <param name="lastWriteTimeUtc">A System.DateTime containing the value to set for the last write date and time of path. This value is expressed in UTC time.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllBytes(System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="bytes">The bytes to write to the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new file, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.String[])">
            <summary>
            Creates a new file, write the specified string array to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string array to write to the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string array to the file by using the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string array to write to the file.</param>
            <param name="encoding">An <see cref="T:System.Text.Encoding"/> object that represents the character encoding applied to the string array.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllText(System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <param name="encoding">The encoding to apply to the string.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.GetAttributes(System.String)">
            <summary>
            Gets the <see cref="T:Renci.SshNet.Sftp.SftpFileAttributes"/> of the file on the path.
            </summary>
            <param name="path">The path to the file.</param>
            <returns>The <see cref="T:Renci.SshNet.Sftp.SftpFileAttributes"/> of the file on the path.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.SetAttributes(System.String,Renci.SshNet.Sftp.SftpFileAttributes)">
            <summary>
            Sets the specified <see cref="T:Renci.SshNet.Sftp.SftpFileAttributes"/> of the file on the specified path.
            </summary>
            <param name="path">The path to the file.</param>
            <param name="fileAttributes">The desired <see cref="T:Renci.SshNet.Sftp.SftpFileAttributes"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.InternalListDirectory(System.String,System.Action{System.Int32})">
            <summary>
            Internals the list directory.
            </summary>
            <param name="path">The path.</param>
            <param name="listCallback">The list callback.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">path</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client not connected.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.InternalDownloadFile(System.String,System.IO.Stream,Renci.SshNet.Sftp.SftpDownloadAsyncResult,System.Action{System.UInt64})">
            <summary>
            Internals the download file.
            </summary>
            <param name="path">The path.</param>
            <param name="output">The output.</param>
            <param name="downloadCallback">The download callback.</param>
            <exception cref="T:System.ArgumentNullException">output</exception>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <b>null</b> or contains whitespace.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="output"/> is <b>null</b>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client not connected.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.InternalUploadFile(System.IO.Stream,System.String,Renci.SshNet.Sftp.Flags,Renci.SshNet.Sftp.SftpUploadAsyncResult,System.Action{System.UInt64})">
            <summary>
            Internals the upload file.
            </summary>
            <param name="input">The input.</param>
            <param name="path">The path.</param>
            <param name="flags">The flags.</param>
            <param name="uploadCallback">The upload callback.</param>
            <exception cref="T:System.ArgumentNullException">input</exception>
            <exception cref="T:System.ArgumentException">path</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is <b>null</b> or contains whitespace.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client not connected.</exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.OnConnected">
            <summary>
            Called when client is connected to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.SftpClient.OnDisconnecting">
            <summary>
            Called when client is disconnecting from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="P:Renci.SshNet.SftpClient.OperationTimeout">
            <summary>
            Gets or sets the operation timeout.
            </summary>
            <value>The operation timeout.</value>
        </member>
        <member name="P:Renci.SshNet.SftpClient.BufferSize">
            <summary>
            Gets or sets the size of the buffer.
            </summary>
            <value>The size of the buffer.</value>
        </member>
        <member name="P:Renci.SshNet.SftpClient.WorkingDirectory">
            <summary>
            Gets remote working directory.
            </summary>
        </member>
        <member name="P:Renci.SshNet.SftpClient.ProtocolVersion">
            <summary>
            Gets sftp protocol version.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Flags.Read">
            <summary>
            SSH_FXF_READ
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Flags.Write">
            <summary>
            SSH_FXF_WRITE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Flags.Append">
            <summary>
            SSH_FXF_APPEND
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Flags.CreateNewOrOpen">
            <summary>
            SSH_FXF_CREAT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Flags.Truncate">
            <summary>
            SSH_FXF_TRUNC
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Flags.CreateNew">
            <summary>
            SSH_FXF_EXCL
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Requests.SftpLinkRequest.#ctor(System.UInt32,System.UInt32,System.String,System.String,System.Boolean,System.Action{Renci.SshNet.Sftp.Responses.SftpStatusResponse})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Sftp.Requests.SftpLinkRequest"/> class.
            </summary>
            <param name="protocolVersion">The protocol version.</param>
            <param name="requestId">The request id.</param>
            <param name="newLinkPath">Specifies the path name of the new link to create.</param>
            <param name="existingPath">Specifies the path of a target object to which the newly created link will refer.  In the case of a symbolic link, this path may not exist.</param>
            <param name="isSymLink">if set to <c>false</c> the link should be a hard link, or a second directory entry referring to the same file or directory object.</param>
            <param name="statusAction">The status action.</param>
        </member>
        <member name="T:Renci.SshNet.Sftp.SftpDownloadAsyncResult">
            <summary>
            Encapsulates the results of an asynchronous download operation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpDownloadAsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Sftp.SftpDownloadAsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpDownloadAsyncResult.Update(System.UInt64)">
            <summary>
            Updates asynchronous operation status information.
            </summary>
            <param name="downloadedBytes">Number of downloaded bytes.</param>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpDownloadAsyncResult.IsDownloadCanceled">
            <summary>
            Gets or sets a value indicating whether to cancel asynchronous download operation.
            </summary>
            <value>
            <c>true</c> if download operation to be canceled; otherwise, <c>false</c>.
            </value>
            <remarks>
            Download operation will be canceled after finishing uploading current buffer.
            </remarks>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpDownloadAsyncResult.DownloadedBytes">
            <summary>
            Gets the number of downloaded bytes.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.SftpFile">
            <summary>
            Represents SFTP file information
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFile.#ctor(Renci.SshNet.Sftp.SftpSession,System.String,Renci.SshNet.Sftp.SftpFileAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Sftp.SftpFile"/> class.
            </summary>
            <param name="sftpSession">The SFTP session.</param>
            <param name="fullName">Full path of the directory or file.</param>
            <param name="attributes">Attributes of the directory or file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="sftpSession"/> or <paramref name="fullName"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFile.SetPermissions(System.Int16)">
            <summary>
            Sets file  permissions.
            </summary>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFile.Delete">
            <summary>
            Permanently deletes a file on remote machine.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFile.MoveTo(System.String)">
            <summary>
            Moves a specified file to a new location on remote machine, providing the option to specify a new file name.
            </summary>
            <param name="destFileName">The path to move the file to, which can specify a different file name.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="destFileName"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFile.UpdateStatus">
            <summary>
            Updates file status on the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFile.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.Attributes">
            <summary>
            Gets the file attributes.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.FullName">
            <summary>
            Gets the full path of the directory or file.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.Name">
            <summary>
            For files, gets the name of the file. For directories, gets the name of the last directory in the hierarchy if a hierarchy exists. 
            Otherwise, the Name property gets the name of the directory.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.LastAccessTime">
            <summary>
            Gets or sets the time the current file or directory was last accessed.
            </summary>
            <value>
            The time that the current file or directory was last accessed.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.LastWriteTime">
            <summary>
            Gets or sets the time when the current file or directory was last written to.
            </summary>
            <value>
            The time the current file was last written.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.LastAccessTimeUtc">
            <summary>
            Gets or sets the time, in coordinated universal time (UTC), the current file or directory was last accessed.
            </summary>
            <value>
            The time that the current file or directory was last accessed.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.LastWriteTimeUtc">
            <summary>
            Gets or sets the time, in coordinated universal time (UTC), when the current file or directory was last written to.
            </summary>
            <value>
            The time the current file was last written.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.Length">
            <summary>
            Gets or sets the size, in bytes, of the current file.
            </summary>
            <value>
            The size of the current file in bytes.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.UserId">
            <summary>
            Gets or sets file user id.
            </summary>
            <value>
            File user id.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.GroupId">
            <summary>
            Gets or sets file group id.
            </summary>
            <value>
            File group id.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsSocket">
            <summary>
            Gets a value indicating whether file represents a socket.
            </summary>
            <value>
              <c>true</c> if file represents a socket; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsSymbolicLink">
            <summary>
            Gets a value indicating whether file represents a symbolic link.
            </summary>
            <value>
            	<c>true</c> if file represents a symbolic link; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsRegularFile">
            <summary>
            Gets a value indicating whether file represents a regular file.
            </summary>
            <value>
            	<c>true</c> if file represents a regular file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsBlockDevice">
            <summary>
            Gets a value indicating whether file represents a block device.
            </summary>
            <value>
            	<c>true</c> if file represents a block device; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsDirectory">
            <summary>
            Gets a value indicating whether file represents a directory.
            </summary>
            <value>
            	<c>true</c> if file represents a directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsCharacterDevice">
            <summary>
            Gets a value indicating whether file represents a character device.
            </summary>
            <value>
            	<c>true</c> if file represents a character device; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsNamedPipe">
            <summary>
            Gets a value indicating whether file represents a named pipe.
            </summary>
            <value>
            	<c>true</c> if file represents a named pipe; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.OwnerCanRead">
            <summary>
            Gets or sets a value indicating whether the owner can read from this file.
            </summary>
            <value>
              <c>true</c> if owner can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.OwnerCanWrite">
            <summary>
            Gets or sets a value indicating whether the owner can write into this file.
            </summary>
            <value>
              <c>true</c> if owner can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.OwnerCanExecute">
            <summary>
            Gets or sets a value indicating whether the owner can execute this file.
            </summary>
            <value>
              <c>true</c> if owner can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.GroupCanRead">
            <summary>
            Gets or sets a value indicating whether the group members can read from this file.
            </summary>
            <value>
              <c>true</c> if group members can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.GroupCanWrite">
            <summary>
            Gets or sets a value indicating whether the group members can write into this file.
            </summary>
            <value>
              <c>true</c> if group members can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.GroupCanExecute">
            <summary>
            Gets or sets a value indicating whether the group members can execute this file.
            </summary>
            <value>
              <c>true</c> if group members can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.OthersCanRead">
            <summary>
            Gets or sets a value indicating whether the others can read from this file.
            </summary>
            <value>
              <c>true</c> if others can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.OthersCanWrite">
            <summary>
            Gets or sets a value indicating whether the others can write into this file.
            </summary>
            <value>
              <c>true</c> if others can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.OthersCanExecute">
            <summary>
            Gets or sets a value indicating whether the others can execute this file.
            </summary>
            <value>
              <c>true</c> if others can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.Extensions">
            <summary>
            Gets the extension part of the file.
            </summary>
            <value>
            File extensions.
            </value>
        </member>
        <member name="T:Renci.SshNet.Sftp.SftpFileAttributes">
            <summary>
            Contains SFTP file attributes.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileAttributes.SetPermissions(System.Int16)">
            <summary>
            Sets the permissions.
            </summary>
            <param name="mode">The mode.</param>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.LastAccessTime">
            <summary>
            Gets or sets the time the current file or directory was last accessed.
            </summary>
            <value>
            The time that the current file or directory was last accessed.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.LastWriteTime">
            <summary>
            Gets or sets the time when the current file or directory was last written to.
            </summary>
            <value>
            The time the current file was last written.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.Size">
            <summary>
            Gets or sets the size, in bytes, of the current file.
            </summary>
            <value>
            The size of the current file in bytes.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.UserId">
            <summary>
            Gets or sets file user id.
            </summary>
            <value>
            File user id.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupId">
            <summary>
            Gets or sets file group id.
            </summary>
            <value>
            File group id.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsSocket">
            <summary>
            Gets a value indicating whether file represents a socket.
            </summary>
            <value>
              <c>true</c> if file represents a socket; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsSymbolicLink">
            <summary>
            Gets a value indicating whether file represents a symbolic link.
            </summary>
            <value>
            	<c>true</c> if file represents a symbolic link; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsRegularFile">
            <summary>
            Gets a value indicating whether file represents a regular file.
            </summary>
            <value>
            	<c>true</c> if file represents a regular file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsBlockDevice">
            <summary>
            Gets a value indicating whether file represents a block device.
            </summary>
            <value>
            	<c>true</c> if file represents a block device; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsDirectory">
            <summary>
            Gets a value indicating whether file represents a directory.
            </summary>
            <value>
            	<c>true</c> if file represents a directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsCharacterDevice">
            <summary>
            Gets a value indicating whether file represents a character device.
            </summary>
            <value>
            	<c>true</c> if file represents a character device; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsNamedPipe">
            <summary>
            Gets a value indicating whether file represents a named pipe.
            </summary>
            <value>
            	<c>true</c> if file represents a named pipe; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.OwnerCanRead">
            <summary>
            Gets a value indicating whether the owner can read from this file.
            </summary>
            <value>
              <c>true</c> if owner can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.OwnerCanWrite">
            <summary>
            Gets a value indicating whether the owner can write into this file.
            </summary>
            <value>
              <c>true</c> if owner can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.OwnerCanExecute">
            <summary>
            Gets a value indicating whether the owner can execute this file.
            </summary>
            <value>
              <c>true</c> if owner can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupCanRead">
            <summary>
            Gets a value indicating whether the group members can read from this file.
            </summary>
            <value>
              <c>true</c> if group members can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupCanWrite">
            <summary>
            Gets a value indicating whether the group members can write into this file.
            </summary>
            <value>
              <c>true</c> if group members can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupCanExecute">
            <summary>
            Gets a value indicating whether the group members can execute this file.
            </summary>
            <value>
              <c>true</c> if group members can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.OthersCanRead">
            <summary>
            Gets a value indicating whether the others can read from this file.
            </summary>
            <value>
              <c>true</c> if others can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.OthersCanWrite">
            <summary>
            Gets a value indicating whether the others can write into this file.
            </summary>
            <value>
              <c>true</c> if others can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.OthersCanExecute">
            <summary>
            Gets a value indicating whether the others can execute this file.
            </summary>
            <value>
              <c>true</c> if others can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.Extensions">
            <summary>
            Gets or sets the extensions.
            </summary>
            <value>
            The extensions.
            </value>
        </member>
        <member name="T:Renci.SshNet.Sftp.SftpFileStream">
            <summary>
            Exposes a System.IO.Stream around a remote SFTP file, supporting both synchronous and asynchronous read and write operations.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in <paramref name="buffer"/> at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="callback">An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that represents the asynchronous read, which could still be pending.
            </returns>
            <exception cref="T:System.IO.IOException">Attempted an asynchronous read past the end of the stream, or a disk error occurs. </exception>
              
            <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
              
            <exception cref="T:System.NotSupportedException">The current Stream implementation does not support the read operation. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.EndRead(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous read to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>
            The number of bytes read from the stream, between zero (0) and the number of bytes you requested. Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="asyncResult"/> is null. </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="asyncResult"/> did not originate from a <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> method on the current stream. </exception>
              
            <exception cref="T:System.IO.IOException">The stream is closed or an internal error has occurred.</exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in <paramref name="buffer"/> from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="callback">An optional asynchronous callback, to be called when the write is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>
            An IAsyncResult that represents the asynchronous write, which could still be pending.
            </returns>
            <exception cref="T:System.IO.IOException">Attempted an asynchronous write past the end of the stream, or a disk error occurs. </exception>
              
            <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
              
            <exception cref="T:System.NotSupportedException">The current Stream implementation does not support the write operation. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.EndWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous write operation.
            </summary>
            <param name="asyncResult">A reference to the outstanding asynchronous I/O request.</param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="asyncResult"/> is null. </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="asyncResult"/> did not originate from a <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> method on the current stream. </exception>
              
            <exception cref="T:System.IO.IOException">The stream is closed or an internal error has occurred.</exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Close">
            <summary>
            Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the file.
            </summary>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ObjectDisposedException">Stream is closed.</exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is larger than the buffer length. </exception>
              
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> is negative. </exception>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.IO.IOException">Read operation failed.</exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/> must be greater than zero.</exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is greater than the buffer length. </exception>
              
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> is negative. </exception>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support writing, or the stream is already closed. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.FlushReadBuffer">
            <summary>
            Flushes the read data from the buffer.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.FlushWriteBuffer">
            <summary>
            Flush any buffered write data to the file.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.SetupRead">
            <summary>
            Setups the read.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.SetupWrite">
            <summary>
            Setups the write.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <returns>A long value representing the length of the stream in bytes.</returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.IO.IOException">IO operation failed. </exception>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <returns>The current position within the stream.</returns>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.IsAsync">
            <summary>
            Gets a value indicating whether the FileStream was opened asynchronously or synchronously.
            </summary>
            <value>
              <c>true</c> if this instance is async; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.Name">
            <summary>
            Gets the name of the FileStream that was passed to the constructor.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.Handle">
            <summary>
            Gets the operating system file handle for the file that the current SftpFileStream object encapsulates.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.Timeout">
            <summary>
            Gets or sets the operation timeout.
            </summary>
            <value>
            The timeout.
            </value>
        </member>
        <member name="T:Renci.SshNet.Sftp.SftpFileSytemInformation">
            <summary>
            Contains File system information exposed by statvfs@openssh.com request.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileSytemInformation.#ctor(System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Sftp.SftpFileSytemInformation"/> class.
            </summary>
            <param name="bsize">The bsize.</param>
            <param name="frsize">The frsize.</param>
            <param name="blocks">The blocks.</param>
            <param name="bfree">The bfree.</param>
            <param name="bavail">The bavail.</param>
            <param name="files">The files.</param>
            <param name="ffree">The ffree.</param>
            <param name="favail">The favail.</param>
            <param name="sid">The sid.</param>
            <param name="flag">The flag.</param>
            <param name="namemax">The namemax.</param>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileSytemInformation.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileSytemInformation.TotalBlocks">
            <summary>
            Gets the total blocks.
            </summary>
            <value>
            The total blocks.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileSytemInformation.FreeBlocks">
            <summary>
            Gets the free blocks.
            </summary>
            <value>
            The free blocks.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileSytemInformation.AvailableBlocks">
            <summary>
            Gets the available blocks.
            </summary>
            <value>
            The available blocks.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileSytemInformation.TotalNodes">
            <summary>
            Gets the total nodes.
            </summary>
            <value>
            The total nodes.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileSytemInformation.FreeNodes">
            <summary>
            Gets the free nodes.
            </summary>
            <value>
            The free nodes.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileSytemInformation.AvailableNodes">
            <summary>
            Gets the available nodes.
            </summary>
            <value>
            The available nodes.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileSytemInformation.Sid">
            <summary>
            Gets the sid.
            </summary>
            <value>
            The sid.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileSytemInformation.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            <c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileSytemInformation.SupportsSetUid">
            <summary>
            Gets a value indicating whether [supports set uid].
            </summary>
            <value>
              <c>true</c> if [supports set uid]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileSytemInformation.MaxNameLenght">
            <summary>
            Gets the max name lenght.
            </summary>
            <value>
            The max name lenght.
            </value>
        </member>
        <member name="T:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult">
            <summary>
            Encapsulates the results of an asynchronous directory list operation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult.Update(System.Int32)">
            <summary>
            Updates asynchronous operation status information.
            </summary>
            <param name="filesRead">The files read.</param>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult.FilesRead">
            <summary>
            Gets the number of files read so far.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Init">
            <summary>
            SSH_FXP_INIT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Version">
            <summary>
            SSH_FXP_VERSION
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Open">
            <summary>
            SSH_FXP_OPEN
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Close">
            <summary>
            SSH_FXP_CLOSE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Read">
            <summary>
            SSH_FXP_READ
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Write">
            <summary>
            SSH_FXP_WRITE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.LStat">
            <summary>
            SSH_FXP_LSTAT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.FStat">
            <summary>
            SSH_FXP_FSTAT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.SetStat">
            <summary>
            SSH_FXP_SETSTAT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.FSetStat">
            <summary>
            SSH_FXP_FSETSTAT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.OpenDir">
            <summary>
            SSH_FXP_OPENDIR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.ReadDir">
            <summary>
            SSH_FXP_READDIR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Remove">
            <summary>
            SSH_FXP_REMOVE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.MkDir">
            <summary>
            SSH_FXP_MKDIR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.RmDir">
            <summary>
            SSH_FXP_RMDIR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.RealPath">
            <summary>
            SSH_FXP_REALPATH
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Stat">
            <summary>
            SSH_FXP_STAT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Rename">
            <summary>
            SSH_FXP_RENAME
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.ReadLink">
            <summary>
            SSH_FXP_READLINK
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.SymLink">
            <summary>
            SSH_FXP_SYMLINK
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Link">
            <summary>
            SSH_FXP_LINK
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Block">
            <summary>
            SSH_FXP_BLOCK
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Unblock">
            <summary>
            SSH_FXP_UNBLOCK
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Status">
            <summary>
            SSH_FXP_STATUS
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Handle">
            <summary>
            SSH_FXP_HANDLE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Data">
            <summary>
            SSH_FXP_DATA
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Name">
            <summary>
            SSH_FXP_NAME
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Attrs">
            <summary>
            SSH_FXP_ATTRS
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.Extended">
            <summary>
            SSH_FXP_EXTENDED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SftpMessageTypes.ExtendedReply">
            <summary>
            SSH_FXP_EXTENDED_REPLY
            </summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.SubsystemSession">
            <summary>
            Base class for SSH subsystem implementations
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.SubsystemSession._operationTimeout">
            <summary>
            Specifies a timeout to wait for operation to complete
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SubsystemSession.#ctor(Renci.SshNet.Session,System.String,System.TimeSpan,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the SubsystemSession class.
            </summary>
            <param name="session">The session.</param>
            <param name="subsystemName">Name of the subsystem.</param>
            <param name="operationTimeout">The operation timeout.</param>
            <exception cref="T:System.ArgumentNullException">session</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/> or <paramref name="subsystemName"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SubsystemSession.Connect">
            <summary>
            Connects subsystem on SSH channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SubsystemSession.Disconnect">
            <summary>
            Disconnects subsystem channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SubsystemSession.SendData(System.Byte[])">
            <summary>
            Sends data to the subsystem.
            </summary>
            <param name="data">The data to be sent.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SubsystemSession.OnChannelOpen">
            <summary>
            Called when channel is open.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SubsystemSession.OnDataReceived(System.UInt32,System.Byte[])">
            <summary>
            Called when data is received.
            </summary>
            <param name="dataTypeCode">The data type code.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SubsystemSession.RaiseError(System.Exception)">
            <summary>
            Raises the error.
            </summary>
            <param name="error">The error.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SubsystemSession.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SubsystemSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SubsystemSession.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Renci.SshNet.Sftp.SubsystemSession"/> class.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Sftp.SubsystemSession.ErrorOccurred">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Sftp.SubsystemSession.Disconnected">
            <summary>
            Occurs when session has been disconnected form the server.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SubsystemSession.ChannelNumber">
            <summary>
            Gets the channel number.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.GetCanonicalPath(System.String)">
            <summary>
            Resolves path into absolute path on the server.
            </summary>
            <param name="path">Path to resolve.</param>
            <returns>Absolute path</returns>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestOpen(System.String,Renci.SshNet.Sftp.Flags,System.Boolean)">
            <summary>
            Performs SSH_FXP_OPEN request
            </summary>
            <param name="path">The path.</param>
            <param name="flags">The flags.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns>File handle.</returns>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestClose(System.Byte[])">
            <summary>
            Performs SSH_FXP_CLOSE request.
            </summary>
            <param name="handle">The handle.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestRead(System.Byte[],System.UInt64,System.UInt32)">
            <summary>
            Performs SSH_FXP_READ request.
            </summary>
            <param name="handle">The handle.</param>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <returns>data array; null if EOF</returns>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestWrite(System.Byte[],System.UInt64,System.Byte[],System.Threading.EventWaitHandle,System.Action{Renci.SshNet.Sftp.Responses.SftpStatusResponse})">
            <summary>
            Performs SSH_FXP_WRITE request.
            </summary>
            <param name="handle">The handle.</param>
            <param name="offset">The offset.</param>
            <param name="data">The data to send.</param>
            <param name="wait">The wait event handle if needed.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestLStat(System.String,System.Boolean)">
            <summary>
            Performs SSH_FXP_LSTAT request.
            </summary>
            <param name="path">The path.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns>
            File attributes
            </returns>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestFStat(System.Byte[],System.Boolean)">
            <summary>
            Performs SSH_FXP_FSTAT request.
            </summary>
            <param name="handle">The handle.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns>
            File attributes
            </returns>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestSetStat(System.String,Renci.SshNet.Sftp.SftpFileAttributes)">
            <summary>
            Performs SSH_FXP_SETSTAT request.
            </summary>
            <param name="path">The path.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestFSetStat(System.Byte[],Renci.SshNet.Sftp.SftpFileAttributes)">
            <summary>
            Performs SSH_FXP_FSETSTAT request.
            </summary>
            <param name="handle">The handle.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestOpenDir(System.String,System.Boolean)">
            <summary>
            Performs SSH_FXP_OPENDIR request
            </summary>
            <param name="path">The path.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns>File handle.</returns>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestReadDir(System.Byte[])">
            <summary>
            Performs SSH_FXP_READDIR request
            </summary>
            <param name="handle">The handle.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestRemove(System.String)">
            <summary>
            Performs SSH_FXP_REMOVE request.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestMkDir(System.String)">
            <summary>
            Performs SSH_FXP_MKDIR request.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestRmDir(System.String)">
            <summary>
            Performs SSH_FXP_RMDIR request.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestRealPath(System.String,System.Boolean)">
            <summary>
            Performs SSH_FXP_REALPATH request
            </summary>
            <param name="path">The path.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestStat(System.String,System.Boolean)">
            <summary>
            Performs SSH_FXP_STAT request.
            </summary>
            <param name="path">The path.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns>
            File attributes
            </returns>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestRename(System.String,System.String)">
            <summary>
            Performs SSH_FXP_RENAME request.
            </summary>
            <param name="oldPath">The old path.</param>
            <param name="newPath">The new path.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestReadLink(System.String,System.Boolean)">
            <summary>
            Performs SSH_FXP_READLINK request.
            </summary>
            <param name="path">The path.</param>
            <param name="nullOnError">if set to <c>true</c> returns null instead of throwing an exception.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestSymLink(System.String,System.String)">
            <summary>
            Performs SSH_FXP_SYMLINK request.
            </summary>
            <param name="linkpath">The linkpath.</param>
            <param name="targetpath">The targetpath.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestPosixRename(System.String,System.String)">
            <summary>
            Performs posix-rename@openssh.com extended request.
            </summary>
            <param name="oldPath">The old path.</param>
            <param name="newPath">The new path.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestStatVfs(System.String,System.Boolean)">
            <summary>
            Performs statvfs@openssh.com extended request.
            </summary>
            <param name="path">The path.</param>
            <param name="nullOnError">if set to <c>true</c> [null on error].</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.RequestFStatVfs(System.Byte[],System.Boolean)">
            <summary>
            Performs fstatvfs@openssh.com extended request.
            </summary>
            <param name="handle">The file handle.</param>
            <param name="nullOnError">if set to <c>true</c> [null on error].</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.HardLink(System.String,System.String)">
            <summary>
            Performs hardlink@openssh.com extended request.
            </summary>
            <param name="oldPath">The old path.</param>
            <param name="newPath">The new path.</param>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpSession.WorkingDirectory">
            <summary>
            Gets remote working directory.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpSession.ProtocolVersion">
            <summary>
            Gets SFTP protocol version.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpSession.NextRequestId">
            <summary>
            Gets the next request id for sftp session.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.SftpUploadAsyncResult">
            <summary>
            Encapsulates the results of an asynchronous upload operation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpUploadAsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Sftp.SftpUploadAsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpUploadAsyncResult.Update(System.UInt64)">
            <summary>
            Updates asynchronous operation status information.
            </summary>
            <param name="uploadedBytes">Number of uploaded bytes.</param>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpUploadAsyncResult.IsUploadCanceled">
            <summary>
            Gets or sets a value indicating whether to cancel asynchronous upload operation
            </summary>
            <value>
            <c>true</c> if upload operation to be canceled; otherwise, <c>false</c>.
            </value>
            <remarks>
            Upload operation will be canceled after finishing uploading current buffer.
            </remarks>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpUploadAsyncResult.UploadedBytes">
            <summary>
            Gets the number of uploaded bytes.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.Ok">
            <summary>
            SSH_FX_OK
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.Eof">
            <summary>
            SSH_FX_EOF
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.NoSuchFile">
            <summary>
            SSH_FX_NO_SUCH_FILE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.PermissionDenied">
            <summary>
            SSH_FX_PERMISSION_DENIED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.Failure">
            <summary>
            SSH_FX_FAILURE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.BadMessage">
            <summary>
            SSH_FX_BAD_MESSAGE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.NoConnection">
            <summary>
            SSH_FX_NO_CONNECTION
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.ConnectionLost">
            <summary>
            SSH_FX_CONNECTION_LOST
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.OperationUnsupported">
            <summary>
            SSH_FX_OP_UNSUPPORTED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.InvalidHandle">
            <summary>
            SSH_FX_INVALID_HANDLE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.NoSuchPath">
            <summary>
            SSH_FX_NO_SUCH_PATH
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.FileAlreadyExists">
            <summary>
            SSH_FX_FILE_ALREADY_EXISTS
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.WriteProtect">
            <summary>
            SSH_FX_WRITE_PROTECT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.NoMedia">
            <summary>
            SSH_FX_NO_MEDIA
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.NoSpaceOnFilesystem">
            <summary>
            SSH_FX_NO_SPACE_ON_FILESYSTEM
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.QuotaExceeded">
            <summary>
            SSH_FX_QUOTA_EXCEEDED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.UnknownPrincipal">
            <summary>
            SSH_FX_UNKNOWN_PRINCIPAL
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.LockConflict">
            <summary>
            SSH_FX_LOCK_CONFLICT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.DirNotEmpty">
            <summary>
            SSH_FX_DIR_NOT_EMPTY
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.NotDirectory">
            <summary>
            SSH_FX_NOT_A_DIRECTORY
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.InvalidFilename">
            <summary>
            SSH_FX_INVALID_FILENAME
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.LinkLoop">
            <summary>
            SSH_FX_LINK_LOOP
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.CannotDelete">
            <summary>
            SSH_FX_CANNOT_DELETE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.InvalidParameter">
            <summary>
            SSH_FX_INVALID_PARAMETER
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.FileIsADirectory">
            <summary>
            SSH_FX_FILE_IS_A_DIRECTORY
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.ByteRangeLockConflict">
            <summary>
            SSH_FX_BYTE_RANGE_LOCK_CONFLICT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.ByteRangeLockRefused">
            <summary>
            SSH_FX_BYTE_RANGE_LOCK_REFUSED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.DeletePending">
            <summary>
            SSH_FX_DELETE_PENDING
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.FileCorrupt">
            <summary>
            SSH_FX_FILE_CORRUPT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.OwnerInvalid">
            <summary>
            SSH_FX_OWNER_INVALID
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.GroupInvalid">
            <summary>
            SSH_FX_GROUP_INVALID
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.StatusCodes.NoMatchingByteRangeLock">
            <summary>
            SSH_FX_NO_MATCHING_BYTE_RANGE_LOCK
            </summary>
        </member>
        <member name="T:Renci.SshNet.Shell">
            <summary>
            Represents instance of the SSH shell object
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Renci.SshNet.Shell.#ctor(Renci.SshNet.Session,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Shell"/> class.
            </summary>
            <param name="session">The session.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalMode">The terminal mode.</param>
            <param name="bufferSize">Size of the buffer for output stream.</param>
        </member>
        <member name="M:Renci.SshNet.Shell.Start">
            <summary>
            Starts this shell.
            </summary>
            <exception cref="T:Renci.SshNet.Common.SshException">Shell is started.</exception>
        </member>
        <member name="M:Renci.SshNet.Shell.Stop">
            <summary>
            Stops this shell.
            </summary>
            <exception cref="T:Renci.SshNet.Common.SshException">Shell is not started.</exception>
        </member>
        <member name="M:Renci.SshNet.Shell.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Shell.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Shell.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Session"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Shell.IsStarted">
            <summary>
            Gets a value indicating whether this shell is started.
            </summary>
            <value>
            	<c>true</c> if started is started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Renci.SshNet.Shell.Starting">
            <summary>
            Occurs when shell is starting.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Shell.Started">
            <summary>
            Occurs when shell is started.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Shell.Stopping">
            <summary>
            Occurs when shell is stopping.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Shell.Stopped">
            <summary>
            Occurs when shell is stopped.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Shell.ErrorOccurred">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="T:Renci.SshNet.ShellStream">
            <summary>
            Contains operation for working with SSH Shell.
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is larger than the buffer length. </exception>
              
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> is negative. </exception>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            This method is not supported.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.ShellStream.SetLength(System.Int64)">
            <summary>
            This method is not supported.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is greater than the buffer length. </exception>
              
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> is negative. </exception>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Expect(Renci.SshNet.ExpectAction[])">
            <summary>
            Expects the specified expression and performs action when one is found.
            </summary>
            <param name="expectActions">The expected expressions and actions to perform.</param>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Expect(System.TimeSpan,Renci.SshNet.ExpectAction[])">
            <summary>
            Expects the specified expression and performs action when one is found.
            </summary>
            <param name="timeout">Time to wait for input.</param>
            <param name="expectActions">The expected expressions and actions to perform, if the specified time elapsed and expected condition have not met, that method will exit without executing any action.</param>
        </member>
        <member name="M:Renci.SshNet.ShellStream.BeginExpect(Renci.SshNet.ExpectAction[])">
            <summary>
            Begins the expect.
            </summary>
            <param name="expectActions">The expect actions.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ShellStream.BeginExpect(System.AsyncCallback,Renci.SshNet.ExpectAction[])">
            <summary>
            Begins the expect.
            </summary>
            <param name="callback">The callback.</param>
            <param name="expectActions">The expect actions.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ShellStream.BeginExpect(System.AsyncCallback,System.Object,Renci.SshNet.ExpectAction[])">
            <summary>
            Begins the expect.
            </summary>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <param name="expectActions">The expect actions.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ShellStream.BeginExpect(System.TimeSpan,System.AsyncCallback,System.Object,Renci.SshNet.ExpectAction[])">
            <summary>
            Begins the expect.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <param name="expectActions">The expect actions.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ShellStream.EndExpect(System.IAsyncResult)">
            <summary>
            Ends the execute.
            </summary>
            <param name="asyncResult">The async result.</param>
            <exception cref="T:System.ArgumentException">Either the IAsyncResult object did not come from the corresponding async method on this type, or EndExecute was called multiple times with the same IAsyncResult.</exception>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Expect(System.String)">
            <summary>
            Expects the expression specified by text.
            </summary>
            <param name="text">The text to expect.</param>
            <returns>
            Text available in the shell that ends with expected text.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Expect(System.String,System.TimeSpan)">
            <summary>
            Expects the expression specified by text.
            </summary>
            <param name="text">The text to expect.</param>
            <param name="timeout">Time to wait for input.</param>
            <returns>
            Text available in the shell that ends with expected text, if the specified time elapsed returns null.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Expect(System.Text.RegularExpressions.Regex)">
            <summary>
            Expects the expression specified by regular expression.
            </summary>
            <param name="regex">The regular expression to expect.</param>
            <returns>Text available in the shell that contains all the text that ends with expected expression.</returns>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Expect(System.Text.RegularExpressions.Regex,System.TimeSpan)">
            <summary>
            Expects the expression specified by regular expression.
            </summary>
            <param name="regex">The regular expression to expect.</param>
            <param name="timeout">Time to wait for input.</param>
            <returns>
            Text available in the shell that contains all the text that ends with expected expression, if the specified time elapsed returns null.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ShellStream.ReadLine">
            <summary>
            Reads the line from the shell. If line is not available it will block the execution and will wait for new line.
            </summary>
            <returns>The line read from the shell.</returns>
        </member>
        <member name="M:Renci.SshNet.ShellStream.ReadLine(System.TimeSpan)">
            <summary>
            Reads the line from the shell. If line is not available it will block the execution and will wait for new line.
            </summary>
            <param name="timeout">Time to wait for input.</param>
            <returns>
            The line read from the shell, if the specified time elapsed returns null.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Read">
            <summary>
            Reads text available in the shell.
            </summary>
            <returns>The text available in the shell.</returns>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Write(System.String)">
            <summary>
            Writes the specified text to the shell.
            </summary>
            <param name="text">The text to be written to the shell.</param>
        </member>
        <member name="M:Renci.SshNet.ShellStream.WriteLine(System.String)">
            <summary>
            Writes the line to the shell.
            </summary>
            <param name="line">The line to be written to the shell.</param>
        </member>
        <member name="M:Renci.SshNet.ShellStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.ShellStream.WaitHandle(System.Threading.WaitHandle)">
            <summary>
            Waits for the handle to be signaled or for an error to occurs.
            </summary>
            <param name="waitHandle">The wait handle.</param>
        </member>
        <member name="E:Renci.SshNet.ShellStream.DataReceived">
            <summary>
            Occurs when data was received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.ShellStream.ErrorOccurred">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ShellStream.DataAvailable">
            <summary>
            Gets a value that indicates whether data is available on the <see cref="T:Renci.SshNet.ShellStream"/> to be read.
            </summary>
            <value>
              <c>true</c> if data is available to be read; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.ShellStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.ShellStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.ShellStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.ShellStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <returns>A long value representing the length of the stream in bytes.</returns>
              
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="P:Renci.SshNet.ShellStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <returns>The current position within the stream.</returns>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="T:Renci.SshNet.SshClient">
            <summary>
            Provides client connection to SSH server.
            </summary>
        </member>
        <member name="F:Renci.SshNet.SshClient._forwardedPorts">
            <summary>
            Holds the list of forwarded ports
            </summary>
        </member>
        <member name="F:Renci.SshNet.SshClient._disposeConnectionInfo">
            <summary>
            If true, causes the connectionInfo object to be disposed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.SshClient.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SshClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\PasswordConnectionInfoTest.cs" region="Example PasswordConnectionInfo" language="C#" title="Connect using PasswordConnectionInfo object"/>
                <code source="..\..\Renci.SshNet.Tests\Classes\PasswordConnectionInfoTest.cs" region="Example PasswordConnectionInfo PasswordExpired" language="C#" title="Connect using PasswordConnectionInfo object with passwod change option"/>
                <code source="..\..\Renci.SshNet.Tests\Classes\PrivateKeyConnectionInfoTest.cs" region="Example PrivateKeyConnectionInfo PrivateKeyFile" language="C#" title="Connect using PrivateKeyConnectionInfo"/>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient Connect Timeout" language="C#" title="Specify connection timeout when connecting"/>
            </example>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionInfo"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.SshClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SshClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.SshClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SshClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient(host, username) Connect" language="C#" title="Connect using username and password"/>
            </example>
            <exception cref="T:System.ArgumentNullException"><paramref name="password"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, or <paramref name="username"/> is null or contains whitespace characters.</exception>
        </member>
        <member name="M:Renci.SshNet.SshClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SshClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient(host, username) Connect PrivateKeyFile" language="C#" title="Connect using username and private key"/>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient(host, username) Connect PrivateKeyFile PassPhrase" language="C#" title="Connect using username and private key and pass phrase"/>
            </example>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, -or- <paramref name="username"/> is null or contains whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port"/> is not within <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.SshClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SshClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient(host, username) Connect PrivateKeyFile" language="C#" title="Connect using private key"/>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient(host, username) Connect PrivateKeyFile PassPhrase" language="C#" title="Connect using private key and pass phrase"/>
            </example>
            <exception cref="T:System.ArgumentNullException"><paramref name="keyFiles"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is invalid, -or- <paramref name="username"/> is null or contains whitespace characters.</exception>
        </member>
        <member name="M:Renci.SshNet.SshClient.OnDisconnecting">
            <summary>
            Called when client is disconnecting from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.SshClient.AddForwardedPort(Renci.SshNet.ForwardedPort)">
            <summary>
            Adds the forwarded port.
            </summary>
            <param name="port">The port.</param>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\ForwardedPortRemoteTest.cs" region="Example SshClient AddForwardedPort Start Stop ForwardedPortRemote" language="C#" title="Remote port forwarding"/>
                <code source="..\..\Renci.SshNet.Tests\Classes\ForwardedPortLocalTest.cs" region="Example SshClient AddForwardedPort Start Stop ForwardedPortLocal" language="C#" title="Local port forwarding"/>
            </example>
            <exception cref="T:System.InvalidOperationException">Forwarded port is already added to a different client.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="port"/> is null.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Renci.SshNet.SshClient.RemoveForwardedPort(Renci.SshNet.ForwardedPort)">
            <summary>
            Stops and removes the forwarded port from the list.
            </summary>
            <param name="port">Forwarded port.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="port"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateCommand(System.String)">
            <summary>
            Creates the command to be executed.
            </summary>
            <param name="commandText">The command text.</param>
            <returns><see cref="T:Renci.SshNet.SshCommand"/> object.</returns>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateCommand(System.String,System.Text.Encoding)">
            <summary>
            Creates the command to be executed with specified encoding.
            </summary>
            <param name="commandText">The command text.</param>
            <param name="encoding">The encoding to use for results.</param>
            <returns><see cref="T:Renci.SshNet.SshCommand"/> object which uses specified encoding.</returns>
            <remarks>TThis method will change current default encoding.</remarks>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="commandText"/> or <paramref name="encoding"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.SshClient.RunCommand(System.String)">
            <summary>
            Creates and executes the command.
            </summary>
            <param name="commandText">The command text.</param>
            <returns>Returns an instance of <see cref="T:Renci.SshNet.SshCommand"/> with execution results.</returns>
            <remarks>This method internally uses asynchronous calls.</remarks>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.cs" region="Example SshCommand RunCommand Result" language="C#" title="Running simple command"/>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.NET40.cs" region="Example SshCommand RunCommand Parallel" language="C#" title="Run many commands in parallel"/>
            </example>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">Invalid Operation - An existing channel was used to execute this command.</exception>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="commandText"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShell(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32},System.Int32)">
            <summary>
            Creates the shell.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModes">The terminal mode.</param>
            <param name="bufferSize">Size of the internal read buffer.</param>
            <returns>
            Returns a representation of a <see cref="T:Renci.SshNet.Shell"/> object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShell(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})">
            <summary>
            Creates the shell.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModes">The terminal mode.</param>
            <returns>
            Returns a representation of a <see cref="T:Renci.SshNet.Shell"/> object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShell(System.IO.Stream,System.IO.Stream,System.IO.Stream)">
            <summary>
            Creates the shell.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <returns>
            Returns a representation of a <see cref="T:Renci.SshNet.Shell"/> object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShell(System.Text.Encoding,System.String,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32},System.Int32)">
            <summary>
            Creates the shell.
            </summary>
            <param name="encoding">The encoding to use to send the input.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModes">The terminal mode.</param>
            <param name="bufferSize">Size of the internal read buffer.</param>
            <returns>
            Returns a representation of a <see cref="T:Renci.SshNet.Shell"/> object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShell(System.Text.Encoding,System.String,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})">
            <summary>
            Creates the shell.
            </summary>
            <param name="encoding">The encoding.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModes">The terminal modes.</param>
            <returns>
            Returns a representation of a <see cref="T:Renci.SshNet.Shell"/> object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShell(System.Text.Encoding,System.String,System.IO.Stream,System.IO.Stream)">
            <summary>
            Creates the shell.
            </summary>
            <param name="encoding">The encoding.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <returns>
            Returns a representation of a <see cref="T:Renci.SshNet.Shell"/> object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShellStream(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int32)">
            <summary>
            Creates the shell stream.
            </summary>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <returns>
            Reference to Created ShellStream object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShellStream(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})">
            <summary>
            Creates the shell stream.
            </summary>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="terminalModeValues">The terminal mode values.</param>
            <returns>
            Reference to Created ShellStream object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="P:Renci.SshNet.SshClient.ForwardedPorts">
            <summary>
            Gets the list of forwarded ports.
            </summary>
        </member>
        <member name="T:Renci.SshNet.SshCommand">
            <summary>
            Represents SSH command that can be executed.
            </summary>
            <summary>
            Represents SSH command that can be executed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.SshCommand.#ctor(Renci.SshNet.Session,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SshCommand"/> class.
            </summary>
            <param name="session">The session.</param>
            <param name="commandText">The command text.</param>
            <param name="encoding">The encoding.</param>
            <exception cref="T:System.ArgumentNullException">Either <paramref name="session"/>, <paramref name="commandText"/> or <paramref name="encoding"/> is null.</exception>
        </member>
        <member name="M:Renci.SshNet.SshCommand.BeginExecute">
            <summary>
            Begins an asynchronous command execution.
            </summary>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that represents the asynchronous command execution, which could still be pending.
            </returns>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.cs" region="Example SshCommand CreateCommand BeginExecute IsCompleted EndExecute" language="C#" title="Asynchronous Command Execution"/>
            </example>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">Invalid operation.</exception>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">Operation has timed out.</exception>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
        </member>
        <member name="M:Renci.SshNet.SshCommand.BeginExecute(System.AsyncCallback)">
            <summary>
            Begins an asynchronous command execution.
            </summary>
            <param name="callback">An optional asynchronous callback, to be called when the command execution is complete.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that represents the asynchronous command execution, which could still be pending.
            </returns>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">Invalid operation.</exception>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">Operation has timed out.</exception>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
        </member>
        <member name="M:Renci.SshNet.SshCommand.BeginExecute(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous command execution.
            </summary>
            <param name="callback">An optional asynchronous callback, to be called when the command execution is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that represents the asynchronous command execution, which could still be pending.
            </returns>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">Invalid operation.</exception>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">Operation has timed out.</exception>
            <exception cref="T:System.InvalidOperationException">Asynchronous operation is already in progress.</exception>
            <exception cref="T:System.ArgumentException">CommandText property is empty.</exception>
        </member>
        <member name="M:Renci.SshNet.SshCommand.BeginExecute(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous command execution. 22
            </summary>
            <param name="commandText">The command text.</param>
            <param name="callback">An optional asynchronous callback, to be called when the command execution is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that represents the asynchronous command execution, which could still be pending.
            </returns>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">Operation has timed out.</exception>
        </member>
        <member name="M:Renci.SshNet.SshCommand.EndExecute(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous command execution to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>Command execution result.</returns>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.cs" region="Example SshCommand CreateCommand BeginExecute IsCompleted EndExecute" language="C#" title="Asynchronous Command Execution"/>
            </example>
            <exception cref="T:System.ArgumentException">Either the IAsyncResult object did not come from the corresponding async method on this type, or EndExecute was called multiple times with the same IAsyncResult.</exception>
            <exception cref="T:System.ArgumentException">Either the IAsyncResult object did not come from the corresponding async method on this type, or EndExecute was called multiple times with the same IAsyncResult.</exception>
        </member>
        <member name="M:Renci.SshNet.SshCommand.Execute">
            <summary>
            Executes command specified by <see cref="P:Renci.SshNet.SshCommand.CommandText"/> property.
            </summary>
            <returns>Command execution result</returns>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.cs" region="Example SshCommand CreateCommand Execute" language="C#" title="Simple command execution"/>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.cs" region="Example SshCommand CreateCommand Error" language="C#" title="Display command execution error"/>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.cs" region="Example SshCommand CreateCommand Execute CommandTimeout" language="C#" title="Specify command execution timeout"/>
            </example>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">Operation has timed out.</exception>
        </member>
        <member name="M:Renci.SshNet.SshCommand.CancelAsync">
            <summary>
            Cancels command execution in asynchronous scenarios. 
            </summary>
        </member>
        <member name="M:Renci.SshNet.SshCommand.Execute(System.String)">
            <summary>
            Executes the specified command text.
            </summary>
            <param name="commandText">The command text.</param>
            <returns>Command execution result</returns>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">Operation has timed out.</exception>
        </member>
        <member name="M:Renci.SshNet.SshCommand.WaitHandle(System.Threading.WaitHandle)">
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">Command '{0}' has timed out.</exception>
            <remarks>The actual command will be included in the exception message.</remarks>
        </member>
        <member name="M:Renci.SshNet.SshCommand.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.SshCommand.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.SshCommand.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.SshCommand.CommandText">
            <summary>
            Gets the command text.
            </summary>
        </member>
        <member name="P:Renci.SshNet.SshCommand.CommandTimeout">
            <summary>
            Gets or sets the command timeout.
            </summary>
            <value>
            The command timeout.
            </value>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.cs" region="Example SshCommand CreateCommand Execute CommandTimeout" language="C#" title="Specify command execution timeout" />
            </example>
        </member>
        <member name="P:Renci.SshNet.SshCommand.ExitStatus">
            <summary>
            Gets the command exit status.
            </summary>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.cs" region="Example SshCommand RunCommand ExitStatus" language="C#" title="Get command execution exit status" />
            </example>
        </member>
        <member name="P:Renci.SshNet.SshCommand.OutputStream">
            <summary>
            Gets the output stream.
            </summary>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.cs" region="Example SshCommand CreateCommand Execute OutputStream" language="C#" title="Use OutputStream to get command execution output" />
            </example>
        </member>
        <member name="P:Renci.SshNet.SshCommand.ExtendedOutputStream">
            <summary>
            Gets the extended output stream.
            </summary>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.cs" region="Example SshCommand CreateCommand Execute ExtendedOutputStream" language="C#" title="Use ExtendedOutputStream to get command debug execution output" />
            </example>
        </member>
        <member name="P:Renci.SshNet.SshCommand.Result">
            <summary>
            Gets the command execution result.
            </summary>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.cs" region="Example SshCommand RunCommand Result" language="C#" title="Running simple command" />
            </example>
        </member>
        <member name="P:Renci.SshNet.SshCommand.Error">
            <summary>
            Gets the command execution error.
            </summary>
            <example>
                <code source="..\..\Renci.SshNet.Tests\Classes\SshCommandTest.cs" region="Example SshCommand CreateCommand Error" language="C#" title="Display command execution error" />
            </example>
        </member>
    </members>
</doc>
